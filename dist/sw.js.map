{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./node_modules/readable-stream/duplex-browser.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/tanh-b.js","webpack:///./node_modules/brain.js/dist/utilities/random-weight.js","webpack:///./node_modules/brain.js/dist/utilities/to-array.js","webpack:///./node_modules/brain.js/dist/utilities/data-formatter.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/multiply.js","webpack:///./node_modules/brain.js/dist/lookup.js","webpack:///./node_modules/brain.js/dist/utilities/ones.js","webpack:///./node_modules/thaw.js/dist/block.js","webpack:///./node_modules/gpu.js/dist/core/gpu-core.js","webpack:///./node_modules/gpu.js/dist/backend/cpu/kernel.js","webpack:///./node_modules/gpu.js/dist/core/utils-core.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/kernel.js","webpack:///./node_modules/gpu.js/dist/backend/kernel-run-shortcut.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/gpu.js/dist/index.js","webpack:///./node_modules/brain.js/dist/recurrent/rnn-time-step.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/equation.js","webpack:///./node_modules/readable-stream/lib/_stream_transform.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/max-i.js","webpack:///./node_modules/readable-stream/writable-browser.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/kernel.js","webpack:///./node_modules/brain.js/dist/neural-network-gpu.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/shader-frag.js","webpack:///./src/workers/SmoothieNeuralNetWorker.js","webpack:///./node_modules/brain.js/dist/utilities/randos.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/sigmoid.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/copy.js","webpack:///./node_modules/core-util-is/lib/util.js","webpack:///./node_modules/brain.js/dist/utilities/range.js","webpack:///./node_modules/inherits/inherits_browser.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/function-builder.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/tanh.js","webpack:///./node_modules/readable-stream/lib/internal/streams/stream-browser.js","webpack:///./node_modules/readable-stream/lib/internal/streams/destroy.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/row-pluck-b.js","webpack:///./node_modules/gpu.js/dist/backend/function-node-base.js","webpack:///./node_modules/brain.js/dist/utilities/to-svg.js","webpack:///./node_modules/gpu.js/dist/core/gpu.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/ones-matrix.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/shader-vert.js","webpack:///./node_modules/gpu.js/dist/backend/kernel-base.js","webpack:///./node_modules/readable-stream/lib/internal/streams/BufferList.js","webpack:///./node_modules/gpu.js/dist/core/input.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/function-node.js","webpack:///./node_modules/gpu.js/dist/backend/runner-base.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/shader-frag.js","webpack:///./node_modules/brain.js/dist/train-stream.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/validator-kernel.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/function-node.js","webpack:///./node_modules/brain.js/index.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/random-matrix.js","webpack:///./node_modules/gpu.js/dist/backend/cpu/runner.js","webpack:///./node_modules/readable-stream/lib/_stream_passthrough.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/function-builder.js","webpack:///./node_modules/brain.js/dist/recurrent/gru-time-step.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/index.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/relu.js","webpack:///./node_modules/string_decoder/lib/string_decoder.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/sample-i.js","webpack:///./node_modules/safe-buffer/index.js","webpack:///./node_modules/brain.js/dist/recurrent/rnn.js","webpack:///./node_modules/gpu.js/dist/backend/function-builder-base.js","webpack:///./node_modules/brain.js/dist/utilities/lookup-table.js","webpack:///./node_modules/brain.js/dist/recurrent/gru.js","webpack:///./node_modules/thaw.js/dist/thaw.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/all-ones.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/shader-vert.js","webpack:///./node_modules/process-nextick-args/index.js","webpack:///./node_modules/brain.js/dist/utilities/random.js","webpack:///./node_modules/brain.js/dist/recurrent/lstm-time-step.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/sigmoid-b.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/multiply-b.js","webpack:///./node_modules/gpu.js/dist/core/utils.js","webpack:///./node_modules/brain.js/dist/neural-network.js","webpack:///./node_modules/readable-stream/lib/_stream_readable.js","webpack:///./node_modules/gpu.js/dist/backend/cpu/kernel-string.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/runner.js","webpack:///./node_modules/readable-stream/lib/_stream_duplex.js","webpack:///./node_modules/brain.js/dist/utilities/mse.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/add.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/gpu.js/dist/core/alias.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/relu-b.js","webpack:///./node_modules/util-deprecate/browser.js","webpack:///./node_modules/gpu.js/dist/core/texture.js","webpack:///./node_modules/readable-stream/passthrough.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/clone-negative.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/row-pluck.js","webpack:///./node_modules/brain.js/dist/cross-validate.js","webpack:///./node_modules/brain.js/dist/utilities/cast.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl2/validator-kernel.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/softmax.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/add-b.js","webpack:///./node_modules/thaw.js/dist/index.js","webpack:///./node_modules/readable-stream/transform.js","webpack:///./node_modules/brain.js/dist/recurrent/lstm.js","webpack:///./node_modules/stream-browserify/index.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/multiply-element-b.js","webpack:///./node_modules/gpu.js/dist/backend/cpu/function-builder.js","webpack:///./node_modules/readable-stream/lib/_stream_writable.js","webpack:///./node_modules/brain.js/dist/likely.js","webpack:///./node_modules/readable-stream/readable-browser.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/acorn/dist/acorn.es.js","webpack:///./node_modules/brain.js/dist/recurrent/matrix/multiply-element.js","webpack:///./node_modules/brain.js/dist/utilities/array-lookup-table.js","webpack:///./node_modules/gpu.js/dist/backend/cpu/function-node.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/kernel-string.js","webpack:///./node_modules/process/browser.js","webpack:///./node_modules/brain.js/dist/utilities/zeros.js","webpack:///./node_modules/brain.js/dist/utilities/max.js","webpack:///./node_modules/events/events.js","webpack:///./node_modules/gpu.js/dist/backend/web-gl/runner.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","tanhB","product","left","deltas","length","mwi","weights","default","randomWeight","Math","random","toArray","values","Array","isArray","keys","result","Float32Array","_createClass","defineProperties","target","props","descriptor","configurable","writable","Constructor","protoProps","staticProps","_toConsumableArray","arr","arr2","from","_classCallCheck","instance","TypeError","DataFormatter","maxThreshold","arguments","undefined","this","indexTable","characterTable","characters","specialIndexes","buildCharactersFromIterable","buildTables","tempCharactersTable","dataFormatterIndex","dataFormatterLength","characterIndex","charactersLength","character","push","_character","max","index","Error","value1","value2","toIndexes","split","concat","indices","toCharacters","join","addSpecial","special","specialIndex","output","sum","indexOf","JSON","stringify","toString","replace","toIndexesInputOutput","String","fromCharCode","dataFormatter","fromAllPrintable","addInputOutput","string","_String$prototype","apply","Set","array","filter","v","a","sort","_String$prototype2","json","multiply","right","leftRows","rows","leftColumns","columns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","dot","leftColumn","rightColumnBase","leftIndex","rightIndex","_typeof","iterator","obj","constructor","lookup","hashes","hash","reduce","memo","assign","toHash","objects2D","table","valueIndex","objects","j","data","tableIndex","dataIndex","input","arrayLength","offset","limit","z","shape","buffer","ArrayBuffer","ones","size","fill","_","_2","_interopRequireDefault","Block","options","count","thaws","item","next","_next","add","items","addArray","insert","insertArray","stop","thaw","GPUCore","kernelObj","parse","e","console","error","isKernelObj","inOpt","validateKernelObj","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","setPrototypeOf","__proto__","KernelBase","utils","kernelString","_KernelBase","CPUKernel","fnString","settings","_this","getPrototypeOf","_fn","run","_canvasCtx","_imageData","_colorData","_kernelString","thread","x","y","build","argType","getArgumentType","getDimensions","checkOutput","setupConstants","setupParams","validateOptions","canvas","_canvas","getContext","threadDim","clone","graphical","width","height","createImageData","Uint8ClampedArray","getKernelString","debug","log","dir","Function","g","b","floor","builder","functionBuilder","addKernel","prototypeOnly","constants","loopMaxIterations","paramNames","paramTypes","paramSizes","constantTypes","addFunctions","functions","addNativeFunctions","nativeFunctions","subKernels","subKernelOutputTextures","subKernelOutputVariableNames","subKernel","addSubKernel","subKernelProperties","_subKernel","_i","prototypes","getPrototypes","kernel","fn","test","shift","_getLoopMaxString","map","paramName","_processConstants","_processParams","_kernelLoop","_kernelOutput","parseInt","type","image","ctx","drawImage","pixelsData","getImageData","imageArray","images","imagesArray","_imageTo2DArray","_kernel1DLoop","_kernel2DLoop","_kernel3DLoop","_mapSubKernels","_this2","UtilsCore","canvasObj","nodeName","toUpperCase","OffscreenCanvas","_isCanvasSupported","document","createElement","webGlObj","getExtension","webGl2Obj","WebGL2RenderingContext","_isWebGlSupported","_isWebGl2Supported","_isWebGlDrawBuffersSupported","alpha","depth","antialias","isCanvas","webGl","defaultOptions","initWebGlDefaultOptions","OES_texture_float","OES_texture_float_linear","OES_element_index_uint","isNaN","_testingWebGl","initWebGl","initCanvas","_testingWebGl2","initWebGl2","isWebGl","isWebGl2","Boolean","WebGLKernel","Texture","fragShaderString","vertShaderString","_WebGLKernel","WebGL2Kernel","getCanvas","isFloatReadPixel","isFloatReadPixelsSupportedWebGL2","floatOutput","floatOutputForce","floatTextures","hasIntegerDivisionBug","hasIntegerDivisionAccuracyBug","fixIntegerDivisionAccuracy","texSize","dimToTexSize","warn","_webGl","program","gl","useProgram","scissor","hardcodeConstants","setUniform3iv","Int32Array","setUniform2iv","setUniform2f","maxTexSize","argumentsLength","texIndex","_addArgument","outputToTexture","bindRenderbuffer","RENDERBUFFER","bindFramebuffer","FRAMEBUFFER","framebuffer","outputTexture","outputImmutable","_setupOutputTexture","drawArrays","TRIANGLE_STRIP","_setupSubOutputTextures","drawBuffers","drawBuffersMap","renderOutput","_output","texture","createTexture","activeTexture","TEXTURE0","constantsLength","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA32F","RGBA","FLOAT","UNSIGNED_BYTE","framebufferTexture2D","COLOR_ATTACHMENT0","textures","argumentTexture","getArgumentTexture","dim","_formatArrayTransfer","valuesFlat","bitRatio","Uint8Array","setUniform1i","setUniform1f","_dim","_size","_length","_formatArrayTransfer2","_valuesFlat","_bitRatio","inputArray","_buffer","inputImage","_dim2","_size2","pixelStorei","UNPACK_FLIP_Y_WEBGL","mipLevel","internalFormat","srcFormat","srcType","inputImages","_dim3","_size3","TEXTURE_2D_ARRAY","_mipLevel","_internalFormat","textureDepth","border","_srcFormat","_srcType","texImage3D","xOffset","yOffset","imageDepth","texSubImage3D","inputTexture","_dim4","dimensions","_size4","parseFloat","_linesToString","_formatArrayTransfer3","_dim5","_size5","_length2","_formatArrayTransfer4","_valuesFlat2","_bitRatio2","_buffer2","_dim6","_size6","_dim7","_size7","_mipLevel2","_internalFormat2","_srcFormat2","_srcType2","_dim8","_size8","names","args","param","paramType","paramDim","paramSize","getPrototypeString","channels","_i2","forEach","_addSubKernel","compiledFragShaderString","_replaceArtifacts","_getFragShaderArtifactMap","compiledVertShaderString","shortcut","allPropertiesOf","substring","__defineGetter__","__defineSetter__","byteLength","toByteArray","fromByteArray","revLookup","Arr","code","len","charCodeAt","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","num","encodeChunk","uint8","start","end","extraBytes","parts","maxChunkLength","len2","GPU","alias","Input","CPUFunctionBuilder","CPUFunctionNode","CPURunner","WebGLFunctionBuilder","WebGLFunctionNode","WebGLRunner","WebGL2FunctionBuilder","WebGL2FunctionNode","WebGL2Runner","window","_matrix","_matrix2","_randomMatrix","_randomMatrix2","_equation","_equation2","_rnn","_rnn2","_zeros","_zeros2","_softmax","_softmax2","_random","_sampleI","_sampleI2","_maxI","_maxI2","_lookup","_lookup2","_lookupTable2","_lookupTable3","_arrayLookupTable","_arrayLookupTable2","_cast","RNNTimeStep","_RNN","model","outputSize","lastHiddenSize","hiddenLayers","outputConnector","layers","equation","outputs","equationConnection","equationConnections","initialLayerInputs","getEquation","inputSize","equations","allMatrices","createHiddenLayers","hiddenMatrix","createOutputMatrix","backpropagate","rawInput","outputLookup","runObject","runNumbers","runArrays","forecast","forecastNumbers","forecastObjects","forecastArrays","trainOpts","trainDefaults","iterations","errorThresh","logPeriod","callback","callbackPeriod","setSize","formatData","Infinity","verifyIsInitialized","err","trainPattern","trainInput","trainInputOutput","trainArrays","trainNumbers","initialize","dataShape","toTable2D","toInputTable2D","toOutputTable2D","bindEquation","errorSum","predictTarget","isRunnable","inputLookup","inputLookupLength","lastOutput","runInput","equationIndex","toArrayShort","toObjectPartial","outputLookupLength","toObject","totalSize","inputIndex","outputIndex","_max","toArrays","outputMatrix","slice","_i3","arrayToFloat32Arrays","_i4","lookupTable","_i5","objectToFloat32Arrays","_i6","datum","_i7","_datum","_i8","arraysToFloat32Arrays","_lookupTable","_i9","objectToFloat32Array","_i10","_datum2","_i11","_datum3","_inputLookup","_outputLookup","_i12","_datum4","objectsToFloat32Arrays","formattedData","misclasses","splice","errorMSE","errorsAbs","abs","misclass","actual","_i13","_input","_target","errors","errorCount","_error","_errorsAbs","_misclass","_i14","_input2","_output2","_target2","_errors","_error2","_errorsAbs2","_misclass2","_i15","_input3","_output3","_target3","_errors2","_errorCount","_p","_error3","_errorsAbs3","_misclass3","_i16","_output4","_errors3","_errorCount2","_j","_error4","_errorsAbs4","_misclass4","_i17","_datum5","_output5","_errors4","_j2","k","_error5","_errorsAbs5","_misclass5","_i18","_datum6","_output6","_errors5","_j3","_p2","_error6","_errorsAbs6","_misclass6","total","addKeys","_i19","_i20","defaults","hiddenLayer","_p3","toJSON","hiddenSizes","fromJSON","states","jsonString","matrixOrigin","stateIndex","state","previousConnectionIndex","connection","matrixToString","formatInputData","formatOutputData","toInner","pop","fileName","fnName","toLowerCase","statesRaw","usedFunctionNames","innerFunctionsSwitch","forwardFn","forceForecast","src","randomF","learningRate","decayRate","smoothEps","regc","clipval","_onesMatrix","_copy","_cloneNegative2","_cloneNegative3","_add2","_add3","_addB","_addB2","_allOnes2","_allOnes3","_multiply2","_multiply3","_multiplyB","_multiplyB2","_multiplyElement2","_multiplyElement3","_multiplyElementB","_multiplyElementB2","_relu2","_relu3","_reluB","_reluB2","_rowPluck","_rowPluck2","_rowPluckB","_rowPluckB2","_sigmoid2","_sigmoid3","_sigmoidB","_sigmoidB2","_tanh2","_tanh3","_tanhB","_tanhB2","Equation","inputRow","inputValue","backpropagationFn","allOnes","cloneNegative","iForward","iBackpropagate","rowIndex","runIndex","logProbabilities","probabilities","log2","Transform","Duplex","util","afterTransform","er","ts","_transformState","transforming","cb","writecb","emit","writechunk","rs","_readableState","reading","needReadable","highWaterMark","_read","needTransform","writeencoding","sync","transform","_transform","flush","_flush","on","prefinish","done","stream","_writableState","inherits","chunk","encoding","_write","_destroy","err2","maxI","maxv","maxix","_get","receiver","desc","getOwnPropertyDescriptor","parent","canvases","maxTexSizes","textureCache","programUniformLocationCache","endianness","systemEndianness","fragShader","vertShader","uniform1fCache","uniform1iCache","uniform2fCache","uniform2fvCache","uniform2ivCache","uniform3fvCache","uniform3ivCache","isFloatReadPixelsSupported","canvasIndex","updateMaxTexSize","enable","SCISSOR_TEST","viewport","_addKernels","_getVertShaderString","createShader","VERTEX_SHADER","shaderSource","compileShader","_getFragShaderString","FRAGMENT_SHADER","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","createProgram","attachShader","linkProgram","createFramebuffer","vertices","texCoords","texCoordOffset","bindBuffer","ARRAY_BUFFER","createBuffer","bufferData","STATIC_DRAW","bufferSubData","aPosLoc","getAttribLocation","enableVertexAttribArray","vertexAttribPointer","FALSE","aTexCoordLoc","_addConstant","drawBuffersWEBGL","w","h","ceil","readPixels","bytes","subarray","splitArray","cube","getTextureCache","cache","loc","getUniformLocation","uniform1f","uniform1i","uniform2f","uniform2fv","uniform2iv","uniform3fv","uniform3iv","HEADER","_getHeaderString","LOOP_MAX","CONSTANTS","_getConstantsString","DECODE32_ENDIANNESS","_getDecode32EndiannessString","ENCODE32_ENDIANNESS","_getEncode32EndiannessString","DIVIDE_WITH_INTEGER_CHECK","_getDivideWithIntegerCheckString","GET_WRAPAROUND","_getGetWraparoundString","GET_TEXTURE_CHANNEL","_getGetTextureChannelString","GET_TEXTURE_INDEX","_getGetTextureIndexString","GET_RESULT","_getGetResultString","MAIN_PARAMS","_getMainParamsString","MAIN_CONSTANTS","_getMainConstantsString","KERNEL","_getKernelString","MAIN_RESULT","_getMainResultString","_formatArrayTransfer5","flattenTo","Int8Array","Uint16Array","Int16Array","wraparound","lines","match","artifact","_drawBuffers","addFunction","removeCanvasReferences","deleteTexture","deleteBuffer","deleteFramebuffer","deleteShader","deleteProgram","idx","_neuralNetwork","_neuralNetwork2","_gpu","_gpu2","NeuralNetworkGPU","_NeuralNetwork","forwardPropagate","backwardPropagate","changesPropagate","biasesPropagate","biasCopies","copyBias","changesCopies","copyChanges","weightsCopies","copyWeights","errorCheckInterval","gpu","buildRunInput","buildCalculateDeltas","buildGetChanges","buildChangeBiases","buildGetMSE","logErrorRate","calculateDeltas","adjustWeights","getMSE","outputLayer","getChanges","changeBiases","weightedSum","activation","weightedSumSigmoid","weightedSumRelu","weightedSumLeakyRelu","weightedSumTanh","layer","createKernel","sizes","texturizeInputData","biases","calcDeltas","calcDeltasSigmoid","calcDeltasRelu","calcDeltasLeakyRelu","calcDeltasTanh","createKernelMap","calcErrorOutput","targets","calcError","nextWeights","nextDeltas","addWeights","changes","calcChanges","previousOutputs","change","momentum","hardCodeConstants","addBiases","mse","outputTextures","updateTrainingOptions","endTime","Date","now","timeout","status","texturizeOutputData","set","_this3","getTrainOptsJSON","inputs","exp","tanh","previousChanges","pow","__webpack_exports__","addEventListener","randos","_randomWeight","_randomWeight2","sigmoid","copy","Buffer","arg","objectToString","isBoolean","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","isDate","isError","isFunction","isPrimitive","isBuffer","range","ctor","superCtor","super_","TempCtor","FunctionBuilderBase","_round","_FunctionBuilderBase","Node","EventEmitter","pna","destroy","readableDestroyed","destroyed","writableDestroyed","errorEmitted","nextTick","emitErrorNT","undestroy","ended","endEmitted","ending","finished","rowPluckB","rowBase","column","acorn","BaseFunctionNode","functionName","jsFunction","calledFunctions","calledFunctionsArguments","isRootKernel","isSubKernel","declarations","returnType","jsFunctionString","isFunctionString","getFunctionNameFromString","getParamNamesFromString","paramVariableNames","returns","getJsFunction","eval","ast","astMemberExpressionUnroll","firstExpression","expressions","astErrorOutput","inParser","jsFunctionAST","locations","funcAST","body","init","generate","functionString","paramIndex","calledFunctionArguments","calledFunctionArgument","constantName","retArr","astGeneric","astFunctionDeclaration","astFunctionExpression","astReturnStatement","astLiteral","astBinaryExpression","astIdentifierExpression","astAssignmentExpression","astExpressionStatement","astEmptyStatement","astBlockStatement","astIfStatement","astBreakStatement","astContinueStatement","astForStatement","astWhileStatement","astDoWhileStatement","astVariableDeclaration","astVariableDeclarator","astThisExpression","astSequenceExpression","astUnaryExpression","astUpdateExpression","astLogicalExpression","astMemberExpression","astCallExpression","astArrayExpression","astDebuggerStatement","getAstString","arrNode","parameter","isState","toSVG","network","line","color","label","hidden","fontSize","radius","svg","sh","neuronsNu","sv","sv_1","WebGLValidatorKernel","WebGL2ValidatorKernel","_GPUCore","detectedMode","isWebGlSupported","WebGLRenderingContext","kernels","runnerSettings","_runner","Runner","getGPURunner","Kernel","mergedSettings","buildKernel","isWebGlDrawBuffersSupported","_functions","addSubKernelProperty","lastKernel","combinedKernel","getMode","getWebGl","setCanvas","setWebGl","setOutputToTexture","isWebGl2Supported","nativeFunction","addNativeFunction","setTimeout","destroyWebGl","loseContextExt","loseContext","_ones","_ones2","OnesMatrix","_Matrix","subKernelNames","setOutput","flag","fix","execute","newPromise","accept","reject","source","copyBuffer","BufferList","head","tail","entry","unshift","ret","clear","alloc","allocUnsafe","inspect","custom","FunctionNodeBase","jsMathPrefix","localPrefix","constantsPrefix","DECODE32_ENCODE32","ENCODE32_DECODE32","debugLog","_FunctionNodeBase","astFunctionPrototype","getJsAST","trim","functionStringArray","webGlRegexOptimize","typeMap","getParamType","_type","argument","inGetParams","Number","isInteger","pushState","operator","popState","idtNode","castFloat","userParamName","getUserParamName","pushParameter","forNode","isIdentifierConstant","update","updateArgument","initArgument","declaration","id","whileNode","doWhileNode","assNode","eNode","bNode","esNode","expression","vardecNode","retDeclaration","declarationType","_type2","typeLookupMap","_type3","_type4","getConstantType","_type5","elements","node","nodeMap","callee","ivardecNode","ifNode","consequent","alternate","brNode","crNode","logNode","uNode","prefix","tNode","mNode","computed","reqName","funcName","assumeNotTexture","isInGetParams","multiMemberExpression","variableType","raw","startedInGetParamsState","changedGetParamsState","last","shouldPopParamState","unrolled","unrolled_lc","sNode","functionArguments","arrLen","subNode","webGlFunctionPrototypeString","getFunctionPrototypeString","Array(2)","Array(3)","Array(4)","Array2D","Array3D","Float","Integer","NumberTexture","ArrayTexture(4)","HTMLImage","HTMLImageArray","inStr","kernelRunShortcut","BaseRunner","webgl","_stream","TrainStream","_Writable","objectMode","neuralNetwork","_options","dataFormatDetermined","floodCallback","doneTrainingCallback","finishStreamIteration","write","enc","addFormat","firstDatum","Writable","_WebGLFunctionNode","CrossValidate","likely","NeuralNetwork","LSTMTimeStep","GRUTimeStep","RNN","LSTM","GRU","utilities","zeros","brain","recurrent","RandomMatrix","std","RunnerBase","_RunnerBase","PassThrough","_gru","_gru2","_rnnTimeStep","_rnnTimeStep2","_RNNTimeStep","hiddenSize","prevSize","getModel","inputMatrix","previousResult","Matrix","row","col","ix","matrix","weightRows","deltasRows","weightValues","deltasValues","columnIndex","setWeight","setDeltas","relu","isEncoding","_normalizeEncoding","retried","normalizeEncoding","nenc","StringDecoder","nb","text","utf16Text","utf16End","fillLast","utf8FillLast","base64Text","base64End","simpleWrite","simpleEnd","lastNeed","lastTotal","lastChar","utf8CheckByte","byte","utf8CheckIncomplete","buf","utf8CheckExtraBytes","utf8Text","utf8End","sampleI","copyProps","dst","SafeBuffer","encodingOrOffset","allocUnsafeSlow","SlowBuffer","_copy2","_dataFormatter","_dataFormatter2","stepCache","runs","ratioClipped","inputRange","mapModel","weight","transition","bias","inputMatrixToRow","createInputMatrix","log2ppl","inputMax","predictTargetIndex","backpropagateIndex","numClipped","numTot","matrixIndex","sqrt","isSampleI","temperature","maxPredictionLength","formatDataIn","previousIndex","probs","nextIndex","formatDataOut","validateTrainingOptions","setLogMethod","setupData","toFunctionString","fromArrayInputOutput","addUnrecognized","rootKernel","glslFunctionString","addFunctionNode","setBuilder","inNode","retList","fNode","functionIndex","getFunctionString","traceFunctionCalls","dependantFunctionName","kernelNode","getPrototypesFromFunctionNames","reverse","functionList","opt","getStringFromFunctionNames","LookupTable","prop","_table","_object","_table2","_object2","updateGateInputMatrix","updateGateHiddenMatrix","updateGateBias","resetGateInputMatrix","resetGateHiddenMatrix","resetGateBias","cellWriteInputMatrix","cellWriteHiddenMatrix","cellWriteBias","multiplyElement","updateGate","resetGate","cell","_extends","thawing","Thaw","_constructor$defaultS","defaultSettings","each","tick","clearTimeout","delay","doTick","makeReady","middle","read","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","process","arg1","arg2","arg3","version","randomI","randomN","mu","gaussRandom","returnV","vVal","u","_lstm","_lstm2","sigmoidB","multiplyB","_leftRow","rightRow","backPropagateValue","FUNCTION_NAME","STRIP_COMMENTS","ARGUMENT_NAMES","_systemEndianness","Uint32Array","_isFloatReadPixelsSupported","_isFloatReadPixelsSupportedWebGL2","_isMixedIdentifiersSupported","_hasIntegerDivisionAccuracyBug","Utils","_UtilsCore","funcObj","funcStr","exec","lastIndexOf","func","fnStr","temp","isActiveClone","executor","simple","Promise","small_promise","inFunc","thisObj","v1","v2","numTexels","high","low","pad","padding","valueOf","flatten3dArrayTo","flatten2dArrayTo","part","byteOffset","getOwnPropertyNames","_thaw","_thaw2","_lookup3","_max2","_mse","_mse2","_randos","_randos2","_range","_range2","_toArray","_toArray2","praxis","beta1","beta2","epsilon","leakyReluAlpha","binaryThresh","setActivation","_setupAdam","_runInputSigmoid","_calculateDeltasSigmoid","_runInputRelu","_calculateDeltasRelu","_runInputLeakyRelu","_calculateDeltasLeakyRelu","_runInputTanh","_calculateDeltasTanh","validations","val","opts","calculateTrainingError","trainPatterns","_prepTraining","prepTraining","trainingTick","_prepTraining2","resolve","thawedTrain","trainError","incoming","delta","biasChangesLow","biasChangesHigh","changesLow","changesHigh","_adjustWeightsAdam","gradient","changeLow","changeHigh","momentumCorrection","gradientCorrection","biasGradient","biasChangeLow","biasChangeHigh","biasMomentumCorrection","biasGradientCorrection","_formatInput","getTypedArrayFn","_formatOutput","_result","_result2","_this4","isBinary","falsePos","falseNeg","truePos","trueNeg","_loop","expected","precision","recall","accuracy","_loop2","nodes","needsVar","nodeHandle","layerNumber","nodeKey","layersAsMath","_this5","checkFns","arrayToFloat32Array","global","Readable","ReadableState","EElistenerCount","emitter","listeners","Stream","OurUint8Array","_uint8ArrayToBuffer","_isUint8Array","debugUtil","debuglog","destroyImpl","kProxyEvents","prependListener","event","_events","isDuplex","readableObjectMode","hwm","readableHwm","readableHighWaterMark","defaultHwm","pipes","pipesCount","flowing","emittedReadable","readableListening","resumeScheduled","defaultEncoding","awaitDrain","readingMore","decoder","readable","readableAddChunk","addToFront","skipChunkCheck","onEofChunk","chunkInvalid","addChunk","maybeReadMore","needMoreData","emitReadable","_undestroy","isPaused","setEncoding","MAX_HWM","computeNewHighWaterMark","howMuchToRead","emitReadable_","flow","maybeReadMore_","pipeOnDrain","nReadingNextTick","resume","resume_","fromList","fromListPartial","list","hasStrings","copyFromBufferString","copyFromBuffer","str","endReadable","endReadableNT","xs","nOrig","doRead","pipe","dest","pipeOpts","doEnd","stdout","stderr","endFn","onend","unpipe","onunpipe","unpipeInfo","hasUnpiped","cleanup","once","ondrain","cleanedUp","removeListener","onclose","onfinish","onerror","ondata","needDrain","increasedAwaitDrain","pause","dests","ev","res","addListener","wrap","paused","method","_fromList","removeFnNoise","removeNoise","cpuKernel","objectKeys","allowHalfOpen","onEndNT","base64","ieee754","typedArraySupport","foo","kMaxLength","TYPED_ARRAY_SUPPORT","that","RangeError","fromArrayBuffer","fromString","fromObject","assertSize","checked","fromArrayLike","isnan","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","min","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","species","_isBuffer","compare","pos","swap16","swap32","swap64","equals","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","_arr","MAX_ARGUMENTS_LENGTH","codePoints","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","getFunctionBodyFromString","reluB","deprecate","msg","config","warned","deprecated","trace","localStorage","rowPluck","rowPluckIndex","Classifier","trainSet","testSet","classifier","beginTrain","trainingStats","train","beginTest","testStats","endTest","stats","trainTime","testTime","shuffleArray","newData","avgs","binaryStats","results","stat","dclone","testPartition","testSize","trainSize","sets","crossValidateJson","prev","cur","arrays","softmax","maxVal","addB","_block","_block2","inputHidden","inputBias","forgetMatrix","forgetHidden","forgetBias","outputHidden","outputBias","cellActivationMatrix","cellActivationHidden","cellActivationBias","inputGate","forgetGate","outputGate","cellWrite","retainCell","writeCell","EE","_isStdio","didOnEnd","listenerCount","multiplyElementB","CorkedRequest","finish","onCorkedFinish","asyncWrite","browser","setImmediate","WritableState","internalUtil","realHasInstance","nop","writableObjectMode","writableHwm","writableHighWaterMark","finalCalled","noDecode","decodeStrings","writing","corked","bufferProcessing","onwrite","writelen","bufferedRequest","lastBufferedRequest","pendingcb","prefinished","bufferedRequestCount","corkedRequestsFree","writev","_writev","final","_final","writeAfterEnd","validChunk","valid","decodeChunk","writeOrBuffer","isBuf","newChunk","doWrite","onwriteError","finishMaybe","onwriteStateUpdate","needFinish","clearBuffer","afterWrite","onwriteDrain","holder","allBuffers","callFinal","need","endWritable","corkReq","getBuffer","current","hasInstance","cork","uncork","setDefaultEncoding","net","maxProp","maxValue","parseExpressionAt","tokenizer","parse_dammit","LooseParser","pluginsLoose","addLooseExports","Parser","plugins","Position","SourceLocation","getLineInfo","TokenType","types","keywords$1","TokContext","types$1","isIdentifierChar","isIdentifierStart","Token","isNewLine","lineBreak","lineBreakG","nonASCIIwhitespace","reservedWords","3","5","6","strict","strictBind","ecma5AndLessKeywords","keywords","keywordRelationalOperator","nonASCIIidentifierStartChars","nonASCIIidentifierChars","nonASCIIidentifierStart","RegExp","nonASCIIidentifier","astralIdentifierStartCodes","astralIdentifierCodes","isInAstralSet","astral","conf","keyword","beforeExpr","startsExpr","isLoop","isAssign","postfix","binop","updateContext","prec","kw","regexp","eof","bracketL","bracketR","braceL","braceR","parenL","parenR","comma","semi","colon","question","arrow","template","invalidTemplate","ellipsis","backQuote","dollarBraceL","eq","incDec","logicalOR","logicalAND","bitwiseOR","bitwiseXOR","bitwiseAND","equality","relational","bitShift","plusMin","modulo","star","slash","starstar","_break","_case","_catch","_continue","_debugger","_default","_do","_else","_finally","_for","_function","_if","_return","_switch","_throw","_try","_var","_const","_while","_with","_new","_super","_class","_export","_import","_null","_true","_false","_in","_instanceof","_void","_delete","ecma2019String","skipWhiteSpace","ref","has","propName","sourceFile","lastIndex","ecmaVersion","sourceType","onInsertedSemicolon","onTrailingComma","allowReserved","allowReturnOutsideFunction","allowImportExportEverywhere","allowAwaitOutsideFunction","allowHashBang","onToken","onComment","ranges","directSourceFile","preserveParens","getOptions","tokens","token","pushComment","block","startLoc","endLoc","comment","keywordRegexp","words","startPos","reserved","reservedStrict","reservedWordsStrict","reservedWordsStrictBind","containsEsc","loadPlugins","lineStart","curLine","curPosition","lastTokEndLoc","lastTokStartLoc","lastTokStart","lastTokEnd","context","initialContext","exprAllowed","inModule","strictDirective","potentialArrowAt","inFunction","inGenerator","inAsync","yieldPos","awaitPos","labels","skipLineComment","scopeStack","enterFunctionScope","regexpState","isKeyword","word","isReservedWord","extend","f","pluginConfigs","this$1","plugin","startNode","nextToken","parseTopLevel","pp","literal","DestructuringErrors","shorthandAssign","trailingComma","parenthesizedAssign","parenthesizedBind","doubleProto","eat","isContextual","eatContextual","expectContextual","unexpected","canInsertSemicolon","insertSemicolon","semicolon","afterTrailingComma","tokType","notNext","expect","raise","checkPatternErrors","refDestructuringErrors","raiseRecoverable","parens","checkExpressionErrors","andThrow","checkYieldAwaitInDefaultParams","isSimpleAssignTarget","expr","pp$1","stmt","parseStatement","adaptDirectivePrologue","finishNode","loopLabel","kind","switchLabel","isLet","skip","nextCh","ident","isAsyncFunction","charAt","topLevel","starttype","parseBreakContinueStatement","parseDebuggerStatement","parseDoStatement","parseForStatement","parseFunctionStatement","parseClass","parseIfStatement","parseReturnStatement","parseSwitchStatement","parseThrowStatement","parseTryStatement","parseVarStatement","parseWhileStatement","parseWithStatement","parseBlock","parseEmptyStatement","parseImport","parseExport","maybeName","parseExpression","parseLabeledStatement","parseExpressionStatement","isBreak","parseIdent","lab","parseParenExpression","awaitAt","enterLexicalScope","parseFor","init$1","parseVar","await","parseForIn","toAssignable","checkLVal","isAsync","parseFunction","discriminant","cases","sawDefault","isCase","exitLexicalScope","empty","handler","clause","parseBindingAtom","finalizer","i$1","label$1","statementStart","generator","async","createNewLexicalScope","parseMaybeAssign","isFor","decl","parseVarId","isStatement","allowExpressionBody","initFunction","oldInGen","oldInAsync","oldYieldPos","oldAwaitPos","oldInFunc","parseFunctionParams","parseFunctionBody","params","parseBindingList","parseClassId","parseClassSuper","classBody","hadConstructor","member","parseClassMember","tryContextual","noLineBreak","startNodeAt","static","isGenerator","parsePropertyName","parseClassMethod","parseMethod","parseExprSubscripts","parseExprAtom","checkExport","cNode","shouldParseExportStatement","checkVariableExport","specifiers","parseExportSpecifiers","spec","checkUnreserved","local","checkPatternExport","pat","properties","list$1","elt","decls","first","exported","parseImportSpecifiers","node$1","node$2","imported","statements","isDirectiveCandidate","directive","statement","pp$2","isBinding","toAssignableList","exprList","parseSpread","parseRestBinding","parseObj","close","allowEmpty","allowTrailingComma","elts","rest","parseBindingListItem","elem","parseMaybeDefault","bindingType","checkClashes","canDeclareVarName","canDeclareLexicalName","declareVarName","declareLexicalName","pp$3","checkPropClash","propHash","shorthand","proto","redefinition","other","noIn","afterLeftParse","parseYield","ownDestructuringErrors","oldParenAssign","oldTrailingComma","parseMaybeConditional","parseExprOps","parseMaybeUnary","parseExprOp","leftStartPos","leftStartLoc","minPrec","logical","op","buildBinary","sawUnary","parseAwait","skipArrowSubscripts","parseSubscripts","base","noCalls","maybeAsyncArrow","parseExprList","parseArrowExpression","tag","quasi","parseTemplate","isTagged","canBeArrow","parseLiteral","regex","pattern","flags","parseParenAndDistinguishExpression","parseNew","spreadStart","innerStartPos","innerStartLoc","lastIsComma","parseParenItem","innerEndPos","innerEndLoc","parseParenArrowList","finishNodeAt","par","empty$1","meta","parseTemplateElement","cooked","curElt","quasis","isAsyncProp","isPattern","parseProperty","parsePropertyValue","paramCount","isArrowFunction","isExpression","oldStrict","useStrict","checkParams","nonSimple","isSimpleParamList","oldLabels","exitFunctionScope","allowDuplicates","nameHash","liberal","delegate","pp$4","message","SyntaxError","raisedAt","pp$5","sources","var","lexical","childVar","parentLexical","parentScope","childScope","currentScope","parser","pp$6","isExpr","preserveSpace","override","b_stat","b_expr","b_tmpl","p_stat","p_expr","q_tmpl","tryReadTemplateToken","f_stat","f_expr","f_expr_gen","f_gen","pp$7","braceIsBlock","prevType","curContext","inGeneratorContext","statementParens","allowed","$LONE","General_Category","Script","gc","sc","Script_Extensions","scx","pp$9","RegExpValidationState","validFlags","switchU","switchN","lastIntValue","lastStringValue","lastAssertionIsQuantifiable","numCapturingParens","maxBackReference","groupNames","backReferenceNames","codePointToString$1","ch","isSyntaxCharacter","isRegExpIdentifierStart","isRegExpIdentifierPart","isControlLetter","isValidUnicode","isCharacterClassEscape","isUnicodePropertyNameCharacter","isUnicodePropertyValueCharacter","isDecimalDigit","isHexDigit","hexToInt","isOctalDigit","reset","unicode","at","lookahead","advance","validateRegExpFlags","validateRegExpPattern","regexp_pattern","regexp_disjunction","regexp_alternative","regexp_eatQuantifier","regexp_eatTerm","regexp_eatAssertion","regexp_eatAtom","regexp_eatExtendedAtom","lookbehind","noError","regexp_eatQuantifierPrefix","regexp_eatBracedQuantifier","regexp_eatDecimalDigits","regexp_eatPatternCharacters","regexp_eatReverseSolidusAtomEscape","regexp_eatCharacterClass","regexp_eatUncapturingGroup","regexp_eatCapturingGroup","regexp_eatAtomEscape","regexp_groupSpecifier","regexp_eatInvalidBracedQuantifier","regexp_eatExtendedPatternCharacter","regexp_eatSyntaxCharacter","regexp_eatGroupName","regexp_eatRegExpIdentifierName","regexp_eatRegExpIdentifierStart","regexp_eatRegExpIdentifierPart","regexp_eatRegExpUnicodeEscapeSequence","regexp_eatBackReference","regexp_eatCharacterClassEscape","regexp_eatCharacterEscape","regexp_eatKGroupName","regexp_eatDecimalEscape","regexp_eatControlEscape","regexp_eatCControlLetter","regexp_eatZero","regexp_eatHexEscapeSequence","regexp_eatLegacyOctalEscapeSequence","regexp_eatIdentityEscape","regexp_eatControlLetter","regexp_eatFixedHexDigits","lead","leadSurrogateEnd","trail","regexp_eatHexDigits","regexp_eatUnicodePropertyValueExpression","regexp_eatUnicodePropertyName","regexp_eatUnicodePropertyValue","regexp_validateUnicodePropertyNameAndValue","regexp_eatLoneUnicodePropertyNameOrValue","nameOrValue","regexp_validateUnicodePropertyNameOrValue","regexp_classRanges","regexp_eatClassAtom","regexp_eatClassEscape","ch$1","regexp_eatClassControlLetter","regexp_eatOctalDigit","n1","n2","pp$8","codePointToString","getToken","skipSpace","finishToken","readToken","fullCharCodeAtPos","readWord","getTokenFromCode","skipBlockComment","startSkip","loop","readToken_dot","readNumber","next2","readToken_slash","readRegexp","finishOp","readToken_mult_modulo_exp","tokentype","readToken_pipe_amp","readToken_caret","readToken_plus_min","readToken_lt_gt","readToken_eq_excl","readRadixNumber","readString","escaped","inClass","flagsStart","readWord1","readInt","radix","startsWithDot","octal","readCodePoint","codePos","readHexChar","invalidStringToken","quote","chunkStart","readEscapedChar","INVALID_TEMPLATE_ESCAPE_ERROR","inTemplateElement","readTmplToken","readInvalidTemplateToken","position","inTemplate","octalStr","escStart","esc","Parser$$1","plugins$$1","ArrayLookupTable","_BaseFunctionNode","memberStates","memberState","isInput","pushMemberState","popMemberState","_last","isInputIndexZ","_last2","_last3","gpuKernel","getOutputTexture","detachTextureCache","setUniform2fv","setUniform3fv","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","runClearTimeout","marker","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","Item","noop","title","env","argv","versions","off","removeAllListeners","prependOnceListener","binding","cwd","chdir","umask","ReflectOwnKeys","R","Reflect","ReflectApply","ProcessEmitWarning","warning","ownKeys","getOwnPropertySymbols","NumberIsNaN","_eventsCount","_maxListeners","defaultMaxListeners","$getMaxListeners","_addListener","listener","prepend","events","existing","newListener","onceWrapper","fired","wrapFn","_onceWrap","wrapped","_listeners","unwrap","evlistener","unwrapListeners","arrayClone","spliceOne","setMaxListeners","getMaxListeners","doError","originalListener","rawListeners","eventNames"],"mappings":"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,OACOz2E,KAAAsjE,QAAAtiE,GAAAm5D,GAAAuc,WAEA12E,KAAAsjE,QAAAtiE,GAAAm5D,GAAAwc,MAEP32E,KAAAwjE,aAAA,GAGAxJ,EAAAh+D,KAAAqgE,cAAA,SAAAya,GACA,IAAAI,GAAA,EACAl3E,KAAAuG,QAAAy6D,aAAA,GAAA8V,IAAA9c,EAAAh2D,MACA,OAAAhE,KAAAtD,QAAAsD,KAAAwjE,aACA,UAAAxjE,KAAAtD,OAAAsD,KAAAg3E,wBACOE,GAAA,GAEPl3E,KAAAwjE,YAAA0T,GAGA,IAAA7xE,GAAA,CACA8xE,MAAA,CACA,QACA,kBACA,OACA,aACA,QACA,MACA,WACA,eACA,SACA,gBACA,SACA,iBACA,KACA,QACA,0BACA,OACA,0BACA,OACA,0BACA,MACA,+BACA,QACA,0BACA,MACA,0BACA,MACA,OACA,+BACA,KACA,aACA,MACA,YACA,MACA,QACA,kBACA,iBACA,sBACA,qBACA,WACA,MACA,gBACA,UACA,kBACA,SACA,YACA,MACA,sBACA,OACA,uBACA,OACA,cACA,MACA,WACA,MACA,cACA,OACA,eACA,SACA,0BACA,MACA,YACA,QACA,OACA,0BACA,QACA,iBACA,UACA,sBACA,SACA,iBACA,QACA,UACA,qBACA,KACA,oBACA,QACA,cACA,KACA,uBACA,OACA,oBACA,QACA,YACA,QACA,qBACA,KACA,cACA,QACA,eACA,OACA,YACA,QAEAC,iBAAA,CACA,eACA,KACA,oBACA,KACA,wBACA,KACA,UACA,KACA,QACA,kBACA,KACA,mBACA,KACA,iBACA,KACA,QACA,iBACA,KACA,oBACA,KACA,SACA,KACA,sBACA,KACA,SACA,IACA,gBACA,KACA,iBACA,KACA,mBACA,KACA,OACA,IACA,iBACA,cACA,KACA,kBACA,KACA,kBACA,KACA,kBACA,KACA,SACA,IACA,mBACA,KACA,QACA,IACA,eACA,KACA,eACA,KACA,oBACA,KACA,eACA,KACA,sBACA,KACA,cACA,KACA,cACA,IACA,QACA,YACA,IACA,kBACA,KACA,eACA,KACA,YACA,KACA,SACA,IACA,mBACA,KACA,aACA,KACA,mBACA,MAEAC,OAAA,CACA,QACA,OACA,OACA,wBACA,OACA,SACA,OACA,WACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,YACA,OACA,QACA,OACA,UACA,OACA,YACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,QACA,OACA,sBACA,OACA,SACA,OACA,qBACA,OACA,SACA,OACA,OACA,WACA,OACA,SACA,OACA,SACA,OACA,OACA,YACA,OACA,UACA,OACA,WACA,OACA,UACA,OACA,aACA,OACA,WACA,OACA,uBACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,SACA,OACA,UACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,MACA,OACA,SACA,OACA,UACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,mBACA,OACA,YACA,OACA,OACA,wBACA,OACA,yBACA,OACA,WACA,OACA,SACA,OACA,UACA,OACA,WACA,OACA,WACA,OACA,aACA,OACA,QACA,OACA,SACA,OACA,YACA,OACA,MACA,OACA,QACA,OACA,SACA,OACA,QACA,OACA,WACA,OACA,WACA,OACA,OACA,SACA,OACA,SACA,OACA,WACA,OACA,YACA,OACA,UACA,OACA,aACA,OACA,UACA,OACA,gBACA,OACA,eACA,OACA,gBACA,OACA,mBACA,OACA,uBACA,OACA,OACA,OACA,OACA,YACA,OACA,MACA,OACA,UACA,OACA,UACA,OACA,YACA,OACA,cACA,OACA,OACA,MACA,OACA,QACA,OACA,QACA,OACA,WACA,OACA,gBACA,OACA,aACA,OACA,oBACA,OACA,aACA,OACA,cACA,OACA,oBACA,OACA,aACA,OACA,QACA,OACA,QACA,OACA,UACA,OACA,eACA,OACA,YACA,OACA,cACA,OACA,WACA,OACA,aACA,OACA,kBACA,OACA,SACA,OACA,QACA,OACA,YACA,OACA,aACA,OACA,UACA,OA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","file":"sw.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"33e2\");\n","module.exports = require('./lib/_stream_duplex.js');\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tanhB;\n/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction tanhB(product, left) {\n  for (var i = 0; i < product.deltas.length; i++) {\n    // grad for z = tanh(x) is (1 - z^2)\n    var mwi = product.weights[i];\n    left.deltas[i] = (1 - mwi * mwi) * product.deltas[i];\n  }\n}\n//# sourceMappingURL=tanh-b.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = randomWeight;\nfunction randomWeight() {\n  return Math.random() * 0.4 - 0.2;\n}\n//# sourceMappingURL=random-weight.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = toArray;\n/**\n *\n * @param values\n * @returns {*}\n */\nfunction toArray(values) {\n  if (Array.isArray(values)) {\n    return values;\n  } else {\n    var keys = Object.keys(values);\n    var result = new Float32Array(keys.length);\n    for (var i in keys) {\n      result[i] = values[keys[i]];\n    }\n    return result;\n  }\n}\n//# sourceMappingURL=to-array.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n * @param {String[]|Number[]} values\n * @param maxThreshold\n * @constructor\n */\nvar DataFormatter = function () {\n  function DataFormatter(values) {\n    var maxThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n    _classCallCheck(this, DataFormatter);\n\n    if (values === undefined) return;\n\n    this.values = values;\n    // go over all characters and keep track of all unique ones seen\n    // count up all characters\n    this.indexTable = {};\n    this.characterTable = {};\n    this.characters = [];\n    this.specialIndexes = [];\n    this.buildCharactersFromIterable(values);\n    this.buildTables(maxThreshold);\n  }\n\n  _createClass(DataFormatter, [{\n    key: 'buildCharactersFromIterable',\n    value: function buildCharactersFromIterable(values) {\n      var tempCharactersTable = {};\n      for (var dataFormatterIndex = 0, dataFormatterLength = values.length; dataFormatterIndex < dataFormatterLength; dataFormatterIndex++) {\n        var characters = values[dataFormatterIndex];\n\n        if (characters.hasOwnProperty('length')) {\n          for (var characterIndex = 0, charactersLength = characters.length; characterIndex < charactersLength; characterIndex++) {\n            var character = characters[characterIndex];\n            if (tempCharactersTable.hasOwnProperty(character)) continue;\n            tempCharactersTable[character] = true;\n            this.characters.push(character);\n          }\n        } else {\n          var _character = values[dataFormatterIndex];\n          if (tempCharactersTable.hasOwnProperty(_character)) continue;\n          tempCharactersTable[dataFormatterIndex] = true;\n          this.characters.push(_character);\n        }\n      }\n    }\n  }, {\n    key: 'buildTables',\n    value: function buildTables(maxThreshold) {\n      // filter by count threshold and create pointers\n      var charactersLength = this.characters.length;\n      for (var characterIndex = 0; characterIndex < charactersLength; characterIndex++) {\n        var character = this.characters[characterIndex];\n        if (characterIndex >= maxThreshold) {\n          // add character to dataFormatter\n          this.indexTable[character] = characterIndex;\n          this.characterTable[characterIndex] = character;\n        }\n      }\n    }\n  }, {\n    key: 'toIndexes',\n    value: function toIndexes(value) {\n      var maxThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var result = [];\n      var indexTable = this.indexTable;\n\n      for (var i = 0, max = value.length; i < max; i++) {\n        var character = value[i];\n        var index = indexTable[character];\n        if (index === undefined) {\n          if (indexTable['unrecognized']) {\n            index = indexTable['unrecognized'];\n          } else {\n            throw new Error('unrecognized character \"' + character + '\"');\n          }\n        }\n        if (index < maxThreshold) continue;\n        result.push(index);\n      }\n\n      return result;\n    }\n  }, {\n    key: 'toIndexesInputOutput',\n    value: function toIndexesInputOutput(value1) {\n      var value2 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n      var maxThreshold = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n      var result = void 0;\n      if (typeof value1 === 'string') {\n        result = this.toIndexes(value1.split('').concat(['stop-input', 'start-output']), maxThreshold);\n      } else {\n        result = this.toIndexes(value1.concat(['stop-input', 'start-output']), maxThreshold);\n      }\n\n      if (value2 === null) return result;\n\n      if (typeof value2 === 'string') {\n        return result.concat(this.toIndexes(value2.split(''), maxThreshold));\n      } else {\n        return result.concat(this.toIndexes(value2, maxThreshold));\n      }\n    }\n  }, {\n    key: 'toCharacters',\n    value: function toCharacters(indices) {\n      var maxThreshold = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      var result = [];\n      var characterTable = this.characterTable;\n      var indexTable = this.indexTable;\n\n      for (var i = 0, max = indices.length; i < max; i++) {\n        var index = indices[i];\n        if (index < maxThreshold) continue;\n        var character = characterTable[index];\n        if (character === undefined) {\n          if (indexTable['unrecognized']) {\n            character = characterTable[indexTable['unrecognized']];\n          } else {\n            throw new Error('unrecognized index \"' + index + '\"');\n          }\n        } else if (character !== null) {\n          result.push(character);\n        }\n      }\n\n      return result;\n    }\n  }, {\n    key: 'toString',\n    value: function toString(indices, maxThreshold) {\n      return this.toCharacters(indices, maxThreshold).join('');\n    }\n  }, {\n    key: 'addInputOutput',\n    value: function addInputOutput() {\n      this.addSpecial('stop-input');\n      this.addSpecial('start-output');\n    }\n  }, {\n    key: 'addUnrecognized',\n    value: function addUnrecognized() {\n      this.addSpecial('unrecognized');\n    }\n  }, {\n    key: 'addSpecial',\n    value: function addSpecial(special) {\n      var character = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var specialIndex = this.indexTable[special] = this.characters.length;\n      this.characterTable[specialIndex] = character;\n      this.specialIndexes.push(this.characters.length);\n      this.characters.push(special);\n    }\n  }, {\n    key: 'countSpecial',\n    value: function countSpecial(output) {\n      var sum = 0;\n      for (var i = 0; i < this.specialIndexes; i++) {\n        var index = -1;\n        while (index = output.indexOf(this.specialIndexes[i], index) > -1) {\n          sum++;\n        }\n      }\n      return sum;\n    }\n  }, {\n    key: 'toFunctionString',\n    value: function toFunctionString() {\n      return '\\nvar characterTable = ' + JSON.stringify(this.characterTable) + ';\\nvar indexTable = ' + JSON.stringify(this.indexTable) + ';\\nvar characters = ' + JSON.stringify(this.characters) + ';\\n' + this.toIndexes.toString().replace(/(let|var) indexTable = this[.]indexTable;\\n/, '').replace(/this[.]/g, '') + '\\n' + this.toIndexesInputOutput.toString().replace(/this[.]/g, '') + '\\n' + this.toCharacters.toString().replace(/(let|var) characterTable = this[.]characterTable;\\n/g, '').replace(/this[.]/, '') + '\\n';\n    }\n  }], [{\n    key: 'fromAllPrintable',\n    value: function fromAllPrintable(maxThreshold) {\n      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['\\n'];\n\n      for (var i = 32; i <= 126; i++) {\n        values.push(String.fromCharCode(i));\n      }\n      return new DataFormatter(values, maxThreshold);\n    }\n  }, {\n    key: 'fromAllPrintableInputOutput',\n    value: function fromAllPrintableInputOutput(maxThreshold) {\n      var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : ['\\n'];\n\n      var dataFormatter = DataFormatter.fromAllPrintable(maxThreshold, values);\n      dataFormatter.addInputOutput();\n      return dataFormatter;\n    }\n  }, {\n    key: 'fromStringInputOutput',\n    value: function fromStringInputOutput(string, maxThreshold) {\n      var _String$prototype;\n\n      var values = (_String$prototype = String.prototype).concat.apply(_String$prototype, _toConsumableArray(new Set(string)));\n      var dataFormatter = new DataFormatter(values, maxThreshold);\n      dataFormatter.addInputOutput();\n      return dataFormatter;\n    }\n  }, {\n    key: 'fromArrayInputOutput',\n    value: function fromArrayInputOutput(array, maxThreshold) {\n      var dataFormatter = new DataFormatter(array.filter(function (v, i, a) {\n        return a.indexOf(v) === i;\n      }).sort(), maxThreshold);\n      dataFormatter.addInputOutput();\n      return dataFormatter;\n    }\n  }, {\n    key: 'fromString',\n    value: function fromString(string, maxThreshold) {\n      var _String$prototype2;\n\n      var values = (_String$prototype2 = String.prototype).concat.apply(_String$prototype2, _toConsumableArray(new Set(string)));\n      return new DataFormatter(values, maxThreshold);\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var dataFormatter = new DataFormatter();\n      dataFormatter.indexTable = json.indexTable;\n      dataFormatter.characterTable = json.characterTable;\n      dataFormatter.values = json.values;\n      dataFormatter.characters = json.characters;\n      dataFormatter.specialIndexes = json.specialIndexes;\n      return dataFormatter;\n    }\n  }]);\n\n  return DataFormatter;\n}();\n\nexports.default = DataFormatter;\n//# sourceMappingURL=data-formatter.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multiply;\n/**\n * multiply {left} and {right} matrix weights to {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction multiply(product, left, right) {\n  var leftRows = left.rows;\n  var leftColumns = left.columns;\n  var rightColumns = right.columns;\n\n  // loop over rows of left\n  for (var leftRow = 0; leftRow < leftRows; leftRow++) {\n    var leftRowBase = leftColumns * leftRow;\n    var rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (var rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n\n      // dot product loop\n      var dot = 0;\n      //loop over columns of left\n      for (var leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        var rightColumnBase = rightColumns * leftColumn;\n        var leftIndex = leftRowBase + leftColumn;\n        var rightIndex = rightColumnBase + rightColumn;\n        dot += left.weights[leftIndex] * right.weights[rightIndex];\n        left.deltas[leftIndex] = 0;\n        right.deltas[rightIndex] = 0;\n      }\n      product.weights[rightRowBase + rightColumn] = dot;\n    }\n  }\n}\n//# sourceMappingURL=multiply.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/* Functions for turning sparse hashes into arrays and vice versa */\nvar lookup = function () {\n  function lookup() {\n    _classCallCheck(this, lookup);\n  }\n\n  _createClass(lookup, null, [{\n    key: 'toTable',\n\n    /**\n     * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n     * @param {Object} hashes\n     * @returns {Object}\n     */\n    value: function toTable(hashes) {\n      var hash = hashes.reduce(function (memo, hash) {\n        return Object.assign(memo, hash);\n      }, {});\n\n      return lookup.toHash(hash);\n    }\n\n    /**\n     * Performs `[{a: 1}, {b: 6, c: 7}] -> {a: 0, b: 1, c: 2}`\n     * @param {Object} objects2D\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'toTable2D',\n    value: function toTable2D(objects2D) {\n      var table = {};\n      var valueIndex = 0;\n      for (var i = 0; i < objects2D.length; i++) {\n        var objects = objects2D[i];\n        for (var j = 0; j < objects.length; j++) {\n          var object = objects[j];\n          for (var p in object) {\n            if (object.hasOwnProperty(p) && !table.hasOwnProperty(p)) {\n              table[p] = valueIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    }\n  }, {\n    key: 'toInputTable',\n    value: function toInputTable(data) {\n      var table = {};\n      var tableIndex = 0;\n      for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        for (var p in data[dataIndex].input) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n      return table;\n    }\n  }, {\n    key: 'toInputTable2D',\n    value: function toInputTable2D(data) {\n      var table = {};\n      var tableIndex = 0;\n      for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        var input = data[dataIndex].input;\n        for (var i = 0; i < input.length; i++) {\n          var object = input[i];\n          for (var p in object) {\n            if (!table.hasOwnProperty(p)) {\n              table[p] = tableIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    }\n  }, {\n    key: 'toOutputTable',\n    value: function toOutputTable(data) {\n      var table = {};\n      var tableIndex = 0;\n      for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        for (var p in data[dataIndex].output) {\n          if (!table.hasOwnProperty(p)) {\n            table[p] = tableIndex++;\n          }\n        }\n      }\n      return table;\n    }\n  }, {\n    key: 'toOutputTable2D',\n    value: function toOutputTable2D(data) {\n      var table = {};\n      var tableIndex = 0;\n      for (var dataIndex = 0; dataIndex < data.length; dataIndex++) {\n        var output = data[dataIndex].output;\n        for (var i = 0; i < output.length; i++) {\n          var object = output[i];\n          for (var p in object) {\n            if (!table.hasOwnProperty(p)) {\n              table[p] = tableIndex++;\n            }\n          }\n        }\n      }\n      return table;\n    }\n\n    /**\n     * performs `{a: 6, b: 7} -> {a: 0, b: 1}`\n     * @param {Object} hash\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'toHash',\n    value: function toHash(hash) {\n      var lookup = {};\n      var index = 0;\n      for (var i in hash) {\n        lookup[i] = index++;\n      }\n      return lookup;\n    }\n\n    /**\n     * performs `{a: 0, b: 1}, {a: 6} -> [6, 0]`\n     * @param {*} lookup\n     * @param {*} object\n     * @param {*} arrayLength\n     * @returns {Float32Array}\n     */\n\n  }, {\n    key: 'toArray',\n    value: function toArray(lookup, object, arrayLength) {\n      var result = new Float32Array(arrayLength);\n      for (var p in lookup) {\n        result[lookup[p]] = object.hasOwnProperty(p) ? object[p] : 0;\n      }\n      return result;\n    }\n  }, {\n    key: 'toArrayShort',\n    value: function toArrayShort(lookup, object) {\n      var result = [];\n      for (var p in lookup) {\n        if (!object.hasOwnProperty(p)) break;\n        result[lookup[p]] = object[p];\n      }\n      return Float32Array.from(result);\n    }\n  }, {\n    key: 'toArrays',\n    value: function toArrays(lookup, objects, arrayLength) {\n      var result = [];\n      for (var i = 0; i < objects.length; i++) {\n        result.push(this.toArray(lookup, objects[i], arrayLength));\n      }\n      return result;\n    }\n\n    /**\n     * performs `{a: 0, b: 1}, [6, 7] -> {a: 6, b: 7}`\n     * @param {Object} lookup\n     * @param {Array} array\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'toObject',\n    value: function toObject(lookup, array) {\n      var object = {};\n      for (var p in lookup) {\n        object[p] = array[lookup[p]];\n      }\n      return object;\n    }\n  }, {\n    key: 'toObjectPartial',\n    value: function toObjectPartial(lookup, array) {\n      var offset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n      var limit = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n      var object = {};\n      var i = 0;\n      for (var p in lookup) {\n        if (offset > 0) {\n          if (i++ < offset) continue;\n        }\n        if (limit > 0) {\n          if (i++ >= limit) continue;\n        }\n        object[p] = array[lookup[p] - offset];\n      }\n      return object;\n    }\n\n    /**\n     *\n     * @param {Array} array\n     * @returns {*}\n     */\n\n  }, {\n    key: 'lookupFromArray',\n    value: function lookupFromArray(array) {\n      var lookup = {};\n      var z = 0;\n      var i = array.length;\n      while (i-- > 0) {\n        lookup[array[i]] = z++;\n      }\n      return lookup;\n    }\n  }, {\n    key: 'dataShape',\n    value: function dataShape(data) {\n      var shape = [];\n\n      if (data.input) {\n        shape.push('datum');\n        data = data.input;\n      } else if (Array.isArray(data)) {\n        if (data[0].input) {\n          shape.push('array', 'datum');\n          data = data[0].input;\n        } else {\n          shape.push('array');\n          data = data[0];\n        }\n      }\n\n      var p = void 0;\n      while (data) {\n        for (p in data) {\n          break;\n        }\n        if (!data.hasOwnProperty(p)) break;\n        if (Array.isArray(data) || data.buffer instanceof ArrayBuffer) {\n          shape.push('array');\n          data = data[p];\n        } else if ((typeof data === 'undefined' ? 'undefined' : _typeof(data)) === 'object') {\n          shape.push('object');\n          data = data[p];\n        } else {\n          throw new Error('unhandled signature');\n        }\n      }\n      shape.push(typeof data === 'undefined' ? 'undefined' : _typeof(data));\n      return shape;\n    }\n  }, {\n    key: 'addKeys',\n    value: function addKeys(value, table) {\n      if (Array.isArray(value)) return;\n      table = table || {};\n      var i = Object.keys(table).length;\n      for (var p in value) {\n        if (!value.hasOwnProperty(p)) continue;\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = i++;\n      }\n      return table;\n    }\n  }]);\n\n  return lookup;\n}();\n\nexports.default = lookup;\n//# sourceMappingURL=lookup.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ones;\nfunction ones(size) {\n  if (typeof Float32Array !== 'undefined') return new Float32Array(size).fill(1);\n  var array = new Array(size);\n  for (var i = 0; i < size; i++) {\n    array[i] = 1;\n  }\n  return array;\n}\n//# sourceMappingURL=ones.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n *\n * @param {Object} [options]\n * @param {Number} [count]\n * @constructor\n */\nvar Block = function () {\n  function Block(options, count) {\n    _classCallCheck(this, Block);\n\n    this.index = 0;\n    this.thaws = [];\n    this.count = count || 200;\n    this.options = options;\n  }\n\n  /**\n   * add an item to the end of items\n   * @param item\n   * @returns {Block}\n   */\n\n\n  _createClass(Block, [{\n    key: 'add',\n    value: function add(item) {\n      var next = this._next();\n      next.add(item);\n\n      return this;\n    }\n\n    /**\n     * add an Array to the end of items\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'addArray',\n    value: function addArray(items) {\n      var next = this._next();\n      next.addArray(items);\n\n      return this;\n    }\n\n    /**\n     * insert an item into items @ current position\n     * @param item\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insert',\n    value: function insert(item) {\n      var next = this._next();\n      next.insert(item);\n\n      return this;\n    }\n\n    /**\n     * insert and array into items @ current position\n     * @param items\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'insertArray',\n    value: function insertArray(items) {\n      var next = this._next();\n      next.insertArray(items);\n\n      return this;\n    }\n\n    /**\n     * Stops all thaws in this block\n     * @returns {Block}\n     */\n\n  }, {\n    key: 'stop',\n    value: function stop() {\n      for (var i = 0; i < this.thaws.length; i++) {\n        this.thaws[i].stop();\n      }\n      return this;\n    }\n\n    /**\n     * Get next available in block\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_next',\n    value: function _next() {\n      var thaw = null;\n      var thaws = this.thaws;\n\n      if (thaws.length < this.count) {\n        thaws.push(thaw = new _2.default([], this.options));\n      } else {\n        thaw = thaws[this.index];\n      }\n      this.index++;\n      if (this.index >= this.count) {\n        this.index = 0;\n      }\n\n      return thaw;\n    }\n  }]);\n\n  return Block;\n}();\n\nexports.default = Block;\n;\n//# sourceMappingURL=block.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = require(\"./utils-core\");\n\n/**\n * This is a minimalistic version of GPU.js used \n * to run precompiled GPU.JS code.\n *\n * This intentionally excludes the JS AST compiller : which is 400kb alone/\n *\n * @class GPUCore\n */\nmodule.exports = function () {\n\tfunction GPUCore() {\n\t\t_classCallCheck(this, GPUCore);\n\t}\n\n\t_createClass(GPUCore, null, [{\n\t\tkey: \"validateKernelObj\",\n\n\n\t\t/**\n   * @name validateKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Validates the KernelObj to comply with the defined format\n   * Note that this does only a limited sanity check, and does not  \n   * guarantee a full working validation.\n   *\n   * For the kernel object format see : <kernelObj-format>\n   *\n   * @param {Object|String} kernelObj - KernelObj used to validate\n   *\n   * @returns {Object} The validated kernel object, converted from JSON if needed\n   *\n   */\n\t\tvalue: function validateKernelObj(kernelObj) {\n\n\t\t\t// NULL validation\n\t\t\tif (kernelObj === null) {\n\t\t\t\tthrow \"KernelObj being validated is NULL\";\n\t\t\t}\n\n\t\t\t// String JSON conversion\n\t\t\tif (typeof kernelObj === \"string\") {\n\t\t\t\ttry {\n\t\t\t\t\tkernelObj = JSON.parse(kernelObj);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.error(e);\n\t\t\t\t\tthrow \"Failed to convert KernelObj from JSON string\";\n\t\t\t\t}\n\n\t\t\t\t// NULL validation\n\t\t\t\tif (kernelObj === null) {\n\t\t\t\t\tthrow \"Invalid (NULL) KernelObj JSON string representation\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Check for kernel obj flag\n\t\t\tif (kernelObj.isKernelObj !== true) {\n\t\t\t\tthrow \"Failed missing isKernelObj flag check\";\n\t\t\t}\n\n\t\t\t// Return the validated kernelObj\n\t\t\treturn kernelObj;\n\t\t}\n\n\t\t/**\n   * @name loadKernelObj\n   * @function\n   * @static\n   * @memberOf GPUCore\n   *\n   * @description Loads the precompiled kernel object. For GPUCore this is the ONLY way to create the kernel.\n   * To generate the kernelObj use <Kernel.exportKernelObj>\n   *\n   * Note that this function calls <validateKernelObj> internally, and throws an exception if it fails.\n   *\n   * @see GPUCore.validateKernelObj\n   * @see\tKernel.exportKernelObj\n   *\n   * @param {Object} kernelObj - The precompiled kernel object\n   * @param {Object} inOpt - [Optional] the option overrides to use\n   *\n   * @returns {Function} The kernel function\n   * \n   */\n\n\t}, {\n\t\tkey: \"loadKernelObj\",\n\t\tvalue: function loadKernelObj(kernelObj, inOpt) {\n\n\t\t\t// Validates the kernelObj, throws an exception if it fails\n\t\t\tkernelObj = validateKernelObj(kernelObj);\n\t\t}\n\t}]);\n\n\treturn GPUCore;\n}();","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar kernelString = require('./kernel-string');\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(CPUKernel, _KernelBase);\n\n\t/**\n  * @constructor CPUKernel\n  *\n  * @desc Kernel Implementation for CPU.\n  *\n  * <p>Instantiates properties to the CPU Kernel.</p>\n  *\n  * @extends KernelBase\n  *\n  * @prop {Object} thread - The thread dimensions, x, y and z\n  * @prop {Object} output - The canvas dimensions\n  * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n  * @prop {Function} run - Method to run the kernel\n  *\n  */\n\tfunction CPUKernel(fnString, settings) {\n\t\t_classCallCheck(this, CPUKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUKernel.__proto__ || Object.getPrototypeOf(CPUKernel)).call(this, fnString, settings));\n\n\t\t_this._fn = null;\n\t\t_this.run = null;\n\t\t_this._canvasCtx = null;\n\t\t_this._imageData = null;\n\t\t_this._colorData = null;\n\t\t_this._kernelString = null;\n\t\t_this.thread = {\n\t\t\tx: 0,\n\t\t\ty: 0,\n\t\t\tz: 0\n\t\t};\n\n\t\t_this.run = function () {\n\t\t\tthis.run = null;\n\t\t\tthis.build.apply(this, arguments);\n\t\t\treturn this.run.apply(this, arguments);\n\t\t}.bind(_this);\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPUKernel#\n  * @function\n  * @name validateOptions\n  *\n  * @desc Validate options related to CPU Kernel, such as\n  * dimensions size, and auto dimension support.\n  *\n  */\n\n\n\t_createClass(CPUKernel, [{\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow 'Auto dimensions only supported for kernels with only one input';\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow 'Auto dimensions not supported for input type: ' + argType;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by generating the kernel\n   * string using thread dimensions, and arguments\n   * supplied to the kernel.\n   *\n   * <p>If the graphical flag is enabled, canvas is used.</p>\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.validateOptions();\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (canvas) {\n\t\t\t\t// if node or canvas is not found, don't die\n\t\t\t\tthis._canvasCtx = canvas.getContext('2d');\n\t\t\t}\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tvar _canvas = this._canvas;\n\t\t\t\tif (!_canvas) {\n\t\t\t\t\tthrow new Error('no canvas available for using graphical output');\n\t\t\t\t}\n\t\t\t\t_canvas.width = threadDim[0];\n\t\t\t\t_canvas.height = threadDim[1];\n\t\t\t\tthis._imageData = this._canvasCtx.createImageData(threadDim[0], threadDim[1]);\n\t\t\t\tthis._colorData = new Uint8ClampedArray(threadDim[0] * threadDim[1] * 4);\n\t\t\t}\n\n\t\t\tvar kernelString = this.getKernelString();\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('Function output:');\n\t\t\t\tconsole.log(kernelString);\n\t\t\t}\n\n\t\t\tthis.kernelString = kernelString;\n\t\t\tthis.run = new Function([], kernelString).bind(this)();\n\t\t}\n\t}, {\n\t\tkey: 'color',\n\t\tvalue: function color(r, g, b, a) {\n\t\t\tif (typeof a === 'undefined') {\n\t\t\t\ta = 1;\n\t\t\t}\n\n\t\t\tr = Math.floor(r * 255);\n\t\t\tg = Math.floor(g * 255);\n\t\t\tb = Math.floor(b * 255);\n\t\t\ta = Math.floor(a * 255);\n\n\t\t\tvar width = this.output[0];\n\t\t\tvar height = this.output[1];\n\n\t\t\tvar x = this.thread.x;\n\t\t\tvar y = height - this.thread.y - 1;\n\n\t\t\tvar index = x + y * width;\n\n\t\t\tthis._colorData[index * 4 + 0] = r;\n\t\t\tthis._colorData[index * 4 + 1] = g;\n\t\t\tthis._colorData[index * 4 + 2] = b;\n\t\t\tthis._colorData[index * 4 + 3] = a;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name getKernelString\n   *\n   * @desc Generates kernel string for this kernel program.\n   *\n   * <p>If sub-kernels are supplied, they are also factored in.\n   * This string can be saved by calling the `toString` method\n   * and then can be reused later.</p>\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: 'getKernelString',\n\t\tvalue: function getKernelString() {\n\t\t\tif (this._kernelString !== null) return this._kernelString;\n\n\t\t\tvar builder = this.functionBuilder;\n\n\t\t\t// Thread dim fix (to make compilable)\n\t\t\tvar threadDim = this.threadDim || (this.threadDim = utils.clone(this.output));\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tparamSizes: this.paramSizes,\n\t\t\t\tconstantTypes: this.constantTypes\n\t\t\t});\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: threadDim\n\t\t\t});\n\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\tvar subKernel = this.subKernels[i];\n\t\t\t\t\tbuilder.addSubKernel(subKernel, {\n\t\t\t\t\t\tprototypeOnly: false,\n\t\t\t\t\t\tconstants: this.constants,\n\t\t\t\t\t\toutput: this.output,\n\t\t\t\t\t\tdebug: this.debug,\n\t\t\t\t\t\tloopMaxIterations: this.loopMaxIterations\n\t\t\t\t\t});\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t\t\t}\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tvar _i = 0;\n\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\tvar _subKernel = this.subKernelProperties[p];\n\t\t\t\t\tbuilder.addSubKernel(_subKernel);\n\t\t\t\t\tthis.subKernelOutputVariableNames.push(_subKernel.name + 'Result');\n\t\t\t\t\t_i++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tvar prototypes = builder.getPrototypes('kernel');\n\t\t\tvar kernel = null;\n\t\t\tif (prototypes.length > 1) {\n\t\t\t\tprototypes = prototypes.filter(function (fn) {\n\t\t\t\t\tif (/^function/.test(fn)) return fn;\n\t\t\t\t\tkernel = fn;\n\t\t\t\t\treturn false;\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tkernel = prototypes.shift();\n\t\t\t}\n\t\t\tvar kernelString = this._kernelString = '\\n\\t\\tvar LOOP_MAX = ' + this._getLoopMaxString() + '\\n\\t\\tvar constants = this.constants;\\n\\t\\tvar _this = this;\\n    return function (' + this.paramNames.map(function (paramName) {\n\t\t\t\treturn 'user_' + paramName;\n\t\t\t}).join(', ') + ') {\\n      ' + this._processConstants() + '\\n      ' + this._processParams() + '\\n      ' + this._kernelLoop(kernel) + '\\n      if (this.graphical) {\\n        this._imageData.data.set(this._colorData);\\n        this._canvasCtx.putImageData(this._imageData, 0, 0);\\n        return;\\n      }\\n      ' + this._kernelOutput() + '\\n      ' + (prototypes.length > 0 ? prototypes.join('\\n') : '') + '\\n    }.bind(this);';\n\t\t\treturn kernelString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + ';\\n' : ' 1000;\\n';\n\t\t}\n\t}, {\n\t\tkey: '_processConstants',\n\t\tvalue: function _processConstants() {\n\t\t\tif (!this.constants) return '';\n\n\t\t\tvar result = [];\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar type = this.constantTypes[p];\n\t\t\t\tswitch (type) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo2DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this._imageTo3DArray(this.constants.' + p + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tresult.push('  var constants_' + p + ' = this.constants.' + p);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: '_processParams',\n\t\tvalue: function _processParams() {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < this.paramTypes.length; i++) {\n\t\t\t\tswitch (this.paramTypes[i]) {\n\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo2DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = this._imageTo3DArray(user_' + this.paramNames[i] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tresult.push('  user_' + this.paramNames[i] + ' = user_' + this.paramNames[i] + '.value');\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join(';\\n');\n\t\t}\n\t}, {\n\t\tkey: '_imageTo2DArray',\n\t\tvalue: function _imageTo2DArray(image) {\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (canvas.width < image.width) {\n\t\t\t\tcanvas.width = image.width;\n\t\t\t}\n\t\t\tif (canvas.height < image.height) {\n\t\t\t\tcanvas.height = image.height;\n\t\t\t}\n\t\t\tvar ctx = this._canvasCtx;\n\t\t\tctx.drawImage(image, 0, 0, image.width, image.height);\n\t\t\tvar pixelsData = ctx.getImageData(0, 0, image.width, image.height).data;\n\t\t\tvar imageArray = new Array(image.height);\n\t\t\tvar index = 0;\n\t\t\tfor (var y = image.height - 1; y >= 0; y--) {\n\t\t\t\timageArray[y] = new Array(image.width);\n\t\t\t\tfor (var x = 0; x < image.width; x++) {\n\t\t\t\t\tvar r = pixelsData[index++] / 255;\n\t\t\t\t\tvar g = pixelsData[index++] / 255;\n\t\t\t\t\tvar b = pixelsData[index++] / 255;\n\t\t\t\t\tvar a = pixelsData[index++] / 255;\n\t\t\t\t\tvar result = [r, g, b, a];\n\t\t\t\t\tresult.r = r;\n\t\t\t\t\tresult.g = g;\n\t\t\t\t\tresult.b = b;\n\t\t\t\t\tresult.a = a;\n\t\t\t\t\timageArray[y][x] = result;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn imageArray;\n\t\t}\n\t}, {\n\t\tkey: '_imageTo3DArray',\n\t\tvalue: function _imageTo3DArray(images) {\n\t\t\tvar imagesArray = new Array(images.length);\n\t\t\tfor (var i = 0; i < images.length; i++) {\n\t\t\t\timagesArray[i] = this._imageTo2DArray(images[i]);\n\t\t\t}\n\t\t\treturn imagesArray;\n\t\t}\n\t}, {\n\t\tkey: '_kernelLoop',\n\t\tvalue: function _kernelLoop(kernelString) {\n\t\t\tswitch (this.output.length) {\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this._kernel1DLoop(kernelString);\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this._kernel2DLoop(kernelString);\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this._kernel3DLoop(kernelString);\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('unsupported size kernel');\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_kernel1DLoop',\n\t\tvalue: function _kernel1DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Float32Array(' + threadDim[0] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n      this.thread.x = x;\\n      this.thread.y = 0;\\n      this.thread.z = 0;\\n      var kernelResult;\\n      ' + kernelString + '\\n      result[x] = kernelResult;\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + '[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernel2DLoop',\n\t\tvalue: function _kernel2DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Array(' + threadDim[1] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var y = 0; y < ' + threadDim[1] + '; y++) {\\n      this.thread.z = 0;\\n      this.thread.y = y;\\n      var resultX = result[y] = new Float32Array(' + threadDim[0] + ');\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'X = result_' + name + '[y] = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n      for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n      \\tthis.thread.x = x;\\n        var kernelResult;\\n        ' + kernelString + '\\n        resultX[x] = kernelResult;\\n        ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + 'X[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n      }\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernel3DLoop',\n\t\tvalue: function _kernel3DLoop(kernelString) {\n\t\t\tvar threadDim = this.threadDim;\n\t\t\treturn '\\n    var result = new Array(' + threadDim[2] + ');\\n    ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + ' = new Array(' + threadDim[2] + ');\\n';\n\t\t\t}).join('') + '\\n    for (var z = 0; z < ' + threadDim[2] + '; z++) {\\n      this.thread.z = z;\\n      var resultY = result[z] = new Array(' + threadDim[1] + ');\\n      ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'Y = result_' + name + '[z] = new Array(' + threadDim[1] + ');\\n';\n\t\t\t}).join('') + '\\n      for (var y = 0; y < ' + threadDim[1] + '; y++) {\\n        this.thread.y = y;\\n        var resultX = resultY[y] = new Float32Array(' + threadDim[0] + ');\\n        ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'var result_' + name + 'X = result_' + name + 'Y[y] = new Float32Array(' + threadDim[0] + ');\\n';\n\t\t\t}).join('') + '\\n        for (var x = 0; x < ' + threadDim[0] + '; x++) {\\n        \\tthis.thread.x = x;\\n          var kernelResult;\\n          ' + kernelString + '\\n          resultX[x] = kernelResult;\\n          ' + this._mapSubKernels(function (name) {\n\t\t\t\treturn 'result_' + name + 'X[x] = ' + name + ';\\n';\n\t\t\t}).join('') + '\\n        }\\n      }\\n    }';\n\t\t}\n\t}, {\n\t\tkey: '_kernelOutput',\n\t\tvalue: function _kernelOutput() {\n\t\t\tvar _this2 = this;\n\n\t\t\tif (!this.subKernelOutputVariableNames) {\n\t\t\t\treturn 'return result;';\n\t\t\t}\n\t\t\treturn 'return {\\n      result: result,\\n      ' + Object.keys(this.subKernelProperties || this.subKernelOutputVariableNames).map(function (name, i) {\n\t\t\t\treturn name + ': result_' + _this2.subKernelOutputVariableNames[i];\n\t\t\t}).join(',\\n') + '\\n    };';\n\t\t}\n\t}, {\n\t\tkey: '_mapSubKernels',\n\t\tvalue: function _mapSubKernels(fn) {\n\t\t\treturn this.subKernelOutputVariableNames === null ? [''] : this.subKernelOutputVariableNames.map(fn);\n\t\t}\n\t}]);\n\n\treturn CPUKernel;\n}(KernelBase);","'use strict';\n\n/**\n *\n * @desc Reduced subset of Utils, used exclusively in gpu-core.js\n * Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class is 'static' by nature `UtilsCore.functionName()`\n *\n * @class UtilsCore\n *\n */\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar UtilsCore = function () {\n\tfunction UtilsCore() {\n\t\t_classCallCheck(this, UtilsCore);\n\t}\n\n\t_createClass(UtilsCore, null, [{\n\t\tkey: 'isCanvas',\n\n\n\t\t/**\n   * @typedef {Object} webGlContext\n   */\n\n\t\t/**\n   * @typedef {Object} CanvasDOMObject\n   */\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Canvas validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @name isCanvas\n   * @static\n   * @function\n   * @memberOf UtilsCore\n   *\n   *\n   * @desc Return TRUE, on a valid DOM canvas or OffscreenCanvas object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a DOM canvas or OffscreenCanvas\n   *\n   */\n\t\tvalue: function isCanvas(canvasObj) {\n\t\t\treturn canvasObj !== null && (canvasObj.nodeName && canvasObj.getContext && canvasObj.nodeName.toUpperCase() === 'CANVAS' || typeof OffscreenCanvas !== 'undefined' && canvasObj instanceof OffscreenCanvas);\n\t\t}\n\n\t\t/**\n   * @name isCanvasSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports canvas\n   *\n   * @returns {Boolean} TRUE if browser supports canvas\n   *\n   */\n\n\t}, {\n\t\tkey: 'isCanvasSupported',\n\t\tvalue: function isCanvasSupported() {\n\t\t\treturn _isCanvasSupported;\n\t\t}\n\n\t\t/**\n   * @name initCanvas\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a canvas, for usage in init_webgl.\n   * Returns only if canvas is supported by browser.\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initCanvas',\n\t\tvalue: function initCanvas() {\n\t\t\t// Fail fast if browser previously detected no support\n\t\t\tif (!_isCanvasSupported) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar canvas = typeof document !== 'undefined' ? document.createElement('canvas') : new OffscreenCanvas(0, 0);\n\n\t\t\t// Default width and height, to fix webgl issue in safari\n\t\t\tcanvas.width = 2;\n\t\t\tcanvas.height = 2;\n\n\t\t\t// Returns the canvas\n\t\t\treturn canvas;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Webgl validation and support\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\n\t\t/**\n   *\n   * @name isWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGlContext object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGlObj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGlContext object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl',\n\t\tvalue: function isWebGl(webGlObj) {\n\t\t\treturn webGlObj && typeof webGlObj.getExtension === 'function';\n\t\t}\n\n\t\t/**\n   *\n   * @name isWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, on a valid webGl2Context object\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {webGlContext} webGl2Obj - Object to validate\n   *\n   * @returns {Boolean} TRUE if the object is a webGl2Context object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl2',\n\t\tvalue: function isWebGl2(webGl2Obj) {\n\t\t\treturn webGl2Obj && typeof WebGL2RenderingContext !== 'undefined' && webGl2Obj instanceof WebGL2RenderingContext;\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl\n   *\n   * @returns {Boolean} TRUE if browser supports webgl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn _isWebGlSupported;\n\t\t}\n\n\t\t/**\n   * @name isWebGlSupported2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Return TRUE, if browser supports webgl2\n   *\n   * @returns {Boolean} TRUE if browser supports webgl2\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGl2Supported',\n\t\tvalue: function isWebGl2Supported() {\n\t\t\treturn _isWebGl2Supported;\n\t\t}\n\t}, {\n\t\tkey: 'isWebGlDrawBuffersSupported',\n\t\tvalue: function isWebGlDrawBuffersSupported() {\n\t\t\treturn _isWebGlDrawBuffersSupported;\n\t\t}\n\n\t\t// Default webgl options to use\n\n\t}, {\n\t\tkey: 'initWebGlDefaultOptions',\n\t\tvalue: function initWebGlDefaultOptions() {\n\t\t\treturn {\n\t\t\t\talpha: false,\n\t\t\t\tdepth: false,\n\t\t\t\tantialias: false\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @name initWebGl\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\tvar webGl = null;\n\t\t\tvar defaultOptions = UtilsCore.initWebGlDefaultOptions();\n\t\t\ttry {\n\t\t\t\twebGl = canvasObj.getContext('experimental-webgl', defaultOptions);\n\t\t\t} catch (e) {\n\t\t\t\t// 'experimental-webgl' is not a supported context type\n\t\t\t\t// fallback to 'webgl2' or 'webgl' below\n\t\t\t}\n\n\t\t\tif (webGl === null) {\n\t\t\t\twebGl = canvasObj.getContext('webgl2', defaultOptions) || canvasObj.getContext('webgl', defaultOptions);\n\t\t\t}\n\n\t\t\tif (webGl) {\n\t\t\t\t// Get the extension that is needed\n\t\t\t\twebGl.OES_texture_float = webGl.getExtension('OES_texture_float');\n\t\t\t\twebGl.OES_texture_float_linear = webGl.getExtension('OES_texture_float_linear');\n\t\t\t\twebGl.OES_element_index_uint = webGl.getExtension('OES_element_index_uint');\n\t\t\t}\n\n\t\t\t// Returns the canvas\n\t\t\treturn webGl;\n\t\t}\n\n\t\t/**\n   * @name initWebGl2\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   *\n   * @desc Initiate and returns a webGl, from a canvas object\n   * Returns only if webGl is supported by browser.\n   *\n   * @param {CanvasDOMObject} canvasObj - Object to validate\n   *\n   * @returns {CanvasDOMObject} CanvasDOMObject if supported by browser, else null\n   *\n   */\n\n\t}, {\n\t\tkey: 'initWebGl2',\n\t\tvalue: function initWebGl2(canvasObj) {\n\n\t\t\t// First time setup, does the browser support check memorizer\n\t\t\tif (typeof _isCanvasSupported !== 'undefined' || canvasObj === null) {\n\t\t\t\tif (!_isCanvasSupported) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fail fast for invalid canvas object\n\t\t\tif (!UtilsCore.isCanvas(canvasObj)) {\n\t\t\t\tthrow new Error('Invalid canvas object - ' + canvasObj);\n\t\t\t}\n\n\t\t\t// Create a new canvas DOM\n\t\t\treturn canvasObj.getContext('webgl2', UtilsCore.initWebGlDefaultOptions());\n\t\t}\n\n\t\t/**\n   * @function\n   * @static\n   * @memberOf UtilsCore\n   * @param {number[]} output\n   * @throws if not correctly defined\n   */\n\n\t}, {\n\t\tkey: 'checkOutput',\n\t\tvalue: function checkOutput(output) {\n\t\t\tif (!output || !Array.isArray(output)) throw new Error('kernel.output not an array');\n\t\t\tfor (var i = 0; i < output.length; i++) {\n\t\t\t\tif (isNaN(output[i]) || output[i] < 1) {\n\t\t\t\t\tthrow new Error('kernel.output[' + i + '] incorrectly defined as `' + output[i] + '`, needs to be numeric, and greater than 0');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}]);\n\n\treturn UtilsCore;\n}();\n\n//-----------------------------------------------------------------------------\n//\n//  Canvas & Webgl validation and support constants\n//\n//-----------------------------------------------------------------------------\n\nvar _isCanvasSupported = typeof document !== 'undefined' ? UtilsCore.isCanvas(document.createElement('canvas')) : typeof OffscreenCanvas !== 'undefined';\nvar _testingWebGl = UtilsCore.initWebGl(UtilsCore.initCanvas());\nvar _testingWebGl2 = UtilsCore.initWebGl2(UtilsCore.initCanvas());\nvar _isWebGlSupported = UtilsCore.isWebGl(_testingWebGl);\nvar _isWebGl2Supported = UtilsCore.isWebGl2(_testingWebGl2);\nvar _isWebGlDrawBuffersSupported = _isWebGlSupported && Boolean(_testingWebGl.getExtension('WEBGL_draw_buffers'));\n\nif (_isWebGlSupported) {\n\tUtilsCore.OES_texture_float = _testingWebGl.OES_texture_float;\n\tUtilsCore.OES_texture_float_linear = _testingWebGl.OES_texture_float_linear;\n\tUtilsCore.OES_element_index_uint = _testingWebGl.OES_element_index_uint;\n} else {\n\tUtilsCore.OES_texture_float = false;\n\tUtilsCore.OES_texture_float_linear = false;\n\tUtilsCore.OES_element_index_uint = false;\n}\n\nmodule.exports = UtilsCore;","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('../web-gl/kernel');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\n\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2Kernel, _WebGLKernel);\n\n\tfunction WebGL2Kernel() {\n\t\t_classCallCheck(this, WebGL2Kernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2Kernel.__proto__ || Object.getPrototypeOf(WebGL2Kernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2Kernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl2(this.getCanvas());\n\t\t}\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupportedWebGL2();\n\t\t\tif (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\n\t\t\tif (this.floatOutput || this.floatOutputForce) {\n\t\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', new Int32Array(this.threadDim));\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.outputToTexture) {\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\t\t\tif (!this.outputTexture || this.outputImmutable) {\n\t\t\t\t\t\tthis._setupOutputTexture();\n\t\t\t\t\t}\n\t\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\treturn new Texture(this.outputTexture, texSize, this.threadDim, this.output, this._webGl, 'ArrayTexture(4)');\n\t\t\t\t}\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tgl.drawBuffers(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tcase 'Number':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim3 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size3 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, _internalFormat, width, height, textureDepth, border, _srcFormat, _srcType, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat, _srcType, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim4 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size4 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim4);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size4);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // always float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2D constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\tresult.push('uniform highp sampler2DArray constants_' + name, 'uniform highp ivec2 constants_' + name + 'Size', 'uniform highp ivec3 constants_' + name + 'Dim', 'uniform highp int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim5 = input.size;\n\t\t\t\t\t\tvar _size5 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim5);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size5[0] * _size5[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA32F, _size5[0], _size5[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size5[0] / _bitRatio2, _size5[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim6 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size6 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImages = value;\n\t\t\t\t\t\tvar _dim7 = [inputImages[0].width, inputImages[0].height, inputImages.length];\n\t\t\t\t\t\tvar _size7 = [inputImages[0].width, inputImages[0].height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D_ARRAY, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D_ARRAY, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the images into the texture.\n\t\t\t\t\t\tvar _mipLevel2 = 0; // the largest mip\n\t\t\t\t\t\tvar _internalFormat2 = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar width = inputImages[0].width;\n\t\t\t\t\t\tvar height = inputImages[0].height;\n\t\t\t\t\t\tvar textureDepth = inputImages.length;\n\t\t\t\t\t\tvar border = 0;\n\t\t\t\t\t\tvar _srcFormat2 = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar _srcType2 = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, _internalFormat2, width, height, textureDepth, border, _srcFormat2, _srcType2, null);\n\t\t\t\t\t\tfor (var i = 0; i < inputImages.length; i++) {\n\t\t\t\t\t\t\tvar xOffset = 0;\n\t\t\t\t\t\t\tvar yOffset = 0;\n\t\t\t\t\t\t\tvar imageDepth = 1;\n\t\t\t\t\t\t\tgl.texSubImage3D(gl.TEXTURE_2D_ARRAY, _mipLevel2, xOffset, yOffset, i, inputImages[i].width, inputImages[i].height, imageDepth, _srcFormat2, _srcType2, inputImages[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim7);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size7);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim8 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size8 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim8);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size8);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn '  return texel[channel];';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'in highp vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out highp vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'highp ivec2 user_' + paramName + 'Size = ivec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'highp ivec3 user_' + paramName + 'Dim = ivec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('highp float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2D user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform highp int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'HTMLImageArray') {\n\t\t\t\t\t\tresult.push('uniform highp sampler2DArray user_' + paramName, 'uniform highp ivec2 user_' + paramName + 'Size', 'uniform highp ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tresult.push('layout(location = 0) out vec4 data0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0', 'layout(location = ' + (i + 1) + ') out vec4 data' + (i + 1));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('out vec4 data0');\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  data' + (j + 1) + '.' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  data0.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  data0 = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  data' + (_i2 + 1) + ' = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  data0 = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2Kernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\t}], [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t}]);\n\n\treturn WebGL2Kernel;\n}(WebGLKernel);","'use strict';\n\nvar utils = require('../core/utils');\n\nmodule.exports = function kernelRunShortcut(kernel) {\n\tvar shortcut = function shortcut() {\n\t\treturn kernel.run.apply(kernel, arguments);\n\t};\n\n\tutils.allPropertiesOf(kernel).forEach(function (key) {\n\t\tif (key[0] === '_' && key[1] === '_') return;\n\t\tif (typeof kernel[key] === 'function') {\n\t\t\tif (key.substring(0, 3) === 'add' || key.substring(0, 3) === 'set') {\n\t\t\t\tshortcut[key] = function () {\n\t\t\t\t\tkernel[key].apply(kernel, arguments);\n\t\t\t\t\treturn shortcut;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tshortcut[key] = kernel[key].bind(kernel);\n\t\t\t}\n\t\t} else {\n\t\t\tshortcut.__defineGetter__(key, function () {\n\t\t\t\treturn kernel[key];\n\t\t\t});\n\t\t\tshortcut.__defineSetter__(key, function (value) {\n\t\t\t\tkernel[key] = value;\n\t\t\t});\n\t\t}\n\t});\n\n\tshortcut.kernel = kernel;\n\n\treturn shortcut;\n};","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","'use strict';\n\nvar GPU = require('./core/gpu');\nvar alias = require('./core/alias');\nvar utils = require('./core/utils');\nvar Input = require('./core/input');\nvar Texture = require('./core/texture');\n\nvar CPUFunctionBuilder = require('./backend/cpu/function-builder');\nvar CPUFunctionNode = require('./backend/cpu/function-node');\nvar CPUKernel = require('./backend/cpu/kernel');\nvar CPURunner = require('./backend/cpu/runner');\n\nvar WebGLFunctionBuilder = require('./backend/web-gl/function-builder');\nvar WebGLFunctionNode = require('./backend/web-gl/function-node');\nvar WebGLKernel = require('./backend/web-gl/kernel');\nvar WebGLRunner = require('./backend/web-gl/runner');\n\nvar WebGL2FunctionBuilder = require('./backend/web-gl2/function-builder');\nvar WebGL2FunctionNode = require('./backend/web-gl2/function-node');\nvar WebGL2Kernel = require('./backend/web-gl2/kernel');\nvar WebGL2Runner = require('./backend/web-gl2/runner');\n\nGPU.alias = alias;\nGPU.utils = utils;\nGPU.Texture = Texture;\nGPU.Input = Input;\nGPU.input = function (value, size) {\n\treturn new Input(value, size);\n};\n\nGPU.CPUFunctionBuilder = CPUFunctionBuilder;\nGPU.CPUFunctionNode = CPUFunctionNode;\nGPU.CPUKernel = CPUKernel;\nGPU.CPURunner = CPURunner;\n\nGPU.WebGLFunctionBuilder = WebGLFunctionBuilder;\nGPU.WebGLFunctionNode = WebGLFunctionNode;\nGPU.WebGLKernel = WebGLKernel;\nGPU.WebGLRunner = WebGLRunner;\n\nGPU.WebGL2FunctionBuilder = WebGL2FunctionBuilder;\nGPU.WebGL2FunctionNode = WebGL2FunctionNode;\nGPU.WebGL2Kernel = WebGL2Kernel;\nGPU.WebGL2Runner = WebGL2Runner;\n\nif (typeof module !== 'undefined') {\n\tmodule.exports = GPU;\n}\nif (typeof window !== 'undefined') {\n\twindow.GPU = GPU;\n}\nif (typeof self !== 'undefined') {\n\tself.GPU = GPU;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _randomMatrix = require('./matrix/random-matrix');\n\nvar _randomMatrix2 = _interopRequireDefault(_randomMatrix);\n\nvar _equation = require('./matrix/equation');\n\nvar _equation2 = _interopRequireDefault(_equation);\n\nvar _rnn = require('./rnn');\n\nvar _rnn2 = _interopRequireDefault(_rnn);\n\nvar _zeros = require('../utilities/zeros');\n\nvar _zeros2 = _interopRequireDefault(_zeros);\n\nvar _softmax = require('./matrix/softmax');\n\nvar _softmax2 = _interopRequireDefault(_softmax);\n\nvar _random = require('../utilities/random');\n\nvar _sampleI = require('./matrix/sample-i');\n\nvar _sampleI2 = _interopRequireDefault(_sampleI);\n\nvar _maxI = require('./matrix/max-i');\n\nvar _maxI2 = _interopRequireDefault(_maxI);\n\nvar _lookup = require('../lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nvar _lookupTable2 = require('../utilities/lookup-table');\n\nvar _lookupTable3 = _interopRequireDefault(_lookupTable2);\n\nvar _arrayLookupTable = require('../utilities/array-lookup-table');\n\nvar _arrayLookupTable2 = _interopRequireDefault(_arrayLookupTable);\n\nvar _cast = require('../utilities/cast');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RNNTimeStep = function (_RNN) {\n  _inherits(RNNTimeStep, _RNN);\n\n  function RNNTimeStep() {\n    _classCallCheck(this, RNNTimeStep);\n\n    return _possibleConstructorReturn(this, (RNNTimeStep.__proto__ || Object.getPrototypeOf(RNNTimeStep)).apply(this, arguments));\n  }\n\n  _createClass(RNNTimeStep, [{\n    key: 'createOutputMatrix',\n    value: function createOutputMatrix() {\n      var model = this.model;\n      var outputSize = this.outputSize;\n      var lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n      //whd\n      model.outputConnector = new _randomMatrix2.default(outputSize, lastHiddenSize, 0.08);\n      //bd\n      model.output = new _randomMatrix2.default(outputSize, 1, 0.08);\n    }\n  }, {\n    key: 'bindEquation',\n    value: function bindEquation() {\n      var model = this.model;\n      var hiddenLayers = this.hiddenLayers;\n      var layers = model.hiddenLayers;\n      var equation = new _equation2.default();\n      var outputs = [];\n      var equationConnection = model.equationConnections.length > 0 ? model.equationConnections[model.equationConnections.length - 1] : this.initialLayerInputs;\n\n      // 0 index\n      var output = this.getEquation(equation, equation.input(new _matrix2.default(this.inputSize, 1)), equationConnection[0], layers[0]);\n      outputs.push(output);\n      // 1+ indices\n      for (var i = 1, max = hiddenLayers.length; i < max; i++) {\n        output = this.getEquation(equation, output, equationConnection[i], layers[i]);\n        outputs.push(output);\n      }\n\n      model.equationConnections.push(outputs);\n      equation.add(equation.multiply(model.outputConnector, output), model.output);\n      model.equations.push(equation);\n    }\n  }, {\n    key: 'mapModel',\n    value: function mapModel() {\n      var model = this.model;\n      var hiddenLayers = model.hiddenLayers;\n      var allMatrices = model.allMatrices;\n      this.initialLayerInputs = this.hiddenLayers.map(function (size) {\n        return new _matrix2.default(size, 1);\n      });\n\n      this.createHiddenLayers();\n      if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n      for (var i = 0, max = hiddenLayers.length; i < max; i++) {\n        var hiddenMatrix = hiddenLayers[i];\n        for (var property in hiddenMatrix) {\n          if (!hiddenMatrix.hasOwnProperty(property)) continue;\n          allMatrices.push(hiddenMatrix[property]);\n        }\n      }\n\n      this.createOutputMatrix();\n      if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n      if (!model.output) throw new Error('net.model.output not set');\n\n      allMatrices.push(model.outputConnector);\n      allMatrices.push(model.output);\n    }\n  }, {\n    key: 'backpropagate',\n    value: function backpropagate() {\n      for (var i = this.model.equations.length - 1; i > -1; i--) {\n        this.model.equations[i].backpropagate();\n      }\n    }\n\n    /**\n     *\n     * @param {number[]|number[][]|object|object[][]} [rawInput]\n     * @returns {number[]|number|object|object[]|object[][]}\n     */\n\n  }, {\n    key: 'run',\n    value: function run(rawInput) {\n      if (this.inputSize === 1) {\n        if (this.outputLookup) {\n          this.run = this.runObject;\n          return this.runObject(rawInput);\n        }\n        this.run = this.runNumbers;\n        return this.runNumbers(rawInput);\n      }\n      this.run = this.runArrays;\n      return this.runArrays(rawInput);\n    }\n  }, {\n    key: 'forecast',\n    value: function forecast(input, count) {\n      if (this.inputSize === 1) {\n        if (this.outputLookup) {\n          this.forecast = this.runObject;\n          return this.runObject(input);\n        }\n        this.forecast = this.forecastNumbers;\n        return this.forecastNumbers(input, count);\n      }\n      if (this.outputLookup) {\n        this.forecast = this.forecastObjects;\n        return this.forecastObjects(input, count);\n      }\n      this.forecast = this.forecastArrays;\n      return this.forecastArrays(input, count);\n    }\n\n    /**\n     *\n     * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n     * @param {Object} [options]\n     * @returns {{error: number, iterations: number}}\n     */\n\n  }, {\n    key: 'train',\n    value: function train(data) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n      var iterations = options.iterations;\n      var errorThresh = options.errorThresh;\n      var log = options.log === true ? console.log : options.log;\n      var logPeriod = options.logPeriod;\n      var callback = options.callback;\n      var callbackPeriod = options.callbackPeriod;\n\n      if (this.inputSize === 1 || !this.inputSize) {\n        this.setSize(data);\n      }\n\n      data = this.formatData(data);\n      var error = Infinity;\n      var i = void 0;\n\n      this.verifyIsInitialized(data);\n\n      for (i = 0; i < iterations && error > errorThresh; i++) {\n        var sum = 0;\n        for (var j = 0; j < data.length; j++) {\n          var err = this.trainPattern(data[j], true);\n          sum += err;\n        }\n        error = sum / data.length;\n\n        if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n        if (log && i % logPeriod === 0) {\n          log('iterations: ' + i + ', training error: ' + error);\n        }\n        if (callback && i % callbackPeriod === 0) {\n          callback({ error: error, iterations: i });\n        }\n      }\n\n      return {\n        error: error,\n        iterations: i\n      };\n    }\n\n    /**\n     *\n     * @param data\n     * Verifies network sizes are initialized\n     * If they are not it will initialize them based off the data set.\n     */\n\n  }, {\n    key: 'verifyIsInitialized',\n    value: function verifyIsInitialized(data) {\n      if (data[0].input) {\n        this.trainInput = this.trainInputOutput;\n      } else if (data[0].length > 0) {\n        if (data[0][0].length > 0) {\n          this.trainInput = this.trainArrays;\n        } else {\n          if (this.inputSize > 1) {\n            this.trainInput = this.trainArrays;\n          } else {\n            this.trainInput = this.trainNumbers;\n          }\n        }\n      }\n\n      if (!this.model) {\n        this.initialize();\n      }\n    }\n  }, {\n    key: 'setSize',\n    value: function setSize(data) {\n      var dataShape = _lookup2.default.dataShape(data).join(',');\n      switch (dataShape) {\n        case 'array,array,number':\n        case 'array,object,number':\n        case 'array,datum,array,number':\n        case 'array,datum,object,number':\n          // probably 1\n          break;\n        case 'array,array,array,number':\n          this.inputSize = this.outputSize = data[0][0].length;\n          break;\n        case 'array,array,object,number':\n          this.inputSize = this.outputSize = Object.keys(_lookup2.default.toTable2D(data)).length;\n          break;\n        case 'array,datum,array,array,number':\n          this.inputSize = this.outputSize = data[0].input[0].length;\n          break;\n        case 'array,datum,array,object,number':\n          this.inputSize = Object.keys(_lookup2.default.toInputTable2D(data)).length;\n          this.outputSize = Object.keys(_lookup2.default.toOutputTable2D(data)).length;\n          break;\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n    }\n  }, {\n    key: 'trainNumbers',\n    value: function trainNumbers(input) {\n      var model = this.model;\n      var equations = model.equations;\n      while (equations.length < input.length) {\n        this.bindEquation();\n      }\n      var errorSum = 0;\n      for (var i = 0, max = input.length - 1; i < max; i++) {\n        errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n      }\n      this.end();\n      return errorSum / input.length;\n    }\n  }, {\n    key: 'runNumbers',\n    value: function runNumbers(input) {\n      if (!this.isRunnable) return null;\n      var model = this.model;\n      var equations = model.equations;\n      if (this.inputLookup) {\n        input = _lookup2.default.toArray(this.inputLookup, input, this.inputLookupLength);\n      }\n      while (equations.length <= input.length) {\n        this.bindEquation();\n      }\n      var lastOutput = void 0;\n      for (var i = 0; i < input.length; i++) {\n        lastOutput = equations[i].runInput([input[i]]);\n      }\n      this.end();\n      return lastOutput.weights[0];\n    }\n  }, {\n    key: 'forecastNumbers',\n    value: function forecastNumbers(input, count) {\n      if (!this.isRunnable) return null;\n      var model = this.model;\n      var equations = model.equations;\n      var length = input.length + count;\n      while (equations.length <= length) {\n        this.bindEquation();\n      }\n      var lastOutput = void 0;\n      var equationIndex = 0;\n      for (var i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput([input[i]]);\n      }\n      var result = [lastOutput.weights[0]];\n      for (var _i = 0, max = count - 1; _i < max; _i++) {\n        lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n        result.push(lastOutput.weights[0]);\n      }\n      this.end();\n      return result;\n    }\n  }, {\n    key: 'runObject',\n    value: function runObject(input) {\n      if (this.inputLookup === this.outputLookup) {\n        var inputArray = _lookup2.default.toArrayShort(this.inputLookup, input);\n        return _lookup2.default.toObjectPartial(this.outputLookup, this.forecastNumbers(inputArray, this.outputLookupLength - inputArray.length), inputArray.length);\n      }\n      return _lookup2.default.toObject(this.outputLookup, this.forecastNumbers(_lookup2.default.toArray(this.inputLookup, input, this.inputLookupLength), this.outputLookupLength));\n    }\n  }, {\n    key: 'forecastObjects',\n    value: function forecastObjects(input, count) {\n      var _this2 = this;\n\n      input = input.map(function (value) {\n        return _lookup2.default.toArray(_this2.outputLookup, value, _this2.outputLookupLength);\n      });\n      return this.forecastArrays(input, count).map(function (value) {\n        return _lookup2.default.toObject(_this2.outputLookup, value);\n      });\n    }\n  }, {\n    key: 'trainInputOutput',\n    value: function trainInputOutput(object) {\n      var model = this.model;\n      var input = object.input;\n      var output = object.output;\n      var totalSize = input.length + output.length;\n      var equations = model.equations;\n      while (equations.length < totalSize) {\n        this.bindEquation();\n      }\n      var errorSum = 0;\n      var equationIndex = 0;\n      for (var inputIndex = 0, max = input.length - 1; inputIndex < max; inputIndex++) {\n        errorSum += equations[equationIndex++].predictTarget(input[inputIndex], input[inputIndex + 1]);\n      }\n      errorSum += equations[equationIndex++].predictTarget(input[input.length - 1], output[0]);\n      for (var outputIndex = 0, _max = output.length - 1; outputIndex < _max; outputIndex++) {\n        errorSum += equations[equationIndex++].predictTarget(output[outputIndex], output[outputIndex + 1]);\n      }\n      this.end();\n      return errorSum / totalSize;\n    }\n  }, {\n    key: 'trainArrays',\n    value: function trainArrays(input) {\n      var model = this.model;\n      var equations = model.equations;\n      while (equations.length < input.length) {\n        this.bindEquation();\n      }\n      var errorSum = 0;\n      for (var i = 0, max = input.length - 1; i < max; i++) {\n        errorSum += equations[i].predictTarget(input[i], input[i + 1]);\n      }\n      this.end();\n      return errorSum / input.length;\n    }\n  }, {\n    key: 'runArrays',\n    value: function runArrays(input) {\n      if (!this.isRunnable) return null;\n      var model = this.model;\n      var equations = model.equations;\n      while (equations.length <= input.length) {\n        this.bindEquation();\n      }\n      if (this.inputLookup) {\n        input = _lookup2.default.toArrays(this.inputLookup, input, this.inputLookupLength);\n      }\n      var lastOutput = void 0;\n      for (var i = 0; i < input.length; i++) {\n        var outputMatrix = equations[i].runInput(input[i]);\n        lastOutput = outputMatrix.weights;\n      }\n      this.end();\n      if (this.outputLookup) {\n        return _lookup2.default.toObject(this.outputLookup, lastOutput);\n      }\n      return lastOutput;\n    }\n  }, {\n    key: 'forecastArrays',\n    value: function forecastArrays(input, count) {\n      if (!this.isRunnable) return null;\n      var model = this.model;\n      var equations = model.equations;\n      var length = input.length + count;\n      while (equations.length <= length) {\n        this.bindEquation();\n      }\n      var lastOutput = void 0;\n      var equationIndex = 0;\n      for (var i = 0; i < input.length; i++) {\n        lastOutput = equations[equationIndex++].runInput(input[i]);\n      }\n      var result = [lastOutput.weights];\n      for (var _i2 = 0, max = count - 1; _i2 < max; _i2++) {\n        lastOutput = equations[equationIndex++].runInput(lastOutput.weights);\n        result.push(lastOutput.weights.slice(0));\n      }\n      this.end();\n      return result;\n    }\n  }, {\n    key: 'end',\n    value: function end() {\n      this.model.equations[this.model.equations.length - 1].runInput(new Float32Array(this.outputSize));\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {*}\n     */\n\n  }, {\n    key: 'formatData',\n    value: function formatData(data) {\n      var dataShape = _lookup2.default.dataShape(data).join(',');\n      var result = [];\n      switch (dataShape) {\n        case 'array,number':\n          {\n            if (this.inputSize !== 1) {\n              throw new Error('inputSize must be 1 for this data size');\n            }\n            if (this.outputSize !== 1) {\n              throw new Error('outputSize must be 1 for this data size');\n            }\n            for (var i = 0; i < data.length; i++) {\n              result.push(Float32Array.from([data[i]]));\n            }\n            return [result];\n          }\n        case 'array,array,number':\n          {\n            if (this.inputSize === 1 && this.outputSize === 1) {\n              for (var _i3 = 0; _i3 < data.length; _i3++) {\n                result.push((0, _cast.arrayToFloat32Arrays)(data[_i3]));\n              }\n              return result;\n            }\n            if (this.inputSize !== data[0].length) {\n              throw new Error('inputSize must match data input size');\n            }\n            if (this.outputSize !== data[0].length) {\n              throw new Error('outputSize must match data input size');\n            }\n            for (var _i4 = 0; _i4 < data.length; _i4++) {\n              result.push(Float32Array.from(data[_i4]));\n            }\n            return [result];\n          }\n        case 'array,object,number':\n          {\n            if (this.inputSize !== 1) {\n              throw new Error('inputSize must be 1 for this data size');\n            }\n            if (this.outputSize !== 1) {\n              throw new Error('outputSize must be 1 for this data size');\n            }\n            if (!this.inputLookup) {\n              var lookupTable = new _lookupTable3.default(data);\n              this.inputLookup = this.outputLookup = lookupTable.table;\n              this.inputLookupLength = this.outputLookupLength = lookupTable.length;\n            }\n            for (var _i5 = 0; _i5 < data.length; _i5++) {\n              result.push((0, _cast.objectToFloat32Arrays)(data[_i5]));\n            }\n            return result;\n          }\n        case 'array,datum,array,number':\n          {\n            if (this.inputSize !== 1) {\n              throw new Error('inputSize must be 1 for this data size');\n            }\n            if (this.outputSize !== 1) {\n              throw new Error('outputSize must be 1 for this data size');\n            }\n            for (var _i6 = 0; _i6 < data.length; _i6++) {\n              var datum = data[_i6];\n              result.push({\n                input: (0, _cast.arrayToFloat32Arrays)(datum.input),\n                output: (0, _cast.arrayToFloat32Arrays)(datum.output)\n              });\n            }\n            return result;\n          }\n        case 'array,datum,object,number':\n          {\n            if (this.inputSize !== 1) {\n              throw new Error('inputSize must be 1 for this data size');\n            }\n            if (this.outputSize !== 1) {\n              throw new Error('outputSize must be 1 for this data size');\n            }\n            if (!this.inputLookup) {\n              var inputLookup = new _lookupTable3.default(data, 'input');\n              this.inputLookup = inputLookup.table;\n              this.inputLookupLength = inputLookup.length;\n            }\n            if (!this.outputLookup) {\n              var outputLookup = new _lookupTable3.default(data, 'output');\n              this.outputLookup = outputLookup.table;\n              this.outputLookupLength = outputLookup.length;\n            }\n            for (var _i7 = 0; _i7 < data.length; _i7++) {\n              var _datum = data[_i7];\n              result.push({\n                input: (0, _cast.objectToFloat32Arrays)(_datum.input),\n                output: (0, _cast.objectToFloat32Arrays)(_datum.output)\n              });\n            }\n            return result;\n          }\n        case 'array,array,array,number':\n          {\n            for (var _i8 = 0; _i8 < data.length; _i8++) {\n              result.push((0, _cast.arraysToFloat32Arrays)(data[_i8]));\n            }\n            return result;\n          }\n        case 'array,array,object,number':\n          {\n            if (!this.inputLookup) {\n              var _lookupTable = new _lookupTable3.default(data);\n              this.inputLookup = this.outputLookup = _lookupTable.table;\n              this.inputLookupLength = this.outputLookupLength = _lookupTable.length;\n            }\n            for (var _i9 = 0; _i9 < data.length; _i9++) {\n              var array = [];\n              for (var j = 0; j < data[_i9].length; j++) {\n                array.push((0, _cast.objectToFloat32Array)(data[_i9][j], this.inputLookup, this.inputLookupLength));\n              }\n              result.push(array);\n            }\n            return result;\n          }\n        case 'array,datum,array,array,number':\n          {\n            if (this.inputSize === 1 && this.outputSize === 1) {\n              for (var _i10 = 0; _i10 < data.length; _i10++) {\n                var _datum2 = data[_i10];\n                result.push({\n                  input: Float32Array.from(_datum2.input),\n                  output: Float32Array.from(_datum2.output)\n                });\n              }\n            } else {\n              if (this.inputSize !== data[0].input[0].length) {\n                throw new Error('inputSize must match data input size');\n              }\n              if (this.outputSize !== data[0].output[0].length) {\n                throw new Error('outputSize must match data output size');\n              }\n              for (var _i11 = 0; _i11 < data.length; _i11++) {\n                var _datum3 = data[_i11];\n                result.push({\n                  input: (0, _cast.arraysToFloat32Arrays)(_datum3.input),\n                  output: (0, _cast.arraysToFloat32Arrays)(_datum3.output)\n                });\n              }\n            }\n            return result;\n          }\n        case 'array,datum,array,object,number':\n          {\n            if (!this.inputLookup) {\n              var _inputLookup = new _arrayLookupTable2.default(data, 'input');\n              this.inputLookup = _inputLookup.table;\n              this.inputLookupLength = _inputLookup.length;\n            }\n            if (!this.outputLookup) {\n              var _outputLookup = new _arrayLookupTable2.default(data, 'output');\n              this.outputLookup = _outputLookup.table;\n              this.outputLookupLength = _outputLookup.length;\n            }\n            for (var _i12 = 0; _i12 < data.length; _i12++) {\n              var _datum4 = data[_i12];\n              result.push({\n                input: (0, _cast.objectsToFloat32Arrays)(_datum4.input, this.inputLookup, this.inputLookupLength),\n                output: (0, _cast.objectsToFloat32Arrays)(_datum4.output, this.outputLookup, this.outputLookupLength)\n              });\n            }\n            return result;\n          }\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {\n     *  {\n     *    error: number,\n     *    misclasses: Array\n     *  }\n     * }\n     */\n\n  }, {\n    key: 'test',\n    value: function test(data) {\n      var formattedData = this.formatData(data);\n      // for classification problems\n      var misclasses = [];\n      // run each pattern through the trained network and collect\n      // error and misclassification statistics\n      var errorSum = 0;\n      var dataShape = _lookup2.default.dataShape(data).join(',');\n      switch (dataShape) {\n        case 'array,array,number':\n          {\n            if (this.inputSize === 1) {\n              for (var i = 0; i < formattedData.length; i++) {\n                var input = formattedData[i];\n                var output = this.run(input.splice(0, input.length - 1));\n                var target = input[input.length - 1][0];\n                var error = target - output;\n                var errorMSE = error * error;\n                errorSum += errorMSE;\n                var errorsAbs = Math.abs(errorMSE);\n                if (errorsAbs > this.trainOpts.errorThresh) {\n                  var misclass = data[i];\n                  Object.assign(misclass, {\n                    value: input,\n                    actual: output\n                  });\n                  misclasses.push(misclass);\n                }\n              }\n              break;\n            }\n            throw new Error('unknown data shape or configuration');\n          }\n        case 'array,array,array,number':\n          {\n            for (var _i13 = 0; _i13 < formattedData.length; _i13++) {\n              var _input = formattedData[_i13];\n              var _output = this.run(_input.splice(0, _input.length - 1));\n              var _target = _input[_input.length - 1];\n              var errors = 0;\n              var errorCount = 0;\n              for (var j = 0; j < _output.length; j++) {\n                errorCount++;\n                var _error = _target[j] - _output[j];\n                // mse\n                errors += _error * _error;\n              }\n              errorSum += errors / errorCount;\n              var _errorsAbs = Math.abs(errors);\n              if (_errorsAbs > this.trainOpts.errorThresh) {\n                var _misclass = data[_i13];\n                misclasses.push({\n                  value: _misclass,\n                  actual: _output\n                });\n              }\n            }\n            break;\n          }\n        case 'array,object,number':\n          {\n            for (var _i14 = 0; _i14 < formattedData.length; _i14++) {\n              var _input2 = formattedData[_i14];\n              var _output2 = this.run(_lookup2.default.toObjectPartial(this.outputLookup, _input2, 0, _input2.length - 1));\n              var _target2 = _input2[_input2.length - 1];\n              var _errors = 0;\n              var p = void 0;\n              for (p in _output2) {}\n              var _error2 = _target2[_i14] - _output2[p];\n              // mse\n              _errors += _error2 * _error2;\n              errorSum += _errors;\n              var _errorsAbs2 = Math.abs(_errors);\n              if (_errorsAbs2 > this.trainOpts.errorThresh) {\n                var _misclass2 = data[_i14];\n                misclasses.push({\n                  value: _misclass2,\n                  actual: _output2\n                });\n              }\n            }\n            break;\n          }\n        case 'array,array,object,number':\n          {\n            for (var _i15 = 0; _i15 < formattedData.length; _i15++) {\n              var _input3 = formattedData[_i15];\n              var _output3 = this.run(_input3.slice(0, _input3.length - 1));\n              var _target3 = data[_i15][_input3.length - 1];\n              var _errors2 = 0;\n              var _errorCount = 0;\n              for (var _p in _output3) {\n                var _error3 = _target3[_p] - _output3[_p];\n                // mse\n                _errors2 += _error3 * _error3;\n                _errorCount++;\n              }\n              errorSum += _errors2 / _errorCount;\n              var _errorsAbs3 = Math.abs(_errors2);\n              if (_errorsAbs3 > this.trainOpts.errorThresh) {\n                var _misclass3 = data[_i15];\n                misclasses.push({\n                  value: _misclass3,\n                  actual: _output3\n                });\n              }\n            }\n            break;\n          }\n        case 'array,datum,array,number':\n        case 'array,datum,object,number':\n          {\n            for (var _i16 = 0; _i16 < formattedData.length; _i16++) {\n              var datum = formattedData[_i16];\n              var _output4 = this.forecast(datum.input, datum.output.length);\n              var _errors3 = 0;\n              var _errorCount2 = 0;\n              for (var _j = 0; _j < _output4.length; _j++) {\n                var _error4 = datum.output[_j][0] - _output4[_j];\n                _errors3 += _error4 * _error4;\n                _errorCount2++;\n              }\n\n              errorSum += _errors3 / _errorCount2;\n              var _errorsAbs4 = Math.abs(_errors3);\n              if (_errorsAbs4 > this.trainOpts.errorThresh) {\n                var _misclass4 = data[_i16];\n                Object.assign(_misclass4, {\n                  actual: this.outputLookup ? _lookup2.default.toObject(this.outputLookup, _output4) : _output4\n                });\n                misclasses.push(_misclass4);\n              }\n            }\n            break;\n          }\n        case 'array,datum,array,array,number':\n          {\n            for (var _i17 = 0; _i17 < formattedData.length; _i17++) {\n              var _datum5 = formattedData[_i17];\n              var _output5 = this.forecast(_datum5.input, _datum5.output.length);\n              var _errors4 = 0;\n              for (var _j2 = 0; _j2 < _output5.length; _j2++) {\n                for (var k = 0; k < _output5[_j2].length; k++) {\n                  var _error5 = _datum5.output[_j2][k] - _output5[_j2][k];\n                  _errors4 += _error5 * _error5;\n                }\n              }\n\n              errorSum += _errors4;\n              var _errorsAbs5 = Math.abs(_errors4);\n              if (_errorsAbs5 > this.trainOpts.errorThresh) {\n                var _misclass5 = data[_i17];\n                misclasses.push({\n                  input: _misclass5.input,\n                  output: _misclass5.output,\n                  actual: _output5\n                });\n              }\n            }\n            break;\n          }\n        case 'array,datum,array,object,number':\n          {\n            for (var _i18 = 0; _i18 < formattedData.length; _i18++) {\n              var _datum6 = formattedData[_i18];\n              var _output6 = this.forecast(_datum6.input, _datum6.output.length);\n              var _errors5 = 0;\n              for (var _j3 = 0; _j3 < _output6.length; _j3++) {\n                for (var _p2 in _output6[_j3]) {\n                  var _error6 = data[_i18].output[_j3][_p2] - _output6[_j3][_p2];\n                  _errors5 += _error6 * _error6;\n                }\n              }\n\n              errorSum += _errors5;\n              var _errorsAbs6 = Math.abs(_errors5);\n              if (_errorsAbs6 > this.trainOpts.errorThresh) {\n                var _misclass6 = data[_i18];\n                misclasses.push({\n                  input: _misclass6.input,\n                  output: _misclass6.output,\n                  actual: _output6\n                });\n              }\n            }\n            break;\n          }\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n\n      return {\n        error: errorSum / formattedData.length,\n        misclasses: misclasses,\n        total: formattedData.length\n      };\n    }\n  }, {\n    key: 'addFormat',\n    value: function addFormat(value) {\n      var dataShape = _lookup2.default.dataShape(value).join(',');\n      switch (dataShape) {\n        case 'array,array,number':\n        case 'datum,array,array,number':\n        case 'array,number':\n        case 'datum,array,number':\n          return;\n        case 'datum,object,number':\n          {\n            this.inputLookup = _lookup2.default.addKeys(value.input, this.inputLookup);\n            if (this.inputLookup) {\n              this.inputLookupLength = Object.keys(this.inputLookup).length;\n            }\n            this.outputLookup = _lookup2.default.addKeys(value.output, this.outputLookup);\n            if (this.outputLookup) {\n              this.outputLookupLength = Object.keys(this.outputLookup).length;\n            }\n            break;\n          }\n        case 'object,number':\n          {\n            this.inputLookup = this.outputLookup = _lookup2.default.addKeys(value, this.inputLookup);\n            if (this.inputLookup) {\n              this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n            }\n            break;\n          }\n        case 'array,object,number':\n          {\n            for (var i = 0; i < value.length; i++) {\n              this.inputLookup = this.outputLookup = _lookup2.default.addKeys(value[i], this.inputLookup);\n              if (this.inputLookup) {\n                this.inputLookupLength = this.outputLookupLength = Object.keys(this.inputLookup).length;\n              }\n            }\n            break;\n          }\n        case 'datum,array,object,number':\n          {\n            for (var _i19 = 0; _i19 < value.input.length; _i19++) {\n              this.inputLookup = _lookup2.default.addKeys(value.input[_i19], this.inputLookup);\n              if (this.inputLookup) {\n                this.inputLookupLength = Object.keys(this.inputLookup).length;\n              }\n            }\n            for (var _i20 = 0; _i20 < value.output.length; _i20++) {\n              this.outputLookup = _lookup2.default.addKeys(value.output[_i20], this.outputLookup);\n              if (this.outputLookup) {\n                this.outputLookupLength = Object.keys(this.outputLookup).length;\n              }\n            }\n            break;\n          }\n\n        default:\n          throw new Error('unknown data shape or configuration');\n      }\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var defaults = this.constructor.defaults;\n      if (!this.model) {\n        this.initialize();\n      }\n      var model = this.model;\n      var options = {};\n      for (var p in defaults) {\n        if (defaults.hasOwnProperty(p)) {\n          options[p] = this[p];\n        }\n      }\n\n      return {\n        type: this.constructor.name,\n        options: options,\n        hiddenLayers: model.hiddenLayers.map(function (hiddenLayer) {\n          var layers = {};\n          for (var _p3 in hiddenLayer) {\n            layers[_p3] = hiddenLayer[_p3].toJSON();\n          }\n          return layers;\n        }),\n        outputConnector: this.model.outputConnector.toJSON(),\n        output: this.model.output.toJSON()\n      };\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var defaults = this.constructor.defaults;\n      var options = json.options;\n      this.model = null;\n      this.hiddenLayers = null;\n      var allMatrices = [];\n      var hiddenLayers = [];\n\n      // backward compatibility for hiddenSizes\n      (json.hiddenLayers || json.hiddenSizes).forEach(function (hiddenLayer) {\n        var layers = {};\n        for (var p in hiddenLayer) {\n          layers[p] = _matrix2.default.fromJSON(hiddenLayer[p]);\n          allMatrices.push(layers[p]);\n        }\n        hiddenLayers.push(layers);\n      });\n\n      var outputConnector = _matrix2.default.fromJSON(json.outputConnector);\n      allMatrices.push(outputConnector);\n      var output = _matrix2.default.fromJSON(json.output);\n      allMatrices.push(output);\n\n      Object.assign(this, defaults, options);\n\n      // backward compatibility\n      if (options.hiddenSizes) {\n        this.hiddenLayers = options.hiddenSizes;\n      }\n\n      this.model = {\n        hiddenLayers: hiddenLayers,\n        output: output,\n        allMatrices: allMatrices,\n        outputConnector: outputConnector,\n        equations: [],\n        equationConnections: []\n      };\n      this.initialLayerInputs = this.hiddenLayers.map(function (size) {\n        return new _matrix2.default(size, 1);\n      });\n      this.bindEquation();\n    }\n\n    /**\n     *\n     * @returns {Function}\n     */\n\n  }, {\n    key: 'toFunction',\n    value: function toFunction() {\n      var model = this.model;\n      var equations = this.model.equations;\n      var inputSize = this.inputSize;\n      var inputLookup = this.inputLookup;\n      var inputLookupLength = this.inputLookupLength;\n      var outputLookup = this.outputLookup;\n      var outputLookupLength = this.outputLookupLength;\n      var equation = equations[1];\n      var states = equation.states;\n      var jsonString = JSON.stringify(this.toJSON());\n\n      function matrixOrigin(m, stateIndex) {\n        for (var i = 0, max = states.length; i < max; i++) {\n          var state = states[i];\n\n          if (i === stateIndex) {\n            var j = previousConnectionIndex(m);\n            switch (m) {\n              case state.left:\n                if (j > -1) {\n                  return 'typeof prevStates[' + j + '] === \\'object\\' ? prevStates[' + j + '].product : new Matrix(' + m.rows + ', ' + m.columns + ')';\n                }\n              case state.right:\n                if (j > -1) {\n                  return 'typeof prevStates[' + j + '] === \\'object\\' ? prevStates[' + j + '].product : new Matrix(' + m.rows + ', ' + m.columns + ')';\n                }\n              case state.product:\n                return 'new Matrix(' + m.rows + ', ' + m.columns + ')';\n              default:\n                throw Error('unknown state');\n            }\n          }\n\n          if (m === state.product) return 'states[' + i + '].product';\n          if (m === state.right) return 'states[' + i + '].right';\n          if (m === state.left) return 'states[' + i + '].left';\n        }\n      }\n\n      function previousConnectionIndex(m) {\n        var connection = model.equationConnections[0];\n        var states = equations[0].states;\n        for (var i = 0, max = states.length; i < max; i++) {\n          if (states[i].product === m) {\n            return i;\n          }\n        }\n        return connection.indexOf(m);\n      }\n\n      function matrixToString(m, stateIndex) {\n        if (!m || !m.rows || !m.columns) return 'null';\n        if (m === model.outputConnector) return 'json.outputConnector';\n        if (m === model.output) return 'json.output';\n\n        for (var i = 0, max = model.hiddenLayers.length; i < max; i++) {\n          var hiddenLayer = model.hiddenLayers[i];\n          for (var p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            if (hiddenLayer[p] !== m) continue;\n            return 'json.hiddenLayers[' + i + '].' + p;\n          }\n        }\n\n        return matrixOrigin(m, stateIndex);\n      }\n\n      function formatInputData() {\n        if (!inputLookup) return '';\n        if (inputSize === 1) {\n          if (inputLookup === outputLookup) {\n            return 'function lookupInput(input) {\\n            var table = ' + JSON.stringify(inputLookup) + ';\\n            var result = [];\\n            for (var p in table) {\\n              if (!input.hasOwnProperty(p)) break;\\n              result.push(Float32Array.from([input[p]]));\\n            }\\n            return result;\\n          }';\n          }\n          return 'function lookupInput(input) {\\n          var table = ' + JSON.stringify(inputLookup) + ';\\n          var result = [];\\n          for (var p in table) {\\n            result.push(Float32Array.from([input[p]]));\\n          }\\n          return result;\\n        }';\n        }\n        return 'function lookupInput(rawInputs) {\\n        var table = ' + JSON.stringify(inputLookup) + ';\\n        var result = [];\\n        for (var i = 0; i < rawInputs.length; i++) {\\n          var rawInput = rawInputs[i];\\n          var input = new Float32Array(' + inputLookupLength + ');\\n          for (var p in table) {\\n            input[table[p]] = rawInput.hasOwnProperty(p) ? rawInput[p] : 0;\\n          }\\n          result.push(input);\\n        }\\n        return result;\\n      }';\n      }\n\n      function formatOutputData() {\n        if (!outputLookup) return '';\n        if (inputSize === 1) {\n          if (inputLookup === outputLookup) {\n            return 'function lookupOutputPartial(output, input) {\\n            var table = ' + JSON.stringify(outputLookup) + ';\\n            var offset = input.length;\\n            var result = {};\\n            var i = 0;\\n            for (var p in table) {\\n              if (i++ < offset) continue;\\n              result[p] = output[table[p] - offset][0];\\n            }\\n            return result;\\n          }';\n          }\n          return 'function lookupOutput(output) {\\n          var table = ' + JSON.stringify(outputLookup) + ';\\n          var result = {};\\n          for (var p in table) {\\n            result[p] = output[table[p]][0];\\n          }\\n          return result;\\n        }';\n        }\n        return 'function lookupOutput(output) {\\n        var table = ' + JSON.stringify(outputLookup) + ';\\n        var result = {};\\n        for (var p in table) {\\n          result[p] = output[table[p]];\\n        }\\n        return result;\\n      }';\n      }\n\n      function toInner(fnString) {\n        // crude, but should be sufficient for now\n        // function() { body }\n        fnString = fnString.toString().split('{');\n        fnString.shift();\n        // body }\n        fnString = fnString.join('{');\n        fnString = fnString.split('}');\n        fnString.pop();\n        // body\n\n        return fnString.join('}').split('\\n').join('\\n        ').replace('product.weights = _input.weights = _this.inputValue;', inputLookup && inputSize === 1 ? 'product.weights = _i < input.length ? input[_i]: prevStates[prevStates.length - 1].product.weights;' : inputSize === 1 ? 'product.weights = [input[_i]];' : 'product.weights = input[_i];').replace('product.deltas[i] = 0;', '').replace('product.deltas[column] = 0;', '').replace('left.deltas[leftIndex] = 0;', '').replace('right.deltas[rightIndex] = 0;', '').replace('product.deltas = left.deltas.slice(0);', '');\n      }\n\n      function fileName(fnName) {\n        return 'src/recurrent/matrix/' + fnName.replace(/[A-Z]/g, function (value) {\n          return '-' + value.toLowerCase();\n        }) + '.js';\n      }\n\n      var statesRaw = [];\n      var usedFunctionNames = {};\n      var innerFunctionsSwitch = [];\n      for (var i = 0, max = states.length; i < max; i++) {\n        var state = states[i];\n        statesRaw.push('states[' + i + '] = {\\n      name: \\'' + state.forwardFn.name + '\\',\\n      left: ' + matrixToString(state.left, i) + ',\\n      right: ' + matrixToString(state.right, i) + ',\\n      product: ' + matrixToString(state.product, i) + '\\n    }');\n\n        var fnName = state.forwardFn.name;\n        if (!usedFunctionNames[fnName]) {\n          usedFunctionNames[fnName] = true;\n          innerFunctionsSwitch.push('        case \\'' + fnName + '\\':' + (fnName !== 'forwardFn' ? ' //compiled from ' + fileName(fnName) : '') + '\\n          ' + toInner(state.forwardFn.toString()) + '\\n          break;');\n        }\n      }\n\n      var forceForecast = this.inputSize === 1 && this.outputLookup;\n      var src = '\\n  var input = ' + (this.inputLookup ? 'lookupInput(rawInput)' : 'rawInput') + ';\\n  var json = ' + jsonString + ';\\n  var output = [];\\n  var states = [];\\n  var prevStates;\\n  var state;\\n  var max = ' + (forceForecast ? inputLookup === outputLookup ? inputLookupLength : 'input.length + ' + (outputLookupLength - 1) : 'input.length') + ';\\n  for (var _i = 0; _i < max; _i++) {\\n    prevStates = states;\\n    states = [];\\n    ' + statesRaw.join(';\\n    ') + ';\\n    for (var stateIndex = 0, stateMax = ' + statesRaw.length + '; stateIndex < stateMax; stateIndex++) {\\n      state = states[stateIndex];\\n      var product = state.product;\\n      var left = state.left;\\n      var right = state.right;\\n      \\n      switch (state.name) {\\n' + innerFunctionsSwitch.join('\\n') + '\\n      }\\n    }\\n    ' + (inputSize === 1 && inputLookup ? 'if (_i >= input.length - 1) { output.push(state.product.weights); }' : 'output = state.product.weights;') + '\\n  }\\n  ' + (outputLookup ? outputLookup === inputLookup ? 'return lookupOutputPartial(output, input)' : 'return lookupOutput(output)' : inputSize === 1 ? 'return output[0]' : 'return output') + ';\\n  ' + formatInputData() + '\\n  ' + formatOutputData() + '\\n  \\n  function Matrix(rows, columns) {\\n    this.rows = rows;\\n    this.columns = columns;\\n    this.weights = zeros(rows * columns);\\n  }\\n  ' + _zeros2.default.toString() + '\\n  ' + _softmax2.default.toString().replace('_2.default', 'Matrix') + '\\n  ' + _random.randomF.toString() + '\\n  ' + _sampleI2.default.toString() + '\\n  ' + _maxI2.default.toString();\n      return new Function('rawInput', src);\n    }\n  }]);\n\n  return RNNTimeStep;\n}(_rnn2.default);\n\nexports.default = RNNTimeStep;\n\n\nRNNTimeStep.defaults = {\n  inputSize: 1,\n  hiddenLayers: [20],\n  outputSize: 1,\n  learningRate: _rnn2.default.defaults.learningRate,\n  decayRate: _rnn2.default.defaults.decayRate,\n  smoothEps: _rnn2.default.defaults.smoothEps,\n  regc: _rnn2.default.defaults.regc,\n  clipval: _rnn2.default.defaults.clipval\n};\n\nRNNTimeStep.trainDefaults = _rnn2.default.trainDefaults;\n//# sourceMappingURL=rnn-time-step.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _onesMatrix = require('./ones-matrix');\n\nvar _onesMatrix2 = _interopRequireDefault(_onesMatrix);\n\nvar _copy = require('./copy');\n\nvar _copy2 = _interopRequireDefault(_copy);\n\nvar _cloneNegative2 = require('./clone-negative');\n\nvar _cloneNegative3 = _interopRequireDefault(_cloneNegative2);\n\nvar _add2 = require('./add');\n\nvar _add3 = _interopRequireDefault(_add2);\n\nvar _addB = require('./add-b');\n\nvar _addB2 = _interopRequireDefault(_addB);\n\nvar _allOnes2 = require('./all-ones');\n\nvar _allOnes3 = _interopRequireDefault(_allOnes2);\n\nvar _multiply2 = require('./multiply');\n\nvar _multiply3 = _interopRequireDefault(_multiply2);\n\nvar _multiplyB = require('./multiply-b');\n\nvar _multiplyB2 = _interopRequireDefault(_multiplyB);\n\nvar _multiplyElement2 = require('./multiply-element');\n\nvar _multiplyElement3 = _interopRequireDefault(_multiplyElement2);\n\nvar _multiplyElementB = require('./multiply-element-b');\n\nvar _multiplyElementB2 = _interopRequireDefault(_multiplyElementB);\n\nvar _relu2 = require('./relu');\n\nvar _relu3 = _interopRequireDefault(_relu2);\n\nvar _reluB = require('./relu-b');\n\nvar _reluB2 = _interopRequireDefault(_reluB);\n\nvar _rowPluck = require('./row-pluck');\n\nvar _rowPluck2 = _interopRequireDefault(_rowPluck);\n\nvar _rowPluckB = require('./row-pluck-b');\n\nvar _rowPluckB2 = _interopRequireDefault(_rowPluckB);\n\nvar _sigmoid2 = require('./sigmoid');\n\nvar _sigmoid3 = _interopRequireDefault(_sigmoid2);\n\nvar _sigmoidB = require('./sigmoid-b');\n\nvar _sigmoidB2 = _interopRequireDefault(_sigmoidB);\n\nvar _tanh2 = require('./tanh');\n\nvar _tanh3 = _interopRequireDefault(_tanh2);\n\nvar _tanhB = require('./tanh-b');\n\nvar _tanhB2 = _interopRequireDefault(_tanhB);\n\nvar _softmax = require('./softmax');\n\nvar _softmax2 = _interopRequireDefault(_softmax);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Equation = function () {\n  function Equation() {\n    _classCallCheck(this, Equation);\n\n    this.inputRow = 0;\n    this.inputValue = null;\n    this.states = [];\n  }\n\n  /**\n   * connects two matrices together by add\n   * @param {Matrix} left\n   * @param {Matrix} right\n   * @returns {Matrix}\n   */\n\n\n  _createClass(Equation, [{\n    key: 'add',\n    value: function add(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      var product = new _2.default(left.rows, left.columns);\n      this.states.push({\n        left: left,\n        right: right,\n        product: product,\n        forwardFn: _add3.default,\n        backpropagationFn: _addB2.default\n      });\n      return product;\n    }\n\n    /**\n     *\n     * @param {Number} rows\n     * @param {Number} columns\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'allOnes',\n    value: function allOnes(rows, columns) {\n      var product = new _2.default(rows, columns);\n      this.states.push({\n        left: product,\n        product: product,\n        forwardFn: _allOnes3.default\n      });\n      return product;\n    }\n\n    /**\n     *\n     * @param {Matrix} m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'cloneNegative',\n    value: function cloneNegative(m) {\n      var product = new _2.default(m.rows, m.columns);\n      this.states.push({\n        left: m,\n        product: product,\n        forwardFn: _cloneNegative3.default\n      });\n      return product;\n    }\n\n    /**\n     * connects two matrices together by subtract\n     * @param {Matrix} left\n     * @param {Matrix} right\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'subtract',\n    value: function subtract(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      return this.add(this.add(this.allOnes(left.rows, left.columns), this.cloneNegative(left)), right);\n    }\n\n    /**\n     * connects two matrices together by multiply\n     * @param {Matrix} left\n     * @param {Matrix} right\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'multiply',\n    value: function multiply(left, right) {\n      if (left.columns !== right.rows) {\n        throw new Error('misaligned matrices');\n      }\n      var product = new _2.default(left.rows, right.columns);\n      this.states.push({\n        left: left,\n        right: right,\n        product: product,\n        forwardFn: _multiply3.default,\n        backpropagationFn: _multiplyB2.default\n      });\n      return product;\n    }\n\n    /**\n     * connects two matrices together by multiplyElement\n     * @param {Matrix} left\n     * @param {Matrix} right\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'multiplyElement',\n    value: function multiplyElement(left, right) {\n      if (left.weights.length !== right.weights.length) {\n        throw new Error('misaligned matrices');\n      }\n      var product = new _2.default(left.rows, left.columns);\n      this.states.push({\n        left: left,\n        right: right,\n        product: product,\n        forwardFn: _multiplyElement3.default,\n        backpropagationFn: _multiplyElementB2.default\n      });\n      return product;\n    }\n\n    /**\n     * connects a matrix to relu\n     * @param {Matrix} m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'relu',\n    value: function relu(m) {\n      var product = new _2.default(m.rows, m.columns);\n      this.states.push({\n        left: m,\n        product: product,\n        forwardFn: _relu3.default,\n        backpropagationFn: _reluB2.default\n      });\n      return product;\n    }\n\n    /**\n     * copy a matrix\n     * @param {Matrix} input\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'input',\n    value: function input(_input) {\n      var _this = this;\n\n      this.states.push({\n        product: _input,\n        forwardFn: function forwardFn(product) {\n          product.weights = _input.weights = _this.inputValue;\n        }\n      });\n      return _input;\n    }\n\n    /**\n     * connects a matrix via a row\n     * @param {Matrix} m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'inputMatrixToRow',\n    value: function inputMatrixToRow(m) {\n      var self = this;\n      var product = new _2.default(m.columns, 1);\n      this.states.push({\n        left: m,\n        get right() {\n          return self.inputRow;\n        },\n        product: product,\n        forwardFn: _rowPluck2.default,\n        backpropagationFn: _rowPluckB2.default\n      });\n      return product;\n    }\n\n    /**\n     * connects a matrix to sigmoid\n     * @param {Matrix} m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'sigmoid',\n    value: function sigmoid(m) {\n      var product = new _2.default(m.rows, m.columns);\n      this.states.push({\n        left: m,\n        product: product,\n        forwardFn: _sigmoid3.default,\n        backpropagationFn: _sigmoidB2.default\n      });\n      return product;\n    }\n\n    /**\n     * connects a matrix to tanh\n     * @param {Matrix} m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'tanh',\n    value: function tanh(m) {\n      var product = new _2.default(m.rows, m.columns);\n      this.states.push({\n        left: m,\n        product: product,\n        forwardFn: _tanh3.default,\n        backpropagationFn: _tanhB2.default\n      });\n      return product;\n    }\n\n    /**\n     *\n     * @param m\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'observe',\n    value: function observe(m) {\n      var iForward = 0;\n      var iBackpropagate = 0;\n      this.states.push({\n        forwardFn: function forwardFn() {\n          iForward++;\n        },\n        backpropagationFn: function backpropagationFn() {\n          iBackpropagate++;\n        }\n      });\n      return m;\n    }\n\n    /**\n     * @patam {Number} [rowIndex]\n     * @output {Matrix}\n     */\n\n  }, {\n    key: 'runIndex',\n    value: function runIndex() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.inputRow = rowIndex;\n      var state = void 0;\n      for (var i = 0, max = this.states.length; i < max; i++) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('forwardFn')) {\n          continue;\n        }\n        state.forwardFn(state.product, state.left, state.right);\n      }\n\n      return state.product;\n    }\n\n    /**\n     * @patam {Number} [rowIndex]\n     * @output {Matrix}\n     */\n\n  }, {\n    key: 'runInput',\n    value: function runInput(inputValue) {\n      this.inputValue = inputValue;\n      var state = void 0;\n      for (var i = 0, max = this.states.length; i < max; i++) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('forwardFn')) {\n          continue;\n        }\n        state.forwardFn(state.product, state.left, state.right);\n      }\n\n      return state.product;\n    }\n\n    /**\n     * @patam {Number} [rowIndex]\n     * @output {Matrix}\n     */\n\n  }, {\n    key: 'backpropagate',\n    value: function backpropagate() {\n      var i = this.states.length;\n      var state = void 0;\n      while (i-- > 0) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('backpropagationFn')) {\n          continue;\n        }\n        state.backpropagationFn(state.product, state.left, state.right);\n      }\n\n      return state.product;\n    }\n\n    /**\n     * @patam {Number} [rowIndex]\n     * @output {Matrix}\n     */\n\n  }, {\n    key: 'backpropagateIndex',\n    value: function backpropagateIndex() {\n      var rowIndex = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.inputRow = rowIndex;\n\n      var i = this.states.length;\n      var state = void 0;\n      while (i-- > 0) {\n        state = this.states[i];\n        if (!state.hasOwnProperty('backpropagationFn')) {\n          continue;\n        }\n        state.backpropagationFn(state.product, state.left, state.right);\n      }\n\n      return state.product;\n    }\n  }, {\n    key: 'predictTarget',\n    value: function predictTarget(input, target) {\n      var output = this.runInput(input);\n      var errorSum = 0;\n      for (var i = 0; i < output.weights.length; i++) {\n        var error = output.weights[i] - target[i];\n        // set gradients into log probabilities\n        errorSum += Math.abs(error);\n        // write gradients into log probabilities\n        output.deltas[i] = error;\n      }\n      return errorSum;\n    }\n  }, {\n    key: 'predictTargetIndex',\n    value: function predictTargetIndex(input, target) {\n      var output = this.runIndex(input);\n      // set gradients into log probabilities\n      var logProbabilities = output; // interpret output as log probabilities\n      var probabilities = (0, _softmax2.default)(output); // compute the softmax probabilities\n\n      // write gradients into log probabilities\n      logProbabilities.deltas = probabilities.weights.slice(0);\n      logProbabilities.deltas[target] -= 1;\n\n      // accumulate base 2 log prob and do smoothing\n      return -Math.log2(probabilities.weights[target]);\n    }\n  }]);\n\n  return Equation;\n}();\n\nexports.default = Equation;\n//# sourceMappingURL=equation.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a transform stream is a readable/writable stream where you do\n// something with the data.  Sometimes it's called a \"filter\",\n// but that's not a great name for it, since that implies a thing where\n// some bits pass through, and others are simply ignored.  (That would\n// be a valid example of a transform, of course.)\n//\n// While the output is causally related to the input, it's not a\n// necessarily symmetric or synchronous transformation.  For example,\n// a zlib stream might take multiple plain-text writes(), and then\n// emit a single compressed chunk some time in the future.\n//\n// Here's how this works:\n//\n// The Transform stream has all the aspects of the readable and writable\n// stream classes.  When you write(chunk), that calls _write(chunk,cb)\n// internally, and returns false if there's a lot of pending writes\n// buffered up.  When you call read(), that calls _read(n) until\n// there's enough pending readable data buffered up.\n//\n// In a transform stream, the written data is placed in a buffer.  When\n// _read(n) is called, it transforms the queued up data, calling the\n// buffered _write cb's as it consumes chunks.  If consuming a single\n// written chunk would result in multiple output chunks, then the first\n// outputted bit calls the readcb, and subsequent chunks just go into\n// the read buffer, and will cause it to emit 'readable' if necessary.\n//\n// This way, back-pressure is actually determined by the reading side,\n// since _read has to be called to start processing a new chunk.  However,\n// a pathological inflate type of transform can cause excessive buffering\n// here.  For example, imagine a stream where every byte of input is\n// interpreted as an integer from 0-255, and then results in that many\n// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in\n// 1kb of data being output.  In this case, you could write a very small\n// amount of input, and end up with a very large amount of output.  In\n// such a pathological inflating mechanism, there'd be no way to tell\n// the system to stop doing the transform.  A single 4MB write could\n// cause the system to run out of memory.\n//\n// However, even in such a pathological case, only a single written chunk\n// would be consumed, and then the rest would wait (un-transformed) until\n// the results of the previous transformed chunk were consumed.\n\n'use strict';\n\nmodule.exports = Transform;\n\nvar Duplex = require('./_stream_duplex');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(Transform, Duplex);\n\nfunction afterTransform(er, data) {\n  var ts = this._transformState;\n  ts.transforming = false;\n\n  var cb = ts.writecb;\n\n  if (!cb) {\n    return this.emit('error', new Error('write callback called multiple times'));\n  }\n\n  ts.writechunk = null;\n  ts.writecb = null;\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    this.push(data);\n\n  cb(er);\n\n  var rs = this._readableState;\n  rs.reading = false;\n  if (rs.needReadable || rs.length < rs.highWaterMark) {\n    this._read(rs.highWaterMark);\n  }\n}\n\nfunction Transform(options) {\n  if (!(this instanceof Transform)) return new Transform(options);\n\n  Duplex.call(this, options);\n\n  this._transformState = {\n    afterTransform: afterTransform.bind(this),\n    needTransform: false,\n    transforming: false,\n    writecb: null,\n    writechunk: null,\n    writeencoding: null\n  };\n\n  // start out asking for a readable event once data is transformed.\n  this._readableState.needReadable = true;\n\n  // we have implemented the _read method, and done the other things\n  // that Readable wants before the first _read call, so unset the\n  // sync guard flag.\n  this._readableState.sync = false;\n\n  if (options) {\n    if (typeof options.transform === 'function') this._transform = options.transform;\n\n    if (typeof options.flush === 'function') this._flush = options.flush;\n  }\n\n  // When the writable side finishes, then flush out anything remaining.\n  this.on('prefinish', prefinish);\n}\n\nfunction prefinish() {\n  var _this = this;\n\n  if (typeof this._flush === 'function') {\n    this._flush(function (er, data) {\n      done(_this, er, data);\n    });\n  } else {\n    done(this, null, null);\n  }\n}\n\nTransform.prototype.push = function (chunk, encoding) {\n  this._transformState.needTransform = false;\n  return Duplex.prototype.push.call(this, chunk, encoding);\n};\n\n// This is the part where you do stuff!\n// override this function in implementation classes.\n// 'chunk' is an input chunk.\n//\n// Call `push(newChunk)` to pass along transformed output\n// to the readable side.  You may call 'push' zero or more times.\n//\n// Call `cb(err)` when you are done with this chunk.  If you pass\n// an error, then that'll put the hurt on the whole operation.  If you\n// never call cb(), then you'll never get another chunk.\nTransform.prototype._transform = function (chunk, encoding, cb) {\n  throw new Error('_transform() is not implemented');\n};\n\nTransform.prototype._write = function (chunk, encoding, cb) {\n  var ts = this._transformState;\n  ts.writecb = cb;\n  ts.writechunk = chunk;\n  ts.writeencoding = encoding;\n  if (!ts.transforming) {\n    var rs = this._readableState;\n    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);\n  }\n};\n\n// Doesn't matter what the args are here.\n// _transform does all the work.\n// That we got here means that the readable side wants more data.\nTransform.prototype._read = function (n) {\n  var ts = this._transformState;\n\n  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {\n    ts.transforming = true;\n    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);\n  } else {\n    // mark that we need a transform, so that any data that comes in\n    // will get processed, now that we've asked for it.\n    ts.needTransform = true;\n  }\n};\n\nTransform.prototype._destroy = function (err, cb) {\n  var _this2 = this;\n\n  Duplex.prototype._destroy.call(this, err, function (err2) {\n    cb(err2);\n    _this2.emit('close');\n  });\n};\n\nfunction done(stream, er, data) {\n  if (er) return stream.emit('error', er);\n\n  if (data != null) // single equals check for both `null` and `undefined`\n    stream.push(data);\n\n  // if there's nothing in the write buffer, then that means\n  // that nothing more will ever be provided\n  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');\n\n  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');\n\n  return stream.push(null);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = maxI;\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nfunction maxI(m) {\n  // argmax of array w\n  var weights = m.weights;\n\n  var maxv = weights[0];\n  var maxix = 0;\n  for (var i = 1; i < weights.length; i++) {\n    var v = weights[i];\n    if (v < maxv) continue;\n\n    maxix = i;\n    maxv = v;\n  }\n  return maxix;\n};\n//# sourceMappingURL=max-i.js.map","module.exports = require('./lib/_stream_writable.js');\n","'use strict';\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar KernelBase = require('../kernel-base');\nvar utils = require('../../core/utils');\nvar Texture = require('../../core/texture');\nvar fragShaderString = require('./shader-frag');\nvar vertShaderString = require('./shader-vert');\nvar kernelString = require('./kernel-string');\nvar canvases = [];\nvar maxTexSizes = {};\n\nmodule.exports = function (_KernelBase) {\n\t_inherits(WebGLKernel, _KernelBase);\n\n\t_createClass(WebGLKernel, null, [{\n\t\tkey: 'fragShaderString',\n\t\tget: function get() {\n\t\t\treturn fragShaderString;\n\t\t}\n\t}, {\n\t\tkey: 'vertShaderString',\n\t\tget: function get() {\n\t\t\treturn vertShaderString;\n\t\t}\n\t\t/**\n   * @constructor WebGLKernel\n   *\n   * @desc Kernel Implementation for WebGL.\n   * <p>This builds the shaders and runs them on the GPU,\n   * the outputs the result back as float(enabled by default) and Texture.</p>\n   *\n   * @extends KernelBase\n   *\n   * @prop {Object} textureCache - webGl Texture cache\n   * @prop {Object} threadDim - The thread dimensions, x, y and z\n   * @prop {Object} programUniformLocationCache - Location of program variables in memory\n   * @prop {Object} framebuffer - Webgl frameBuffer\n   * @prop {Object} buffer - WebGL buffer\n   * @prop {Object} program - The webGl Program\n   * @prop {Object} functionBuilder - Function Builder instance bound to this Kernel\n   * @prop {Boolean} outputToTexture - Set output type to Texture, instead of float\n   * @prop {String} endianness - Endian information like Little-endian, Big-endian.\n   * @prop {Array} paramTypes - Types of parameters sent to the Kernel\n   * @prop {number} argumentsLength - Number of parameters sent to the Kernel\n   * @prop {String} compiledFragShaderString - Compiled fragment shader string\n   * @prop {String} compiledVertShaderString - Compiled Vertical shader string\n   */\n\n\t}]);\n\n\tfunction WebGLKernel(fnString, settings) {\n\t\t_classCallCheck(this, WebGLKernel);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLKernel.__proto__ || Object.getPrototypeOf(WebGLKernel)).call(this, fnString, settings));\n\n\t\t_this.textureCache = {};\n\t\t_this.threadDim = {};\n\t\t_this.programUniformLocationCache = {};\n\t\t_this.framebuffer = null;\n\n\t\t_this.buffer = null;\n\t\t_this.program = null;\n\t\t_this.outputToTexture = settings.outputToTexture;\n\t\t_this.endianness = utils.systemEndianness();\n\t\t_this.subKernelOutputTextures = null;\n\t\t_this.subKernelOutputVariableNames = null;\n\t\t_this.argumentsLength = 0;\n\t\t_this.constantsLength = 0;\n\t\t_this.compiledFragShaderString = null;\n\t\t_this.compiledVertShaderString = null;\n\t\t_this.fragShader = null;\n\t\t_this.vertShader = null;\n\t\t_this.drawBuffersMap = null;\n\t\t_this.outputTexture = null;\n\t\t_this.maxTexSize = null;\n\t\t_this.uniform1fCache = {};\n\t\t_this.uniform1iCache = {};\n\t\t_this.uniform2fCache = {};\n\t\t_this.uniform2fvCache = {};\n\t\t_this.uniform2ivCache = {};\n\t\t_this.uniform3fvCache = {};\n\t\t_this.uniform3ivCache = {};\n\t\tif (!_this._webGl) _this._webGl = _this.initWebGl();\n\t\treturn _this;\n\t}\n\n\t_createClass(WebGLKernel, [{\n\t\tkey: 'initWebGl',\n\t\tvalue: function initWebGl() {\n\t\t\treturn utils.initWebGl(this.getCanvas());\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name validateOptions\n   *\n   * @desc Validate options related to Kernel, such as\n   * floatOutputs and Textures, texSize, output,\n   * graphical output.\n   *\n   */\n\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tvar isFloatReadPixel = utils.isFloatReadPixelsSupported();\n\t\t\tif (this.floatTextures === true && !utils.OES_texture_float) {\n\t\t\t\tthrow new Error('Float textures are not supported on this browser');\n\t\t\t} else if (this.floatOutput === true && this.floatOutputForce !== true && !isFloatReadPixel) {\n\t\t\t\tthrow new Error('Float texture outputs are not supported on this browser');\n\t\t\t} else if (this.floatTextures === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatTextures = true;\n\t\t\t\tthis.floatOutput = isFloatReadPixel;\n\t\t\t}\n\n\t\t\tvar hasIntegerDivisionBug = utils.hasIntegerDivisionAccuracyBug();\n\t\t\tif (this.fixIntegerDivisionAccuracy === null) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = hasIntegerDivisionBug;\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && !hasIntegerDivisionBug) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = false;\n\t\t\t}\n\n\t\t\tutils.checkOutput(this.output);\n\n\t\t\tif (!this.output || this.output.length === 0) {\n\t\t\t\tif (arguments.length !== 1) {\n\t\t\t\t\tthrow new Error('Auto output only supported for kernels with only one input');\n\t\t\t\t}\n\n\t\t\t\tvar argType = utils.getArgumentType(arguments[0]);\n\t\t\t\tif (argType === 'Array') {\n\t\t\t\t\tthis.output = utils.getDimensions(argType);\n\t\t\t\t} else if (argType === 'NumberTexture' || argType === 'ArrayTexture(4)') {\n\t\t\t\t\tthis.output = arguments[0].output;\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('Auto output not supported for input type: ' + argType);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.output.length !== 2) {\n\t\t\t\t\tthrow new Error('Output must have 2 dimensions on graphical mode');\n\t\t\t\t}\n\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tthis.floatOutput = false;\n\t\t\t\t\tconsole.warn('Cannot use graphical mode and float output at the same time');\n\t\t\t\t}\n\n\t\t\t\tthis.texSize = utils.clone(this.output);\n\t\t\t} else if (this.floatOutput === undefined && utils.OES_texture_float) {\n\t\t\t\tthis.floatOutput = true;\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'updateMaxTexSize',\n\t\tvalue: function updateMaxTexSize() {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar canvas = this._canvas;\n\t\t\tif (this.maxTexSize === null) {\n\t\t\t\tvar canvasIndex = canvases.indexOf(canvas);\n\t\t\t\tif (canvasIndex === -1) {\n\t\t\t\t\tcanvasIndex = canvases.length;\n\t\t\t\t\tcanvases.push(canvas);\n\t\t\t\t\tmaxTexSizes[canvasIndex] = [texSize[0], texSize[1]];\n\t\t\t\t}\n\t\t\t\tthis.maxTexSize = maxTexSizes[canvasIndex];\n\t\t\t}\n\t\t\tif (this.maxTexSize[0] < texSize[0]) {\n\t\t\t\tthis.maxTexSize[0] = texSize[0];\n\t\t\t}\n\t\t\tif (this.maxTexSize[1] < texSize[1]) {\n\t\t\t\tthis.maxTexSize[1] = texSize[1];\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name build\n   *\n   * @desc Builds the Kernel, by compiling Fragment and Vertical Shaders,\n   * and instantiates the program.\n   *\n   */\n\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthis.validateOptions();\n\t\t\tthis.setupConstants();\n\t\t\tthis.setupParams(arguments);\n\t\t\tthis.updateMaxTexSize();\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar canvas = this._canvas;\n\t\t\tgl.enable(gl.SCISSOR_TEST);\n\t\t\tgl.viewport(0, 0, this.maxTexSize[0], this.maxTexSize[1]);\n\t\t\tcanvas.width = this.maxTexSize[0];\n\t\t\tcanvas.height = this.maxTexSize[1];\n\t\t\tvar threadDim = this.threadDim = utils.clone(this.output);\n\t\t\twhile (threadDim.length < 3) {\n\t\t\t\tthreadDim.push(1);\n\t\t\t}\n\n\t\t\tif (this.functionBuilder) this._addKernels();\n\n\t\t\tvar compiledVertShaderString = this._getVertShaderString(arguments);\n\t\t\tvar vertShader = gl.createShader(gl.VERTEX_SHADER);\n\t\t\tgl.shaderSource(vertShader, compiledVertShaderString);\n\t\t\tgl.compileShader(vertShader);\n\t\t\tthis.vertShader = vertShader;\n\n\t\t\tvar compiledFragShaderString = this._getFragShaderString(arguments);\n\t\t\tvar fragShader = gl.createShader(gl.FRAGMENT_SHADER);\n\t\t\tgl.shaderSource(fragShader, compiledFragShaderString);\n\t\t\tgl.compileShader(fragShader);\n\t\t\tthis.fragShader = fragShader;\n\n\t\t\tif (!gl.getShaderParameter(vertShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledVertShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(vertShader));\n\t\t\t\tthrow new Error('Error compiling vertex shader');\n\t\t\t}\n\t\t\tif (!gl.getShaderParameter(fragShader, gl.COMPILE_STATUS)) {\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t\tconsole.error('An error occurred compiling the shaders: ' + gl.getShaderInfoLog(fragShader));\n\t\t\t\tthrow new Error('Error compiling fragment shader');\n\t\t\t}\n\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log('Options:');\n\t\t\t\tconsole.dir(this);\n\t\t\t\tconsole.log('GLSL Shader Output:');\n\t\t\t\tconsole.log(compiledFragShaderString);\n\t\t\t}\n\n\t\t\tvar program = this.program = gl.createProgram();\n\t\t\tgl.attachShader(program, vertShader);\n\t\t\tgl.attachShader(program, fragShader);\n\t\t\tgl.linkProgram(program);\n\t\t\tthis.framebuffer = gl.createFramebuffer();\n\t\t\tthis.framebuffer.width = texSize[0];\n\t\t\tthis.framebuffer.height = texSize[1];\n\n\t\t\tvar vertices = new Float32Array([-1, -1, 1, -1, -1, 1, 1, 1]);\n\t\t\tvar texCoords = new Float32Array([0, 0, 1, 0, 0, 1, 1, 1]);\n\n\t\t\tvar texCoordOffset = vertices.byteLength;\n\n\t\t\tvar buffer = this.buffer;\n\t\t\tif (!buffer) {\n\t\t\t\tbuffer = this.buffer = gl.createBuffer();\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\tgl.bufferData(gl.ARRAY_BUFFER, vertices.byteLength + texCoords.byteLength, gl.STATIC_DRAW);\n\t\t\t} else {\n\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t}\n\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, 0, vertices);\n\t\t\tgl.bufferSubData(gl.ARRAY_BUFFER, texCoordOffset, texCoords);\n\n\t\t\tvar aPosLoc = gl.getAttribLocation(this.program, 'aPos');\n\t\t\tgl.enableVertexAttribArray(aPosLoc);\n\t\t\tgl.vertexAttribPointer(aPosLoc, 2, gl.FLOAT, gl.FALSE, 0, 0);\n\t\t\tvar aTexCoordLoc = gl.getAttribLocation(this.program, 'aTexCoord');\n\t\t\tgl.enableVertexAttribArray(aTexCoordLoc);\n\t\t\tgl.vertexAttribPointer(aTexCoordLoc, 2, gl.FLOAT, gl.FALSE, 0, texCoordOffset);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\n\t\t\tfor (var p in this.constants) {\n\t\t\t\tvar value = this.constants[p];\n\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\tif (type === 'Float' || type === 'Integer') {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tgl.useProgram(this.program);\n\t\t\t\tthis._addConstant(this.constants[p], type, p);\n\t\t\t\tthis.constantsLength++;\n\t\t\t}\n\n\t\t\tif (!this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t\tif (this.subKernelOutputVariableNames !== null && this.subKernelOutputVariableNames.length > 0) {\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name run\n   *\n   * @desc Run the kernel program, and send the output to renderOutput\n   *\n   * <p> This method calls a helper method *renderOutput* to return the result. </p>\n   *\n   * @returns {Object|Undefined} Result The final output of the program, as float, and as Textures for reuse.\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'run',\n\t\tvalue: function run() {\n\t\t\tif (this.program === null) {\n\t\t\t\tthis.build.apply(this, arguments);\n\t\t\t}\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tgl.useProgram(this.program);\n\t\t\tgl.scissor(0, 0, texSize[0], texSize[1]);\n\n\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\tthis.setUniform3iv('uOutputDim', this.threadDim);\n\t\t\t\tthis.setUniform2iv('uTexSize', texSize);\n\t\t\t}\n\n\t\t\tthis.setUniform2f('ratio', texSize[0] / this.maxTexSize[0], texSize[1] / this.maxTexSize[1]);\n\n\t\t\tthis.argumentsLength = 0;\n\t\t\tfor (var texIndex = 0; texIndex < paramNames.length; texIndex++) {\n\t\t\t\tthis._addArgument(arguments[texIndex], paramTypes[texIndex], paramNames[texIndex]);\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tif (this.outputToTexture) {\n\t\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\t\t\tif (!this.outputTexture || this.outputImmutable) {\n\t\t\t\t\t\tthis._setupOutputTexture();\n\t\t\t\t\t}\n\t\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\t\treturn new Texture(this.outputTexture, texSize, this.threadDim, this.output, this._webGl, 'ArrayTexture(4)');\n\t\t\t\t}\n\t\t\t\tgl.bindRenderbuffer(gl.RENDERBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\t\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n\t\t\tif (this.outputImmutable) {\n\t\t\t\tthis._setupOutputTexture();\n\t\t\t}\n\t\t\tvar outputTexture = this.outputTexture;\n\n\t\t\tif (this.subKernelOutputVariableNames !== null) {\n\t\t\t\tif (this.outputImmutable) {\n\t\t\t\t\tthis.subKernelOutputTextures = [];\n\t\t\t\t\tthis._setupSubOutputTextures(this.subKernelOutputVariableNames.length);\n\t\t\t\t}\n\t\t\t\tthis.drawBuffers.drawBuffersWEBGL(this.drawBuffersMap);\n\t\t\t}\n\n\t\t\tgl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n\n\t\t\tif (this.subKernelOutputTextures !== null) {\n\t\t\t\tif (this.subKernels !== null) {\n\t\t\t\t\tvar output = [];\n\t\t\t\t\toutput.result = this.renderOutput(outputTexture);\n\t\t\t\t\tfor (var i = 0; i < this.subKernels.length; i++) {\n\t\t\t\t\t\toutput.push(new Texture(this.subKernelOutputTextures[i], texSize, this.threadDim, this.output, this._webGl));\n\t\t\t\t\t}\n\t\t\t\t\treturn output;\n\t\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\t\tvar _output = {\n\t\t\t\t\t\tresult: this.renderOutput(outputTexture)\n\t\t\t\t\t};\n\t\t\t\t\tvar _i = 0;\n\t\t\t\t\tfor (var p in this.subKernelProperties) {\n\t\t\t\t\t\tif (!this.subKernelProperties.hasOwnProperty(p)) continue;\n\t\t\t\t\t\t_output[p] = new Texture(this.subKernelOutputTextures[_i], texSize, this.threadDim, this.output, this._webGl);\n\t\t\t\t\t\t_i++;\n\t\t\t\t\t}\n\t\t\t\t\treturn _output;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this.renderOutput(outputTexture);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name renderOutput\n   *\n   *\n   * @desc Helper function to return webGl function's output.\n   * Since the program runs on GPU, we need to get the\n   * output of the program back to CPU and then return them.\n   *\n   * *Note*: This should not be called directly.\n   *\n   * @param {Object} outputTexture - Output Texture returned by webGl program\n   *\n   * @returns {Object|Array} result\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'renderOutput',\n\t\tvalue: function renderOutput(outputTexture) {\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar gl = this._webGl;\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar output = this.output;\n\t\t\tif (this.outputToTexture) {\n\t\t\t\treturn new Texture(outputTexture, texSize, this.threadDim, output, this._webGl);\n\t\t\t} else {\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, output[0]);\n\t\t\t\t} else if (output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, output[0] * output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getOutputTexture\n   *\n   * @desc This return defined outputTexture, which is setup in .build(), or if immutable, is defined in .run()\n   *\n   * @returns {Object} Output Texture Cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getOutputTexture',\n\t\tvalue: function getOutputTexture() {\n\t\t\treturn this.outputTexture;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _setupOutputTexture\n   * @private\n   *\n   * @desc Setup and replace output texture\n   */\n\n\t}, {\n\t\tkey: '_setupOutputTexture',\n\t\tvalue: function _setupOutputTexture() {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar texture = this.outputTexture = this._webGl.createTexture();\n\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length);\n\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\tif (this.floatOutput) {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t} else {\n\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t}\n\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @param length\n   * @private\n   *\n   * @desc Setup and replace sub-output textures\n   */\n\n\t}, {\n\t\tkey: '_setupSubOutputTextures',\n\t\tvalue: function _setupSubOutputTextures(length) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar texSize = this.texSize;\n\t\t\tvar drawBuffersMap = this.drawBuffersMap = [gl.COLOR_ATTACHMENT0];\n\t\t\tvar textures = this.subKernelOutputTextures = [];\n\t\t\tfor (var i = 0; i < length; i++) {\n\t\t\t\tvar texture = this._webGl.createTexture();\n\t\t\t\ttextures.push(texture);\n\t\t\t\tdrawBuffersMap.push(gl.COLOR_ATTACHMENT0 + i + 1);\n\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.paramNames.length + i);\n\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, texture);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\tif (this.floatOutput) {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.FLOAT, null);\n\t\t\t\t} else {\n\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, texSize[0], texSize[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n\t\t\t\t}\n\t\t\t\tgl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0 + i + 1, gl.TEXTURE_2D, texture, 0);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getArgumentTexture\n   *\n   * @desc This uses *getTextureCache** to get the Texture Cache of the argument supplied\n   *\n   * @param {String} name - Name of the argument\n   *\n   * \tTexture cache for the supplied argument\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentTexture',\n\t\tvalue: function getArgumentTexture(name) {\n\t\t\treturn this.getTextureCache('ARGUMENT_' + name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name getTextureCache\n   * @function\n   *\n   * @desc Returns the Texture Cache of the supplied parameter (can be kernel, sub-kernel or argument)\n   *\n   * @param {String} name - Name of the subkernel, argument, or kernel.\n   *\n   * @returns {Object} Texture cache\n   *\n   */\n\n\t}, {\n\t\tkey: 'getTextureCache',\n\t\tvalue: function getTextureCache(name) {\n\t\t\tif (this.textureCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.textureCache[name];\n\t\t\t}\n\t\t\treturn this.textureCache[name] = this._webGl.createTexture();\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @name detachTextureCache\n   * @function\n   * @desc removes a texture from the kernel's cache\n   * @param {String} name - Name of texture\n   */\n\n\t}, {\n\t\tkey: 'detachTextureCache',\n\t\tvalue: function detachTextureCache(name) {\n\t\t\tdelete this.textureCache[name];\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1f',\n\t\tvalue: function setUniform1f(name, value) {\n\t\t\tif (this.uniform1fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1fCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1fCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1f(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform1i',\n\t\tvalue: function setUniform1i(name, value) {\n\t\t\tif (this.uniform1iCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform1iCache[name];\n\t\t\t\tif (value === cache) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform1iCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform1i(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2f',\n\t\tvalue: function setUniform2f(name, value1, value2) {\n\t\t\tif (this.uniform2fCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fCache[name];\n\t\t\t\tif (value1 === cache[0] && value2 === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fCache[name] = [value1, value2];\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2f(loc, value1, value2);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2fv',\n\t\tvalue: function setUniform2fv(name, value) {\n\t\t\tif (this.uniform2fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform2iv',\n\t\tvalue: function setUniform2iv(name, value) {\n\t\t\tif (this.uniform2ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform2ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform2ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform2iv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3fv',\n\t\tvalue: function setUniform3fv(name, value) {\n\t\t\tif (this.uniform3fvCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3fvCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3fvCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3fv(loc, value);\n\t\t}\n\t}, {\n\t\tkey: 'setUniform3iv',\n\t\tvalue: function setUniform3iv(name, value) {\n\t\t\tif (this.uniform3ivCache.hasOwnProperty(name)) {\n\t\t\t\tvar cache = this.uniform3ivCache[name];\n\t\t\t\tif (value[0] === cache[0] && value[1] === cache[1] && value[2] === cache[2]) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tthis.uniform3ivCache[name] = value;\n\t\t\tvar loc = this.getUniformLocation(name);\n\t\t\tthis._webGl.uniform3iv(loc, value);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name getUniformLocation\n   *\n   * @desc Return WebGlUniformLocation for various variables\n   * related to webGl program, such as user-defiend variables,\n   * as well as, dimension sizes, etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUniformLocation',\n\t\tvalue: function getUniformLocation(name) {\n\t\t\tif (this.programUniformLocationCache.hasOwnProperty(name)) {\n\t\t\t\treturn this.programUniformLocationCache[name];\n\t\t\t}\n\t\t\treturn this.programUniformLocationCache[name] = this._webGl.getUniformLocation(this.program, name);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderArtifactMap\n   *\n   * @desc Generate Shader artifacts for the kernel program.\n   * The final object contains HEADER, KERNEL, MAIN_RESULT, and others.\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {Object} An object containing the Shader Artifacts(CONSTANTS, HEADER, KERNEL, etc.)\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderArtifactMap',\n\t\tvalue: function _getFragShaderArtifactMap(args) {\n\t\t\treturn {\n\t\t\t\tHEADER: this._getHeaderString(),\n\t\t\t\tLOOP_MAX: this._getLoopMaxString(),\n\t\t\t\tCONSTANTS: this._getConstantsString(),\n\t\t\t\tDECODE32_ENDIANNESS: this._getDecode32EndiannessString(),\n\t\t\t\tENCODE32_ENDIANNESS: this._getEncode32EndiannessString(),\n\t\t\t\tDIVIDE_WITH_INTEGER_CHECK: this._getDivideWithIntegerCheckString(),\n\t\t\t\tGET_WRAPAROUND: this._getGetWraparoundString(),\n\t\t\t\tGET_TEXTURE_CHANNEL: this._getGetTextureChannelString(),\n\t\t\t\tGET_TEXTURE_INDEX: this._getGetTextureIndexString(),\n\t\t\t\tGET_RESULT: this._getGetResultString(),\n\t\t\t\tMAIN_PARAMS: this._getMainParamsString(args),\n\t\t\t\tMAIN_CONSTANTS: this._getMainConstantsString(),\n\t\t\t\tKERNEL: this._getKernelString(),\n\t\t\t\tMAIN_RESULT: this._getMainResultString()\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addArgument\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addArgument',\n\t\tvalue: function _addArgument(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\tcase 'Array(2)':\n\t\t\t\tcase 'Array(3)':\n\t\t\t\tcase 'Array(4)':\n\t\t\t\tcase 'Array2D':\n\t\t\t\tcase 'Array3D':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer2 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer2.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer2.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tcase 'Number':\n\t\t\t\t\t{\n\t\t\t\t\t\tthis.setUniform1f('user_' + name, value);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim = input.size;\n\t\t\t\t\t\tvar _size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length = _size[0] * _size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer3 = this._formatArrayTransfer(value.value, _length),\n\t\t\t\t\t\t    _valuesFlat = _formatArrayTransfer3.valuesFlat,\n\t\t\t\t\t\t    _bitRatio = _formatArrayTransfer3.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0], _size[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer = new Uint8Array(_valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size[0] / _bitRatio, _size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', _bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim2 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size2 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim2);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size2);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim3 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size3 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength + this.argumentsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('user_' + name + 'Dim', _dim3);\n\t\t\t\t\t\tthis.setUniform2iv('user_' + name + 'Size', _size3);\n\t\t\t\t\t\tthis.setUniform1i('user_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('user_' + name, this.argumentsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t\tthis.argumentsLength++;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addConstant\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array|Texture|Number} value - The actual argument supplied to the kernel\n   * @param {String} type - Type of the argument\n   * @param {String} name - Name of the argument\n   *\n   */\n\n\t}, {\n\t\tkey: '_addConstant',\n\t\tvalue: function _addConstant(value, type, name) {\n\t\t\tvar gl = this._webGl;\n\t\t\tvar argumentTexture = this.getArgumentTexture(name);\n\t\t\tif (value instanceof Texture) {\n\t\t\t\ttype = value.type;\n\t\t\t}\n\t\t\tswitch (type) {\n\t\t\t\tcase 'Array':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar dim = utils.getDimensions(value, true);\n\t\t\t\t\t\tvar size = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, dim);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar length = size[0] * size[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer4 = this._formatArrayTransfer(value, length),\n\t\t\t\t\t\t    valuesFlat = _formatArrayTransfer4.valuesFlat,\n\t\t\t\t\t\t    bitRatio = _formatArrayTransfer4.bitRatio;\n\n\t\t\t\t\t\tvar buffer = void 0;\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0], size[1], 0, gl.RGBA, gl.FLOAT, valuesFlat);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbuffer = new Uint8Array(valuesFlat.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, size[0] / bitRatio, size[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, buffer);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', dim);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', size);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', bitRatio);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Input':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar input = value;\n\t\t\t\t\t\tvar _dim4 = input.size;\n\t\t\t\t\t\tvar _size4 = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, _dim4);\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\t\t\t\tvar _length2 = _size4[0] * _size4[1];\n\n\t\t\t\t\t\tvar _formatArrayTransfer5 = this._formatArrayTransfer(value.value, _length2),\n\t\t\t\t\t\t    _valuesFlat2 = _formatArrayTransfer5.valuesFlat,\n\t\t\t\t\t\t    _bitRatio2 = _formatArrayTransfer5.bitRatio;\n\n\t\t\t\t\t\tif (this.floatTextures) {\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0], _size4[1], 0, gl.RGBA, gl.FLOAT, inputArray);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tvar _buffer2 = new Uint8Array(_valuesFlat2.buffer);\n\t\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, _size4[0] / _bitRatio2, _size4[1], 0, gl.RGBA, gl.UNSIGNED_BYTE, _buffer2);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!this.hardcodeConstants) {\n\t\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim4);\n\t\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size4);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', _bitRatio2);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputImage = value;\n\t\t\t\t\t\tvar _dim5 = [inputImage.width, inputImage.height, 1];\n\t\t\t\t\t\tvar _size5 = [inputImage.width, inputImage.height];\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, argumentTexture);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\t\t\t\t\t\tgl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, true);\n\t\t\t\t\t\t// Upload the image into the texture.\n\t\t\t\t\t\tvar mipLevel = 0; // the largest mip\n\t\t\t\t\t\tvar internalFormat = gl.RGBA; // format we want in the texture\n\t\t\t\t\t\tvar srcFormat = gl.RGBA; // format of data we are supplying\n\t\t\t\t\t\tvar srcType = gl.UNSIGNED_BYTE; // type of data we are supplying\n\t\t\t\t\t\tgl.texImage2D(gl.TEXTURE_2D, mipLevel, internalFormat, srcFormat, srcType, inputImage);\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim5);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size5);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar inputTexture = value;\n\t\t\t\t\t\tvar _dim6 = inputTexture.dimensions;\n\t\t\t\t\t\tvar _size6 = inputTexture.size;\n\n\t\t\t\t\t\tgl.activeTexture(gl.TEXTURE0 + this.constantsLength);\n\t\t\t\t\t\tgl.bindTexture(gl.TEXTURE_2D, inputTexture.texture);\n\n\t\t\t\t\t\tthis.setUniform3iv('constants_' + name + 'Dim', _dim6);\n\t\t\t\t\t\tthis.setUniform2iv('constants_' + name + 'Size', _size6);\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name + 'BitRatio', 1); // aways float32\n\t\t\t\t\t\tthis.setUniform1i('constants_' + name, this.constantsLength);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'Integer':\n\t\t\t\tcase 'Float':\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Input type not supported (WebGL): ' + value);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _formatArrayTransfer\n   *\n   * @desc Adds kernel parameters to the Argument Texture,\n   * binding it to the webGl instance, etc.\n   *\n   * @param {Array} value - The actual argument supplied to the kernel\n   * @param {String} length - the expected total length of the output array\n   *\n   * @returns {Object} bitRatio - bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n   * \t\t\t\t     valuesFlat - flattened array to transfer\n   */\n\n\t}, {\n\t\tkey: '_formatArrayTransfer',\n\t\tvalue: function _formatArrayTransfer(value, length) {\n\t\t\tvar bitRatio = 1; // bit storage ratio of source to target 'buffer', i.e. if 8bit array -> 32bit tex = 4\n\t\t\tvar valuesFlat = value;\n\t\t\tif (utils.isArray(value[0]) || this.floatTextures) {\n\t\t\t\t// not already flat\n\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t} else {\n\n\t\t\t\tswitch (value.constructor) {\n\t\t\t\t\tcase Uint8Array:\n\t\t\t\t\tcase Int8Array:\n\t\t\t\t\t\tbitRatio = 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase Uint16Array:\n\t\t\t\t\tcase Int16Array:\n\t\t\t\t\t\tbitRatio = 2;\n\t\t\t\t\tcase Float32Array:\n\t\t\t\t\tcase Int32Array:\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tvaluesFlat = new Float32Array(length);\n\t\t\t\t\t\tutils.flattenTo(value, valuesFlat);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn {\n\t\t\t\tbitRatio: bitRatio,\n\t\t\t\tvaluesFlat: valuesFlat\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getHeaderString\n   *\n   * @desc Get the header string for the program.\n   * This returns an empty string if no sub-kernels are defined.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getHeaderString',\n\t\tvalue: function _getHeaderString() {\n\t\t\treturn this.subKernels !== null || this.subKernelProperties !== null ?\n\t\t\t//webgl2 '#version 300 es\\n' :\n\t\t\t'#extension GL_EXT_draw_buffers : require\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getLoopMaxString\n   *\n   * @desc Get the maximum loop size String.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getLoopMaxString',\n\t\tvalue: function _getLoopMaxString() {\n\t\t\treturn this.loopMaxIterations ? ' ' + parseInt(this.loopMaxIterations) + '.0;\\n' : ' 1000.0;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getConstantsString\n   *\n   * @desc Generate transpiled glsl Strings for constant parameters sent to a kernel\n   *\n   * They can be defined by *hardcodeConstants*\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getConstantsString',\n\t\tvalue: function _getConstantsString() {\n\t\t\tvar result = [];\n\t\t\tvar threadDim = this.threadDim;\n\t\t\tvar texSize = this.texSize;\n\t\t\tif (this.hardcodeConstants) {\n\t\t\t\tresult.push('ivec3 uOutputDim = ivec3(' + threadDim[0] + ',' + threadDim[1] + ', ' + threadDim[2] + ')', 'ivec2 uTexSize = ivec2(' + texSize[0] + ', ' + texSize[1] + ')');\n\t\t\t} else {\n\t\t\t\tresult.push('uniform ivec3 uOutputDim', 'uniform ivec2 uTexSize');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getTextureCoordinate\n   *\n   * @desc Get texture coordinate string for the program\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getTextureCoordinate',\n\t\tvalue: function _getTextureCoordinate() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names === null || names.length < 1) {\n\t\t\t\treturn 'varying vec2 vTexCoord;\\n';\n\t\t\t} else {\n\t\t\t\treturn 'out vec2 vTexCoord;\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDecode32EndiannessString\n   *\n   * @desc Get Decode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDecode32EndiannessString',\n\t\tvalue: function _getDecode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getEncode32EndiannessString\n   *\n   * @desc Get Encode32 endianness string for little-endian and big-endian\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getEncode32EndiannessString',\n\t\tvalue: function _getEncode32EndiannessString() {\n\t\t\treturn this.endianness === 'LE' ? '' : '  rgba.rgba = rgba.abgr;\\n';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getDivideWithIntegerCheckString\n   *\n   * @desc if fixIntegerDivisionAccuracy provide method to replace /\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getDivideWithIntegerCheckString',\n\t\tvalue: function _getDivideWithIntegerCheckString() {\n\t\t\treturn this.fixIntegerDivisionAccuracy ? '\\n\\t\\t\\t  float div_with_int_check(float x, float y) {\\n\\t\\t\\t  if (floor(x) == x && floor(y) == y && integerMod(x, y) == 0.0) {\\n\\t\\t\\t    return float(int(x)/int(y));\\n\\t\\t\\t  }\\n\\t\\t\\t  return x / y;\\n\\t\\t\\t}\\n\\t\\t\\t' : '';\n\t\t}\n\n\t\t/**\n   * @function\n   * @memberOf WebGLKernel#\n   * @name _getGetWraparoundString\n   *\n   * @returns {String} wraparound string\n   */\n\n\t}, {\n\t\tkey: '_getGetWraparoundString',\n\t\tvalue: function _getGetWraparoundString() {\n\t\t\treturn this.wraparound ? '  xyz = mod(xyz, texDim);\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureChannelString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureChannelString',\n\t\tvalue: function _getGetTextureChannelString() {\n\t\t\tif (!this.floatTextures) return '';\n\n\t\t\treturn this._linesToString(['  int channel = integerMod(index, 4)', '  index = index / 4']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetTextureIndexString\n   *\n   * @desc Get generic texture index string, if floatTextures flag is true.\n   *\n   * @example\n   * '  index = float(int(index)/4);\\n'\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetTextureIndexString',\n\t\tvalue: function _getGetTextureIndexString() {\n\t\t\treturn this.floatTextures ? '  index = index / 4;\\n' : '';\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getGetResultString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getGetResultString',\n\t\tvalue: function _getGetResultString() {\n\t\t\tif (!this.floatTextures) {\n\t\t\t\treturn '  return decode(texel, x, bitRatio);';\n\t\t\t}\n\t\t\treturn this._linesToString(['  if (channel == 0) return texel.r', '  if (channel == 1) return texel.g', '  if (channel == 2) return texel.b', '  if (channel == 3) return texel.a']);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainParamsString\n   *\n   * @desc Generate transpiled glsl Strings for user-defined parameters sent to a kernel\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainParamsString',\n\t\tvalue: function _getMainParamsString(args) {\n\t\t\tvar result = [];\n\t\t\tvar paramTypes = this.paramTypes;\n\t\t\tvar paramNames = this.paramNames;\n\t\t\tfor (var i = 0; i < paramNames.length; i++) {\n\t\t\t\tvar param = args[i];\n\t\t\t\tvar paramName = paramNames[i];\n\t\t\t\tvar paramType = paramTypes[i];\n\t\t\t\tif (this.hardcodeConstants) {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)') {\n\t\t\t\t\t\tvar paramDim = utils.getDimensions(param, true);\n\t\t\t\t\t\tvar paramSize = utils.dimToTexSize({\n\t\t\t\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t\t\t\t}, paramDim);\n\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'ivec2 user_' + paramName + 'Size = ivec2(' + paramSize[0] + ', ' + paramSize[1] + ')', 'ivec3 user_' + paramName + 'Dim = ivec3(' + paramDim[0] + ', ' + paramDim[1] + ', ' + paramDim[2] + ')', 'uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t} else if (paramType === 'Integer') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param + '.0');\n\t\t\t\t\t} else if (paramType === 'Float') {\n\t\t\t\t\t\tresult.push('float user_' + paramName + ' = ' + param);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (paramType === 'Array' || paramType === 'NumberTexture' || paramType === 'ArrayTexture(4)' || paramType === 'Input' || paramType === 'HTMLImage') {\n\t\t\t\t\t\tresult.push('uniform sampler2D user_' + paramName, 'uniform ivec2 user_' + paramName + 'Size', 'uniform ivec3 user_' + paramName + 'Dim');\n\t\t\t\t\t\tif (paramType !== 'HTMLImage') {\n\t\t\t\t\t\t\tresult.push('uniform int user_' + paramName + 'BitRatio');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (paramType === 'Integer' || paramType === 'Float') {\n\t\t\t\t\t\tresult.push('uniform float user_' + paramName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Param type ' + paramType + ' not supported in WebGL, only WebGL2');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainConstantsString\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainConstantsString',\n\t\tvalue: function _getMainConstantsString() {\n\t\t\tvar result = [];\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var name in this.constants) {\n\t\t\t\t\tif (!this.constants.hasOwnProperty(name)) continue;\n\t\t\t\t\tvar value = this.constants[name];\n\t\t\t\t\tvar type = utils.getArgumentType(value);\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase 'Integer':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseInt(value) + '.0');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Float':\n\t\t\t\t\t\t\tresult.push('const float constants_' + name + ' = ' + parseFloat(value));\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tcase 'Array':\n\t\t\t\t\t\tcase 'Input':\n\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\tcase 'NumberTexture':\n\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\t\tresult.push('uniform sampler2D constants_' + name, 'uniform ivec2 constants_' + name + 'Size', 'uniform ivec3 constants_' + name + 'Dim', 'uniform int constants_' + name + 'BitRatio');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tthrow new Error('Unsupported constant ' + name + ' type ' + type);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getKernelString\n   *\n   * @desc Get Kernel program string (in *glsl*) for a kernel.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getKernelString',\n\t\tvalue: function _getKernelString() {\n\t\t\tvar result = [];\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tif (names !== null) {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t\tfor (var i = 0; i < names.length; i++) {\n\t\t\t\t\tresult.push('float ' + names[i] + ' = 0.0');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('float kernelResult = 0.0');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result) + this.functionBuilder.getPrototypeString('kernel');\n\t\t}\n\n\t\t/**\n   *\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getMainResultString\n   *\n   * @desc Get main result string with checks for floatOutput, graphical, subKernelsOutputs, etc.\n   *\n   * @returns {String} result\n   *\n   */\n\n\t}, {\n\t\tkey: '_getMainResultString',\n\t\tvalue: function _getMainResultString() {\n\t\t\tvar names = this.subKernelOutputVariableNames;\n\t\t\tvar result = [];\n\n\t\t\tif (this.floatOutput) {\n\t\t\t\tresult.push('  index *= 4');\n\t\t\t}\n\n\t\t\tif (this.graphical) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = actualColor');\n\t\t\t} else if (this.floatOutput) {\n\t\t\t\tvar channels = ['r', 'g', 'b', 'a'];\n\n\t\t\t\tfor (var i = 0; i < channels.length; ++i) {\n\t\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\t\tresult.push('  kernel()');\n\n\t\t\t\t\tif (names) {\n\t\t\t\t\t\tresult.push('  gl_FragData[0].' + channels[i] + ' = kernelResult');\n\n\t\t\t\t\t\tfor (var j = 0; j < names.length; ++j) {\n\t\t\t\t\t\t\tresult.push('  gl_FragData[' + (j + 1) + '].' + channels[i] + ' = ' + names[j]);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.push('  gl_FragColor.' + channels[i] + ' = kernelResult');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (i < channels.length - 1) {\n\t\t\t\t\t\tresult.push('  index += 1');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (names !== null) {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)');\n\t\t\t\tresult.push('  kernel()');\n\t\t\t\tresult.push('  gl_FragData[0] = encode32(kernelResult)');\n\t\t\t\tfor (var _i2 = 0; _i2 < names.length; _i2++) {\n\t\t\t\t\tresult.push('  gl_FragData[' + (_i2 + 1) + '] = encode32(' + names[_i2] + ')');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tresult.push('  threadId = indexTo3D(index, uOutputDim)', '  kernel()', '  gl_FragColor = encode32(kernelResult)');\n\t\t\t}\n\n\t\t\treturn this._linesToString(result);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _linesToString\n   *\n   * @param {Array} lines - An Array of strings\n   *\n   * @returns {String} Single combined String, seperated by *\\n*\n   *\n   */\n\n\t}, {\n\t\tkey: '_linesToString',\n\t\tvalue: function _linesToString(lines) {\n\t\t\tif (lines.length > 0) {\n\t\t\t\treturn lines.join(';\\n') + ';\\n';\n\t\t\t} else {\n\t\t\t\treturn '\\n';\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _replaceArtifacts\n   *\n   * @param {String} src - Shader string\n   * @param {Array} map - Variables/Constants associated with shader\n   *\n   */\n\n\t}, {\n\t\tkey: '_replaceArtifacts',\n\t\tvalue: function _replaceArtifacts(src, map) {\n\t\t\treturn src.replace(/[ ]*__([A-Z]+[0-9]*([_]?[A-Z])*)__;\\n/g, function (match, artifact) {\n\t\t\t\tif (map.hasOwnProperty(artifact)) {\n\t\t\t\t\treturn map[artifact];\n\t\t\t\t}\n\t\t\t\tthrow 'unhandled artifact ' + artifact;\n\t\t\t});\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _addKernels\n   *\n   * @desc Adds all the sub-kernels supplied with this Kernel instance.\n   *\n   */\n\n\t}, {\n\t\tkey: '_addKernels',\n\t\tvalue: function _addKernels() {\n\t\t\tvar _this2 = this;\n\n\t\t\tvar builder = this.functionBuilder;\n\t\t\tvar gl = this._webGl;\n\n\t\t\tbuilder.addFunctions(this.functions, {\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output\n\t\t\t});\n\t\t\tbuilder.addNativeFunctions(this.nativeFunctions);\n\n\t\t\tbuilder.addKernel(this.fnString, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tparamNames: this.paramNames,\n\t\t\t\tparamTypes: this.paramTypes,\n\t\t\t\tconstantTypes: this.constantTypes,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\n\t\t\tif (this.subKernels !== null) {\n\t\t\t\tvar drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tthis.subKernels.forEach(function (subKernel) {\n\t\t\t\t\treturn _this2._addSubKernel(subKernel);\n\t\t\t\t});\n\t\t\t} else if (this.subKernelProperties !== null) {\n\t\t\t\tvar _drawBuffers = this.drawBuffers = gl.getExtension('WEBGL_draw_buffers');\n\t\t\t\tif (!_drawBuffers) throw new Error('could not instantiate draw buffers extension');\n\t\t\t\tthis.subKernelOutputVariableNames = [];\n\t\t\t\tObject.keys(this.subKernelProperties).forEach(function (property) {\n\t\t\t\t\treturn _this2._addSubKernel(_this2.subKernelProperties[property]);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: '_addSubKernel',\n\t\tvalue: function _addSubKernel(subKernel) {\n\t\t\tthis.functionBuilder.addSubKernel(subKernel, {\n\t\t\t\tprototypeOnly: false,\n\t\t\t\tconstants: this.constants,\n\t\t\t\toutput: this.output,\n\t\t\t\tdebug: this.debug,\n\t\t\t\tloopMaxIterations: this.loopMaxIterations,\n\t\t\t\tfixIntegerDivisionAccuracy: this.fixIntegerDivisionAccuracy\n\t\t\t});\n\t\t\tthis.subKernelOutputVariableNames.push(subKernel.name + 'Result');\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getFragShaderString\n   *\n   * @desc Get the fragment shader String.\n   * If the String hasn't been compiled yet,\n   * then this method compiles it as well\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Fragment Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getFragShaderString',\n\t\tvalue: function _getFragShaderString(args) {\n\t\t\tif (this.compiledFragShaderString !== null) {\n\t\t\t\treturn this.compiledFragShaderString;\n\t\t\t}\n\t\t\treturn this.compiledFragShaderString = this._replaceArtifacts(this.constructor.fragShaderString, this._getFragShaderArtifactMap(args));\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name _getVertShaderString\n   *\n   * @desc Get the vertical shader String\n   *\n   * @param {Array} args - The actual parameters sent to the Kernel\n   *\n   * @returns {string} Vertical Shader string\n   *\n   */\n\n\t}, {\n\t\tkey: '_getVertShaderString',\n\t\tvalue: function _getVertShaderString(args) {\n\t\t\tif (this.compiledVertShaderString !== null) {\n\t\t\t\treturn this.compiledVertShaderString;\n\t\t\t}\n\t\t\treturn this.compiledVertShaderString = this.constructor.vertShaderString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLKernel#\n   * @function\n   * @name toString\n   *\n   * @desc Returns the *pre-compiled* Kernel as a JS Object String, that can be reused.\n   *\n   */\n\n\t}, {\n\t\tkey: 'toString',\n\t\tvalue: function toString() {\n\t\t\treturn kernelString(this);\n\t\t}\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn) {\n\t\t\tthis.functionBuilder.addFunction(null, fn);\n\t\t}\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy(removeCanvasReferences) {\n\t\t\t_get(WebGLKernel.prototype.__proto__ || Object.getPrototypeOf(WebGLKernel.prototype), 'destroy', this).call(this);\n\t\t\tif (this.outputTexture) {\n\t\t\t\tthis._webGl.deleteTexture(this.outputTexture);\n\t\t\t}\n\t\t\tif (this.buffer) {\n\t\t\t\tthis._webGl.deleteBuffer(this.buffer);\n\t\t\t}\n\t\t\tif (this.framebuffer) {\n\t\t\t\tthis._webGl.deleteFramebuffer(this.framebuffer);\n\t\t\t}\n\n\t\t\tif (this.vertShader) {\n\t\t\t\tthis._webGl.deleteShader(this.vertShader);\n\t\t\t}\n\n\t\t\tif (this.fragShader) {\n\t\t\t\tthis._webGl.deleteShader(this.fragShader);\n\t\t\t}\n\n\t\t\tif (this.program) {\n\t\t\t\tthis._webGl.deleteProgram(this.program);\n\t\t\t}\n\n\t\t\tvar keys = Object.keys(this.textureCache);\n\n\t\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\t\tvar name = keys[i];\n\t\t\t\tthis._webGl.deleteTexture(this.textureCache[name]);\n\t\t\t}\n\n\t\t\tif (this.subKernelOutputTextures) {\n\t\t\t\tfor (var _i3 = 0; _i3 < this.subKernelOutputTextures.length; _i3++) {\n\t\t\t\t\tthis._webGl.deleteTexture(this.subKernelOutputTextures[_i3]);\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (removeCanvasReferences) {\n\t\t\t\tvar idx = canvases.indexOf(this._canvas);\n\t\t\t\tif (idx >= 0) {\n\t\t\t\t\tcanvases[idx] = null;\n\t\t\t\t\tmaxTexSizes[idx] = null;\n\t\t\t\t}\n\t\t\t}\n\t\t\tdelete this._webGl;\n\t\t}\n\t}]);\n\n\treturn WebGLKernel;\n}(KernelBase);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _neuralNetwork = require('./neural-network');\n\nvar _neuralNetwork2 = _interopRequireDefault(_neuralNetwork);\n\nvar _lookup = require('./lookup');\n\nvar _lookup2 = _interopRequireDefault(_lookup);\n\nvar _gpu = require('gpu.js');\n\nvar _gpu2 = _interopRequireDefault(_gpu);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param {object} options\n * @constructor\n */\nvar NeuralNetworkGPU = function (_NeuralNetwork) {\n  _inherits(NeuralNetworkGPU, _NeuralNetwork);\n\n  function NeuralNetworkGPU() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, NeuralNetworkGPU);\n\n    var _this = _possibleConstructorReturn(this, (NeuralNetworkGPU.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU)).call(this, options));\n\n    _this.forwardPropagate = [];\n    _this.backwardPropagate = [];\n    _this.changesPropagate = [];\n    _this.biasesPropagate = [];\n    _this.biasCopies = [];\n    _this.copyBias = [];\n    _this.changesCopies = [];\n    _this.copyChanges = [];\n    _this.weightsCopies = [];\n    _this.copyWeights = [];\n    _this.errorCheckInterval = 100;\n    _this.gpu = new _gpu2.default({ mode: options.mode });\n    return _this;\n  }\n\n  /**\n   *\n   */\n\n\n  _createClass(NeuralNetworkGPU, [{\n    key: 'initialize',\n    value: function initialize() {\n      _get(NeuralNetworkGPU.prototype.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU.prototype), 'initialize', this).call(this);\n      this.buildRunInput();\n      this.buildCalculateDeltas();\n      this.buildGetChanges();\n      this.buildChangeBiases();\n      this.buildGetMSE();\n    }\n  }, {\n    key: 'setActivation',\n    value: function setActivation() {}\n\n    /**\n     *\n     * @param value\n     * @param logErrorRate\n     */\n\n  }, {\n    key: 'trainPattern',\n    value: function trainPattern(value, logErrorRate) {\n      // forward propagate\n      this.runInput(value.input);\n\n      // back propagate\n      this.calculateDeltas(value.output);\n      this.adjustWeights();\n\n      if (logErrorRate) {\n        return this.getMSE(this.errors[this.outputLayer])[0];\n      } else {\n        return null;\n      }\n    }\n  }, {\n    key: 'adjustWeights',\n    value: function adjustWeights() {\n      this.getChanges();\n      this.changeBiases();\n    }\n  }, {\n    key: 'buildRunInput',\n    value: function buildRunInput() {\n      var weightedSum = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          weightedSum = weightedSumSigmoid;\n          break;\n        case 'relu':\n          weightedSum = weightedSumRelu;\n          break;\n        case 'leaky-relu':\n          weightedSum = weightedSumLeakyRelu;\n          break;\n        case 'tanh':\n          weightedSum = weightedSumTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.forwardPropagate[layer] = this.gpu.createKernel(weightedSum, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.sizes[layer - 1]\n          }\n        });\n      }\n\n      this.texturizeInputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [this.sizes[1]],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'runInput',\n    value: function runInput(input) {\n      var output = void 0;\n      this.outputs[0] = input;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.outputs[layer] = this.forwardPropagate[layer](this.weights[layer], this.biases[layer], input);\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: 'buildCalculateDeltas',\n    value: function buildCalculateDeltas() {\n      var calcDeltas = null;\n\n      switch (this.activation) {\n        case 'sigmoid':\n          calcDeltas = calcDeltasSigmoid;\n          break;\n        case 'relu':\n          calcDeltas = calcDeltasRelu;\n          break;\n        case 'leaky-relu':\n          calcDeltas = calcDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          calcDeltas = calcDeltasTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation);\n      }\n\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        if (layer === this.outputLayer) {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcErrorOutput', calcErrorOutput),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (outputs, targets) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcErrorOutput(output, targets), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true\n          });\n        } else {\n          this.backwardPropagate[layer] = this.gpu.createKernelMap({\n            error: _gpu2.default.alias('calcError', calcError),\n            deltas: _gpu2.default.alias('calcDeltas', calcDeltas)\n          }, function (nextWeights, outputs, nextDeltas) {\n            var output = outputs[this.thread.x];\n            return calcDeltas(calcError(nextWeights, nextDeltas), output);\n          }, {\n            output: [this.sizes[layer]],\n            outputToTexture: true,\n            hardcodeConstants: true,\n            constants: {\n              size: this.deltas[layer + 1].length\n            }\n          });\n        }\n      }\n    }\n  }, {\n    key: 'calculateDeltas',\n    value: function calculateDeltas(target) {\n      for (var layer = this.outputLayer; layer > 0; layer--) {\n        var output = void 0;\n\n        if (layer === this.outputLayer) {\n          output = this.backwardPropagate[layer](this.outputs[layer], target);\n        } else {\n          output = this.backwardPropagate[layer](this.weights[layer + 1], this.outputs[layer], this.deltas[layer + 1]);\n        }\n\n        this.deltas[layer] = output.deltas;\n        this.errors[layer] = output.error;\n      }\n    }\n  }, {\n    key: 'buildGetChanges',\n    value: function buildGetChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.changesPropagate[layer] = this.gpu.createKernelMap({\n          weights: _gpu2.default.alias('addWeights', addWeights),\n          changes: _gpu2.default.alias('calcChanges', calcChanges)\n        }, function (previousOutputs, deltas, weights, changes) {\n          var change = calcChanges(changes, deltas, previousOutputs);\n\n          return addWeights(change, weights);\n        }, {\n          output: [this.sizes[layer - 1], this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            size: this.outputs[layer - 1].length,\n            learningRate: this.trainOpts.learningRate,\n            momentum: this.trainOpts.momentum\n          }\n        });\n\n        this.copyChanges[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n\n        this.copyWeights[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.y][this.thread.x];\n        }, {\n          output: this.changesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'getChanges',\n    value: function getChanges() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        var output = this.changesPropagate[layer](this.outputs[layer - 1], this.deltas[layer], this.weightsCopies[layer] || this.weights[layer], this.changesCopies[layer] || this.changes[layer]);\n        this.changes[layer] = output.changes;\n        this.weights[layer] = output.weights;\n\n        this.changesCopies[layer] = this.copyChanges[layer](output.changes);\n        this.weightsCopies[layer] = this.copyWeights[layer](output.weights);\n      }\n    }\n  }, {\n    key: 'buildChangeBiases',\n    value: function buildChangeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biasesPropagate[layer] = this.gpu.createKernel(addBiases, {\n          output: [this.sizes[layer]],\n          outputToTexture: true,\n          hardcodeConstants: true,\n          constants: {\n            learningRate: this.trainOpts.learningRate\n          }\n        });\n        this.copyBias[layer] = this.gpu.createKernel(function (value) {\n          return value[this.thread.x];\n        }, {\n          output: this.biasesPropagate[layer].output,\n          outputToTexture: true,\n          hardCodeConstants: true\n        });\n      }\n    }\n  }, {\n    key: 'changeBiases',\n    value: function changeBiases() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        this.biases[layer] = this.biasesPropagate[layer](this.biasCopies[layer] || this.biases[layer], this.deltas[layer]);\n        this.biasCopies[layer] = this.copyBias[layer](this.biases[layer]);\n      }\n    }\n  }, {\n    key: 'buildGetMSE',\n    value: function buildGetMSE() {\n      this.getMSE = this.gpu.createKernel(mse, {\n        output: [1],\n        hardcodeConstants: true,\n        constants: {\n          size: this.sizes[this.outputLayer]\n        }\n      });\n    }\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: 'run',\n    value: function run(input) {\n      if (!this.isRunnable) return null;\n      if (this.inputLookup) {\n        input = _lookup2.default.toArray(this.inputLookup, input, this.inputLookupLength);\n      }\n      var inputTexture = this.texturizeInputData(input);\n      var outputTextures = this.runInput(inputTexture);\n      var output = void 0;\n      if (outputTextures.toArray) {\n        output = outputTextures.toArray(this.gpu);\n      } else {\n        output = outputTextures;\n      }\n\n      if (this.outputLookup) {\n        output = _lookup2.default.toObject(this.outputLookup, output);\n      }\n      return output;\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @protected\n     * @return { data, status, endTime }\n     */\n\n  }, {\n    key: 'prepTraining',\n    value: function prepTraining(data, options) {\n      var _this2 = this;\n\n      this.updateTrainingOptions(options);\n      data = this.formatData(data);\n      var endTime = Date.now() + this.trainOpts.timeout;\n\n      var status = {\n        error: 1,\n        iterations: 0\n      };\n\n      this.verifyIsInitialized(data);\n\n      var texturizeOutputData = this.gpu.createKernel(function (value) {\n        return value[this.thread.x];\n      }, {\n        output: [data[0].output.length],\n        outputToTexture: true,\n        hardcodeConstants: true,\n        outputImmutable: true\n      });\n\n      return {\n        data: data.map(function (set) {\n          return {\n            input: _this2.texturizeInputData(set.input),\n            output: texturizeOutputData(set.output)\n          };\n        }),\n        status: status,\n        endTime: endTime\n      };\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var _this3 = this;\n\n      if (!this.weights[1].toArray) {\n        // in fallback mode\n        return _get(NeuralNetworkGPU.prototype.__proto__ || Object.getPrototypeOf(NeuralNetworkGPU.prototype), 'toJSON', this).call(this);\n      }\n\n      // in GPU mode\n      var weights = [];\n      var biases = [];\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        weights[layer] = Array.from(this.weights[layer].toArray(this.gpu));\n        biases[layer] = Array.from(this.biases[layer].toArray(this.gpu));\n      }\n\n      // pseudo lo-fi decorator\n      return _neuralNetwork2.default.prototype.toJSON.call({\n        inputLookup: this.inputLookup,\n        outputLookup: this.outputLookup,\n        outputLayer: this.outputLayer,\n        sizes: this.sizes,\n        getTrainOptsJSON: function getTrainOptsJSON() {\n          return _this3.getTrainOptsJSON();\n        },\n        weights: weights,\n        biases: biases\n      });\n    }\n  }]);\n\n  return NeuralNetworkGPU;\n}(_neuralNetwork2.default);\n\nexports.default = NeuralNetworkGPU;\n\n\nfunction weightedSumSigmoid(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //sigmoid\n  return 1 / (1 + Math.exp(-sum));\n}\n\nfunction weightedSumRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //relu\n  return sum < 0 ? 0 : sum;\n}\n\nfunction weightedSumLeakyRelu(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //leaky relu\n  return sum < 0 ? 0 : 0.01 * sum;\n}\n\nfunction weightedSumTanh(weights, biases, inputs) {\n  var sum = biases[this.thread.x];\n  for (var k = 0; k < this.constants.size; k++) {\n    sum += weights[this.thread.x][k] * inputs[k];\n  }\n  //tanh\n  return Math.tanh(sum);\n}\n\nfunction calcErrorOutput(output, targets) {\n  return targets[this.thread.x] - output;\n}\n\nfunction calcDeltasSigmoid(error, output) {\n  //sigmoid derivative\n  return error * output * (1 - output);\n}\n\nfunction calcDeltasRelu(error, output) {\n  //relu derivative\n  return output > 0 ? error : 0;\n}\n\nfunction calcDeltasLeakyRelu(error, output) {\n  //leaky relu derivative\n  return output > 0 ? error : 0.01 * error;\n}\n\nfunction calcDeltasTanh(error, output) {\n  //tanh derivative\n  return (1 - output * output) * error;\n}\n\nfunction calcError(nextWeights, nextDeltas) {\n  var error = 0;\n  for (var k = 0; k < this.constants.size; k++) {\n    error += nextDeltas[k] * nextWeights[k][this.thread.x];\n  }\n  return error;\n}\n\nfunction calcChanges(previousChanges, deltas, previousOutputs) {\n  return this.constants.learningRate * deltas[this.thread.y] * previousOutputs[this.thread.x] + this.constants.momentum * previousChanges[this.thread.y][this.thread.x];\n}\n\nfunction addWeights(change, weights) {\n  return change + weights[this.thread.y][this.thread.x];\n}\n\nfunction addBiases(biases, deltas) {\n  return biases[this.thread.x] + deltas[this.thread.x] * this.constants.learningRate;\n}\n\n// mean squared error, reimplemented for GPU\nfunction mse(errors) {\n  var sum = 0;\n  for (var i = 0; i < this.constants.size; i++) {\n    sum += Math.pow(errors[i], 2);\n  }\n  return sum / this.constants.size;\n}\n//# sourceMappingURL=neural-network-gpu.js.map","\"use strict\";\n\nmodule.exports = \"__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nvarying vec2 vTexCoord;\\n\\nvec4 round(vec4 x) {\\n  return floor(x + 0.5);\\n}\\n\\nfloat round(float x) {\\n  return floor(x + 0.5);\\n}\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x / y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    if (channel == 0) return rgba.r * 255.0;\\n    if (channel == 1) return rgba.g * 255.0;\\n    if (channel == 2) return rgba.b * 255.0;\\n    if (channel == 3) return rgba.a * 255.0;\\n  }\\n  else {\\n    if (channel == 0) return rgba.r * 255.0 + rgba.g * 65280.0;\\n    if (channel == 1) return rgba.b * 255.0 + rgba.a * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture2D(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture2D(tex, st / vec2(texSize));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, int(0), int(0), x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, int(0), int(0), x);\\n}\\n\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\nvoid color(sampler2D image) {\\n  actualColor = texture2D(image, vTexCoord);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","import {NeuralNetwork} from 'brain.js';\n\naddEventListener('install', () => {\n    console.log('sw');\n})","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = randos;\n\nvar _randomWeight = require('./random-weight');\n\nvar _randomWeight2 = _interopRequireDefault(_randomWeight);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction randos(size) {\n  var array = new Float32Array(size);\n  for (var i = 0; i < size; i++) {\n    array[i] = (0, _randomWeight2.default)();\n  }\n  return array;\n}\n//# sourceMappingURL=randos.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sigmoid;\n/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction sigmoid(product, left) {\n  // sigmoid nonlinearity\n  for (var i = 0; i < left.weights.length; i++) {\n    product.weights[i] = 1 / (1 + Math.exp(-left.weights[i]));\n    product.deltas[i] = 0;\n  }\n}\n\nfunction sig(x) {\n  // helper function for computing sigmoid\n  return 1 / (1 + Math.exp(-x));\n}\n//# sourceMappingURL=sigmoid.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = copy;\n/*\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction copy(product, left) {\n  product.rows = parseInt(left.rows);\n  product.columns = parseInt(left.columns);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n}\n//# sourceMappingURL=copy.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\nfunction isArray(arg) {\n  if (Array.isArray) {\n    return Array.isArray(arg);\n  }\n  return objectToString(arg) === '[object Array]';\n}\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return objectToString(re) === '[object RegExp]';\n}\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return objectToString(d) === '[object Date]';\n}\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return (objectToString(e) === '[object Error]' || e instanceof Error);\n}\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null ||\n         typeof arg === 'boolean' ||\n         typeof arg === 'number' ||\n         typeof arg === 'string' ||\n         typeof arg === 'symbol' ||  // ES6 symbol\n         typeof arg === 'undefined';\n}\nexports.isPrimitive = isPrimitive;\n\nexports.isBuffer = Buffer.isBuffer;\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = range;\n/**\n *\n * @param start\n * @param end\n * @returns {Array}\n */\nfunction range(start, end) {\n  var result = [];\n  for (; start < end; start++) {\n    result.push(start);\n  }\n  return result;\n}\n//# sourceMappingURL=range.js.map","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor\n    var TempCtor = function () {}\n    TempCtor.prototype = superCtor.prototype\n    ctor.prototype = new TempCtor()\n    ctor.prototype.constructor = ctor\n  }\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGLFunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n\t_inherits(WebGLFunctionBuilder, _FunctionBuilderBase);\n\n\tfunction WebGLFunctionBuilder() {\n\t\t_classCallCheck(this, WebGLFunctionBuilder);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLFunctionBuilder.__proto__ || Object.getPrototypeOf(WebGLFunctionBuilder)).call(this));\n\n\t\t_this.Node = WebGLFunctionNode;\n\t\treturn _this;\n\t}\n\n\t//---------------------------------------------------------\n\t//\n\t//  Polyfill stuff\n\t//\n\t//---------------------------------------------------------\n\n\t// Round function used in polyfill\n\n\n\t_createClass(WebGLFunctionBuilder, [{\n\t\tkey: 'polyfillStandardFunctions',\n\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name polyfillStandardFunctions\n   *\n   * @desc Polyfill in the missing Math functions (round)\n   *\n   */\n\t\tvalue: function polyfillStandardFunctions() {\n\t\t\tthis.addFunction('round', _round);\n\t\t}\n\t}], [{\n\t\tkey: 'round',\n\t\tvalue: function round(a) {\n\t\t\treturn _round(a);\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionBuilder;\n}(FunctionBuilderBase);\n\nfunction _round(a) {\n\treturn Math.floor(a + 0.5);\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = tanh;\n/**\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction tanh(product, left) {\n  // tanh nonlinearity\n  for (var i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.tanh(left.weights[i]);\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=tanh.js.map","module.exports = require('events').EventEmitter;\n","'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n// undocumented cb() API, needed for core, not for public API\nfunction destroy(err, cb) {\n  var _this = this;\n\n  var readableDestroyed = this._readableState && this._readableState.destroyed;\n  var writableDestroyed = this._writableState && this._writableState.destroyed;\n\n  if (readableDestroyed || writableDestroyed) {\n    if (cb) {\n      cb(err);\n    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {\n      pna.nextTick(emitErrorNT, this, err);\n    }\n    return this;\n  }\n\n  // we set destroyed to true before firing error callbacks in order\n  // to make it re-entrance safe in case destroy() is called within callbacks\n\n  if (this._readableState) {\n    this._readableState.destroyed = true;\n  }\n\n  // if this is a duplex stream mark the writable part as destroyed as well\n  if (this._writableState) {\n    this._writableState.destroyed = true;\n  }\n\n  this._destroy(err || null, function (err) {\n    if (!cb && err) {\n      pna.nextTick(emitErrorNT, _this, err);\n      if (_this._writableState) {\n        _this._writableState.errorEmitted = true;\n      }\n    } else if (cb) {\n      cb(err);\n    }\n  });\n\n  return this;\n}\n\nfunction undestroy() {\n  if (this._readableState) {\n    this._readableState.destroyed = false;\n    this._readableState.reading = false;\n    this._readableState.ended = false;\n    this._readableState.endEmitted = false;\n  }\n\n  if (this._writableState) {\n    this._writableState.destroyed = false;\n    this._writableState.ended = false;\n    this._writableState.ending = false;\n    this._writableState.finished = false;\n    this._writableState.errorEmitted = false;\n  }\n}\n\nfunction emitErrorNT(self, err) {\n  self.emit('error', err);\n}\n\nmodule.exports = {\n  destroy: destroy,\n  undestroy: undestroy\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rowPluckB;\n/**\n * adds {from} deltas into {m} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowIndex\n */\nfunction rowPluckB(product, left, rowIndex) {\n  var columns = left.columns;\n  var rowBase = columns * rowIndex;\n  for (var column = 0; column < columns; column++) {\n    left.deltas[rowBase + column] = product.deltas[column];\n  }\n}\n//# sourceMappingURL=row-pluck-b.js.map","'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar acorn = require('acorn');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionNodeBase\n  * \n  * @desc Represents a single function, inside JS, webGL, or openGL.\n  * \n  * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n  * \n  * @prop {String} functionName - Name of the function\n  * @prop {Function} jsFunction - The JS Function the node represents\n  * @prop {String} jsFunctionString - jsFunction.toString()\n  * @prop {String[]} paramNames - Parameter names of the function\n  * @prop {String[]} paramTypes - Shader land parameters type assumption\n  * @prop {Boolean} isRootKernel - Special indicator, for kernel function\n  * @prop {String} webglFunctionString - webgl converted function string\n  * @prop {String} openglFunctionString - opengl converted function string\n  * @prop {String[]} calledFunctions - List of all the functions called\n  * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n  * @param {Function|String} jsFunction - JS Function to do conversion\n  * @param {Object} options\n  *\n  */\n\tfunction BaseFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, BaseFunctionNode);\n\n\t\tthis.calledFunctions = [];\n\t\tthis.calledFunctionsArguments = {};\n\t\tthis.builder = null;\n\t\tthis.isRootKernel = false;\n\t\tthis.isSubKernel = false;\n\t\tthis.parent = null;\n\t\tthis.debug = null;\n\t\tthis.prototypeOnly = null;\n\t\tthis.constants = null;\n\t\tthis.output = null;\n\t\tthis.declarations = {};\n\t\tthis.states = [];\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tvar paramTypes = void 0;\n\t\tvar returnType = void 0;\n\t\tif (options) {\n\t\t\tif (options.hasOwnProperty('debug')) {\n\t\t\t\tthis.debug = options.debug;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('prototypeOnly')) {\n\t\t\t\tthis.prototypeOnly = options.prototypeOnly;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constants')) {\n\t\t\t\tthis.constants = options.constants;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('output')) {\n\t\t\t\tthis.output = options.output;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('loopMaxIterations')) {\n\t\t\t\tthis.loopMaxIterations = options.loopMaxIterations;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('paramTypes')) {\n\t\t\t\tthis.paramTypes = paramTypes = options.paramTypes;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('constantTypes')) {\n\t\t\t\tthis.constantTypes = options.constantTypes;\n\t\t\t} else {\n\t\t\t\tthis.constantTypes = {};\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('returnType')) {\n\t\t\t\treturnType = options.returnType;\n\t\t\t}\n\t\t\tif (options.hasOwnProperty('fixIntegerDivisionAccuracy')) {\n\t\t\t\tthis.fixIntegerDivisionAccuracy = options.fixIntegerDivisionAccuracy;\n\t\t\t}\n\t\t}\n\n\t\t//\n\t\t// Missing jsFunction object exception\n\t\t//\n\t\tif (!jsFunction) {\n\t\t\tthrow 'jsFunction, parameter is missing';\n\t\t}\n\n\t\t//\n\t\t// Setup jsFunction and its string property + validate them\n\t\t//\n\t\tthis.jsFunctionString = jsFunction.toString();\n\t\tif (!utils.isFunctionString(this.jsFunctionString)) {\n\t\t\tconsole.error('jsFunction, to string conversion check failed: not a function?', this.jsFunctionString);\n\t\t\tthrow 'jsFunction, to string conversion check failed: not a function?';\n\t\t}\n\n\t\tif (!utils.isFunction(jsFunction)) {\n\t\t\t//throw 'jsFunction, is not a valid JS Function';\n\t\t\tthis.jsFunction = null;\n\t\t} else {\n\t\t\tthis.jsFunction = jsFunction;\n\t\t}\n\n\t\t//\n\t\t// Setup the function name property\n\t\t//\n\t\tthis.functionName = functionName || jsFunction && jsFunction.name || utils.getFunctionNameFromString(this.jsFunctionString);\n\n\t\tif (!this.functionName) {\n\t\t\tthrow 'jsFunction, missing name argument or value';\n\t\t}\n\n\t\t//\n\t\t// Extract parameter name, and its argument types\n\t\t//\n\t\tthis.paramNames = utils.getParamNamesFromString(this.jsFunctionString);\n\t\tif (paramTypes) {\n\t\t\tif (Array.isArray(paramTypes)) {\n\t\t\t\tif (paramTypes.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramTypes.length + ',' + this.paramNames.length + ')';\n\t\t\t\t}\n\t\t\t\tthis.paramTypes = paramTypes;\n\t\t\t} else if ((typeof paramTypes === 'undefined' ? 'undefined' : _typeof(paramTypes)) === 'object') {\n\t\t\t\tvar paramVariableNames = Object.keys(paramTypes);\n\t\t\t\tif (paramTypes.hasOwnProperty('returns')) {\n\t\t\t\t\tthis.returnType = paramTypes.returns;\n\t\t\t\t\tparamVariableNames.splice(paramVariableNames.indexOf('returns'), 1);\n\t\t\t\t}\n\t\t\t\tif (paramVariableNames.length > 0 && paramVariableNames.length !== this.paramNames.length) {\n\t\t\t\t\tthrow 'Invalid argument type array length, against function length -> (' + paramVariableNames.length + ',' + this.paramNames.length + ')';\n\t\t\t\t} else {\n\t\t\t\t\tthis.paramTypes = this.paramNames.map(function (key) {\n\t\t\t\t\t\tif (paramTypes.hasOwnProperty(key)) {\n\t\t\t\t\t\t\treturn paramTypes[key];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\treturn 'Number';\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthis.paramTypes = [];\n\t\t}\n\n\t\t//\n\t\t// Return type handling\n\t\t//\n\t\tif (!this.returnType) {\n\t\t\tthis.returnType = returnType || 'Number';\n\t\t}\n\t}\n\n\t_createClass(BaseFunctionNode, [{\n\t\tkey: 'isIdentifierConstant',\n\t\tvalue: function isIdentifierConstant(paramName) {\n\t\t\tif (!this.constants) return false;\n\t\t\treturn this.constants.hasOwnProperty(paramName);\n\t\t}\n\t}, {\n\t\tkey: 'isInput',\n\t\tvalue: function isInput(paramName) {\n\t\t\treturn this.paramTypes[this.paramNames.indexOf(paramName)] === 'Input';\n\t\t}\n\t}, {\n\t\tkey: 'setBuilder',\n\t\tvalue: function setBuilder(builder) {\n\t\t\tthis.builder = builder;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'pushState',\n\t\tvalue: function pushState(state) {\n\t\t\tthis.states.push(state);\n\t\t}\n\t}, {\n\t\tkey: 'popState',\n\t\tvalue: function popState(state) {\n\t\t\tif (this.state !== state) {\n\t\t\t\tthrow new Error('Cannot popState ' + state + ' when in ' + this.state);\n\t\t\t}\n\t\t\tthis.states.pop();\n\t\t}\n\t}, {\n\t\tkey: 'isState',\n\t\tvalue: function isState(state) {\n\t\t\treturn this.state === state;\n\t\t}\n\t}, {\n\t\tkey: 'getJsFunction',\n\n\t\t/**\n   * \n   * Core Functions\n   * \n   */\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJSFunction\n   *\n   * @desc Gets and return the stored JS Function.\n   * Note: that this internally eval the function, if only the string was provided on construction\n   *\n   * @returns {Function} The function object\n   *\n   */\n\t\tvalue: function getJsFunction() {\n\t\t\tif (this.jsFunction) {\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tif (this.jsFunctionString) {\n\t\t\t\tthis.jsFunction = eval(this.jsFunctionString);\n\t\t\t\treturn this.jsFunction;\n\t\t\t}\n\n\t\t\tthrow 'Missing jsFunction, and jsFunctionString parameter';\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astMemberExpressionUnroll\n   * @desc Parses the abstract syntax tree for binary expression.\n   *\n   * <p>Utility function for astCallExpression.</p>\n   *\n   * @param {Object} ast - the AST object to parse\n   *\n   * @returns {String} the function namespace call, unrolled\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpressionUnroll',\n\t\tvalue: function astMemberExpressionUnroll(ast) {\n\t\t\tif (ast.type === 'Identifier') {\n\t\t\t\treturn ast.name;\n\t\t\t} else if (ast.type === 'ThisExpression') {\n\t\t\t\treturn 'this';\n\t\t\t}\n\n\t\t\tif (ast.type === 'MemberExpression') {\n\t\t\t\tif (ast.object && ast.property) {\n\t\t\t\t\t//babel sniffing\n\t\t\t\t\tif (ast.object.hasOwnProperty('name') && ast.object.name[0] === '_') {\n\t\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.object) + '.' + this.astMemberExpressionUnroll(ast.property);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t//babel sniffing\n\t\t\tif (ast.hasOwnProperty('expressions')) {\n\t\t\t\tvar firstExpression = ast.expressions[0];\n\t\t\t\tif (firstExpression.type === 'Literal' && firstExpression.value === 0 && ast.expressions.length === 2) {\n\t\t\t\t\treturn this.astMemberExpressionUnroll(ast.expressions[1]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression_unroll', ast);\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getJsAST\n   *\n   * @desc Parses the class function JS, and returns its Abstract Syntax Tree object.\n   *\n   * This is used internally to convert to shader code\n   *\n   * @param {Object} [inParser] - Parser to use, assumes in scope 'parser' if null or undefined\n   *\n   * @returns {Object} The function AST Object, note that result is cached under this.jsFunctionAST;\n   *\n   */\n\n\t}, {\n\t\tkey: 'getJsAST',\n\t\tvalue: function getJsAST(inParser) {\n\t\t\tif (this.jsFunctionAST) {\n\t\t\t\treturn this.jsFunctionAST;\n\t\t\t}\n\n\t\t\tinParser = inParser || acorn;\n\t\t\tif (inParser === null) {\n\t\t\t\tthrow 'Missing JS to AST parser';\n\t\t\t}\n\n\t\t\tvar ast = inParser.parse('var ' + this.functionName + ' = ' + this.jsFunctionString + ';', {\n\t\t\t\tlocations: true\n\t\t\t});\n\t\t\tif (ast === null) {\n\t\t\t\tthrow 'Failed to parse JS code';\n\t\t\t}\n\n\t\t\t// take out the function object, outside the var declarations\n\t\t\tvar funcAST = ast.body[0].declarations[0].init;\n\t\t\tthis.jsFunctionAST = funcAST;\n\n\t\t\treturn funcAST;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getFunctionString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.webGlFunctionString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionString',\n\t\tvalue: function getFunctionString() {\n\t\t\tthis.generate();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name setFunctionString\n   *\n   * @desc Set the functionString value, overwriting it\n   *\n   * @param {String} functionString - Shader code string, representing the function\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFunctionString',\n\t\tvalue: function setFunctionString(functionString) {\n\t\t\tthis.functionString = functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getParamType\n   *\n   * @desc Return the type of parameter sent to subKernel/Kernel.\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Type of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamType',\n\t\tvalue: function getParamType(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) {\n\t\t\t\tif (this.declarations.hasOwnProperty(paramName)) {\n\t\t\t\t\treturn this.declarations[paramName];\n\t\t\t\t} else {\n\t\t\t\t\treturn 'Number';\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (!this.parent) {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t} else {\n\t\t\t\t\tif (this.paramTypes[paramIndex]) return this.paramTypes[paramIndex];\n\t\t\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\t\t\tif (calledFunctionArgument[paramIndex] !== null) {\n\t\t\t\t\t\t\treturn this.paramTypes[paramIndex] = calledFunctionArgument[paramIndex].type;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn 'Number';\n\t\t}\n\t}, {\n\t\tkey: 'getConstantType',\n\t\tvalue: function getConstantType(constantName) {\n\t\t\tif (this.constantTypes[constantName]) {\n\t\t\t\treturn this.constantTypes[constantName];\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name getUserParamName\n   *\n   * @desc Return the name of the *user parameter*(subKernel parameter) corresponding \n   * to the parameter supplied to the kernel\n   *\n   * @param {String} paramName - Name of the parameter\n   *\n   * @returns {String} Name of the parameter\n   *\n   */\n\n\t}, {\n\t\tkey: 'getUserParamName',\n\t\tvalue: function getUserParamName(paramName) {\n\t\t\tvar paramIndex = this.paramNames.indexOf(paramName);\n\t\t\tif (paramIndex === -1) return null;\n\t\t\tif (!this.parent || !this.isSubKernel) return null;\n\t\t\tvar calledFunctionArguments = this.parent.calledFunctionsArguments[this.functionName];\n\t\t\tfor (var i = 0; i < calledFunctionArguments.length; i++) {\n\t\t\t\tvar calledFunctionArgument = calledFunctionArguments[i];\n\t\t\t\tvar param = calledFunctionArgument[paramIndex];\n\t\t\t\tif (param !== null && param.type !== 'Integer') {\n\t\t\t\t\treturn param.name;\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate(options) {\n\t\t\tthrow new Error('generate not defined on BaseFunctionNode');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionNodeBase#\n   * @function\n   * @name astGeneric\n   *\n   * @desc Parses the abstract syntax tree for generically to its respective function\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed string array\n   */\n\n\t}, {\n\t\tkey: 'astGeneric',\n\t\tvalue: function astGeneric(ast, retArr) {\n\t\t\tif (ast === null) {\n\t\t\t\tthrow this.astErrorOutput('NULL ast', ast);\n\t\t\t} else {\n\t\t\t\tif (Array.isArray(ast)) {\n\t\t\t\t\tfor (var i = 0; i < ast.length; i++) {\n\t\t\t\t\t\tthis.astGeneric(ast[i], retArr);\n\t\t\t\t\t}\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\n\t\t\t\tswitch (ast.type) {\n\t\t\t\t\tcase 'FunctionDeclaration':\n\t\t\t\t\t\treturn this.astFunctionDeclaration(ast, retArr);\n\t\t\t\t\tcase 'FunctionExpression':\n\t\t\t\t\t\treturn this.astFunctionExpression(ast, retArr);\n\t\t\t\t\tcase 'ReturnStatement':\n\t\t\t\t\t\treturn this.astReturnStatement(ast, retArr);\n\t\t\t\t\tcase 'Literal':\n\t\t\t\t\t\treturn this.astLiteral(ast, retArr);\n\t\t\t\t\tcase 'BinaryExpression':\n\t\t\t\t\t\treturn this.astBinaryExpression(ast, retArr);\n\t\t\t\t\tcase 'Identifier':\n\t\t\t\t\t\treturn this.astIdentifierExpression(ast, retArr);\n\t\t\t\t\tcase 'AssignmentExpression':\n\t\t\t\t\t\treturn this.astAssignmentExpression(ast, retArr);\n\t\t\t\t\tcase 'ExpressionStatement':\n\t\t\t\t\t\treturn this.astExpressionStatement(ast, retArr);\n\t\t\t\t\tcase 'EmptyStatement':\n\t\t\t\t\t\treturn this.astEmptyStatement(ast, retArr);\n\t\t\t\t\tcase 'BlockStatement':\n\t\t\t\t\t\treturn this.astBlockStatement(ast, retArr);\n\t\t\t\t\tcase 'IfStatement':\n\t\t\t\t\t\treturn this.astIfStatement(ast, retArr);\n\t\t\t\t\tcase 'BreakStatement':\n\t\t\t\t\t\treturn this.astBreakStatement(ast, retArr);\n\t\t\t\t\tcase 'ContinueStatement':\n\t\t\t\t\t\treturn this.astContinueStatement(ast, retArr);\n\t\t\t\t\tcase 'ForStatement':\n\t\t\t\t\t\treturn this.astForStatement(ast, retArr);\n\t\t\t\t\tcase 'WhileStatement':\n\t\t\t\t\t\treturn this.astWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'DoWhileStatement':\n\t\t\t\t\t\treturn this.astDoWhileStatement(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclaration':\n\t\t\t\t\t\treturn this.astVariableDeclaration(ast, retArr);\n\t\t\t\t\tcase 'VariableDeclarator':\n\t\t\t\t\t\treturn this.astVariableDeclarator(ast, retArr);\n\t\t\t\t\tcase 'ThisExpression':\n\t\t\t\t\t\treturn this.astThisExpression(ast, retArr);\n\t\t\t\t\tcase 'SequenceExpression':\n\t\t\t\t\t\treturn this.astSequenceExpression(ast, retArr);\n\t\t\t\t\tcase 'UnaryExpression':\n\t\t\t\t\t\treturn this.astUnaryExpression(ast, retArr);\n\t\t\t\t\tcase 'UpdateExpression':\n\t\t\t\t\t\treturn this.astUpdateExpression(ast, retArr);\n\t\t\t\t\tcase 'LogicalExpression':\n\t\t\t\t\t\treturn this.astLogicalExpression(ast, retArr);\n\t\t\t\t\tcase 'MemberExpression':\n\t\t\t\t\t\treturn this.astMemberExpression(ast, retArr);\n\t\t\t\t\tcase 'CallExpression':\n\t\t\t\t\t\treturn this.astCallExpression(ast, retArr);\n\t\t\t\t\tcase 'ArrayExpression':\n\t\t\t\t\t\treturn this.astArrayExpression(ast, retArr);\n\t\t\t\t\tcase 'DebuggerStatement':\n\t\t\t\t\t\treturn this.astDebuggerStatement(ast, retArr);\n\t\t\t\t}\n\n\t\t\t\tthrow this.astErrorOutput('Unknown ast type : ' + ast.type, ast);\n\t\t\t}\n\t\t}\n\t\t/**\n   * @function\n   * @name astErrorOutput\n   * @ignore\n   * @desc To throw the AST error, with its location.\n   *\n   * @todo add location support fpr the AST error\n   *\n   * @param {Object} error - the error message output\n   * @param {Object} ast - the AST object where the error is\n   */\n\n\t}, {\n\t\tkey: 'astErrorOutput',\n\t\tvalue: function astErrorOutput(error, ast) {\n\t\t\tconsole.error(utils.getAstString(this.jsFunctionString, ast));\n\t\t\tconsole.error(error, ast, this);\n\t\t\treturn error;\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(ast, retArr) {\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @ignore\n   * @function\n   * @name pushParameter\n   *\n   * @desc [INTERNAL] pushes a fn parameter onto retArr and 'casts' to int if necessary\n   *  i.e. deal with force-int-parameter state\n   * \t\t\t\n   * @param {Array} retArr - return array string\n   * @param {String} parameter - the parameter name  \n   *\n   */\n\n\t}, {\n\t\tkey: 'pushParameter',\n\t\tvalue: function pushParameter(retArr, parameter) {\n\t\t\tif (this.isState('in-get-call-parameters')) {\n\t\t\t\tretArr.push('int(' + parameter + ')');\n\t\t\t} else {\n\t\t\t\tretArr.push(parameter);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'state',\n\t\tget: function get() {\n\t\t\treturn this.states[this.states.length - 1];\n\t\t}\n\t}]);\n\n\treturn BaseFunctionNode;\n}();","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = toSVG;\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction toSVG(network, options) {\n    //default values\n    var defaultOptions = {\n        line: {\n            width: '0.5',\n            color: 'black'\n        },\n        inputs: {\n            color: 'rgba(0, 128, 0, 0.5)',\n            label: false\n        },\n        outputs: {\n            color: 'rgba(100, 149, 237, 0.5)'\n        },\n        hidden: {\n            color: 'rgba(255, 127, 80, 0.5)'\n        },\n        fontSize: '14px',\n        radius: '8',\n        width: '400',\n        height: '250'\n    };\n\n    var size = typeof network.inputSize == 'number' && typeof network.outputSize == 'number' && network.inputSize > 0 && network.outputSize > 0 ? [network.inputSize].concat(_toConsumableArray(network.hiddenLayers), [network.outputSize]) : false;\n    options = Object.assign(defaultOptions, options);\n    options.inputs.label = options.inputs.label.length == network.inputSize ? options.inputs.label : false;\n    if (size) {\n        var svg = '<svg  xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" version=\"1.1\" width=\"' + options.width + '\" height=\"' + options.height + '\">';\n        var sh = options.width / size.length;\n        size.forEach(function (neuronsNu, i) {\n            var sv = options.height / neuronsNu;\n            [].concat(_toConsumableArray(Array(neuronsNu))).forEach(function (_, j) {\n                if (i == 0) {\n                    svg += '<rect x=\"' + (sh / 2 - options.radius) + '\" y=\"' + (sv / 2 + j * sv - options.radius) + '\" width=\"' + 2 * options.radius + '\" height=\"' + 2 * options.radius + '\" stroke=\"black\" stroke-width=\"1\" fill=\"' + options.inputs.color + '\" />';\n                    svg += '<line x1=\"' + sh / 4 + '\" y1=\"' + (sv / 2 + j * sv) + '\" x2=\"' + (sh / 2 - options.radius) + '\" y2=\"' + (sv / 2 + j * sv) + '\" style=\"stroke:' + options.line.color + ';stroke-width:' + options.line.width + '\" />';\n                    if (options.inputs.label) {\n                        svg += '<text x=\"' + sh / 8 + '\" y=\"' + (sv / 2 + j * sv - 5) + '\" fill=\"black\" font-size= \"' + options.fontSize + '\">' + options.inputs.label[j] + '</text>';\n                    }\n                } else {\n                    var sv_1 = options.height / size[i - 1];\n                    if (i == size.length - 1) {\n                        svg += '<circle cx=\"' + (sh / 2 + i * sh) + '\" cy=\"' + (sv / 2 + j * sv) + '\" r=\"' + options.radius + '\" stroke=\"black\" stroke-width=\"1\" fill=\"' + options.outputs.color + '\" />';\n                        svg += '<line x1=\"' + (sh / 2 + i * sh + options.radius) + '\" y1=\"' + (sv / 2 + j * sv) + '\" x2=\"' + (sh / 2 + i * sh + sh / 4) + '\" y2=\"' + (sv / 2 + j * sv) + '\" style=\"stroke:' + options.line.color + ';stroke-width:' + options.line.width + '\" />';\n                    } else {\n                        svg += '<circle cx=\"' + (sh / 2 + i * sh) + '\" cy=\"' + (sv / 2 + j * sv) + '\" r=\"' + options.radius + '\" stroke=\"black\" stroke-width=\"1\" fill=\"' + options.hidden.color + '\" />';\n                    }\n                    for (var k = 0; k < size[i - 1]; k++) {\n                        svg += '<line x1=\"' + (sh / 2 + (i - 1) * sh + options.radius) + '\" y1=\"' + (sv_1 / 2 + k * sv_1) + '\" x2=\"' + (sh / 2 + i * sh - options.radius) + '\" y2=\"' + (sv / 2 + j * sv) + '\" style=\"stroke:' + options.line.color + ';stroke-width:' + options.line.width + '\" />';\n                    }\n                }\n            });\n        });\n        svg += '</svg>';\n        return svg;\n    } else {\n        return false;\n    }\n}\n//# sourceMappingURL=to-svg.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('./utils');\nvar WebGLRunner = require('../backend/web-gl/runner');\nvar WebGL2Runner = require('../backend/web-gl2/runner');\nvar CPURunner = require('../backend/cpu/runner');\nvar WebGLValidatorKernel = require('../backend/web-gl/validator-kernel');\nvar WebGL2ValidatorKernel = require('../backend/web-gl2/validator-kernel');\nvar GPUCore = require(\"./gpu-core\");\n\n/**\n * Initialises the GPU.js library class which manages the webGlContext for the created functions.\n * @class\n * @extends GPUCore\n */\n\nvar GPU = function (_GPUCore) {\n\t_inherits(GPU, _GPUCore);\n\n\t/**\n  * Creates an instance of GPU.\n  * @param {any} settings - Settings to set mode, andother properties. See #GPUCore\n  * @memberOf GPU#\n  */\n\tfunction GPU(settings) {\n\t\t_classCallCheck(this, GPU);\n\n\t\tvar _this = _possibleConstructorReturn(this, (GPU.__proto__ || Object.getPrototypeOf(GPU)).call(this, settings));\n\n\t\tsettings = settings || {};\n\t\t_this._canvas = settings.canvas || null;\n\t\t_this._webGl = settings.webGl || null;\n\t\tvar mode = settings.mode;\n\t\tvar detectedMode = void 0;\n\t\tif (!utils.isWebGlSupported()) {\n\t\t\tif (mode && mode !== 'cpu') {\n\t\t\t\tthrow new Error('A requested mode of \"' + mode + '\" and is not supported');\n\t\t\t} else {\n\t\t\t\tconsole.warn('Warning: gpu not supported, falling back to cpu support');\n\t\t\t\tdetectedMode = 'cpu';\n\t\t\t}\n\t\t} else {\n\t\t\tif (_this._webGl) {\n\t\t\t\tif (typeof WebGL2RenderingContext !== 'undefined' && _this._webGl.constructor === WebGL2RenderingContext) {\n\t\t\t\t\tdetectedMode = 'webgl2';\n\t\t\t\t} else if (typeof WebGLRenderingContext !== 'undefined' && _this._webGl.constructor === WebGLRenderingContext) {\n\t\t\t\t\tdetectedMode = 'webgl';\n\t\t\t\t} else {\n\t\t\t\t\tthrow new Error('unknown WebGL Context');\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdetectedMode = mode || 'gpu';\n\t\t\t}\n\t\t}\n\t\t_this.kernels = [];\n\n\t\tvar runnerSettings = {\n\t\t\tcanvas: _this._canvas,\n\t\t\twebGl: _this._webGl\n\t\t};\n\n\t\tswitch (detectedMode) {\n\t\t\t// public options\n\t\t\tcase 'cpu':\n\t\t\t\t_this._runner = new CPURunner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'gpu':\n\t\t\t\tvar Runner = _this.getGPURunner();\n\t\t\t\t_this._runner = new Runner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for testing\n\t\t\tcase 'webgl2':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\tbreak;\n\t\t\tcase 'webgl':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\tbreak;\n\n\t\t\t// private explicit options for internal\n\t\t\tcase 'webgl2-validator':\n\t\t\t\t_this._runner = new WebGL2Runner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGL2ValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tcase 'webgl-validator':\n\t\t\t\t_this._runner = new WebGLRunner(runnerSettings);\n\t\t\t\t_this._runner.Kernel = WebGLValidatorKernel;\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tthrow new Error('\"' + mode + '\" mode is not defined');\n\t\t}\n\t\treturn _this;\n\t}\n\t/**\n  *\n  * This creates a callable function object to call the kernel function with the argument parameter set\n  *\n  * @name createKernel\n  * @function\n  * @memberOf GPU##\n  *\n  * @param {Function} fn - The calling to perform the conversion\n  * @param {Object} [settings] - The parameter configuration object\n  * @property {String} settings.dimensions - Thread dimension array (Defaults to [1024])\n  * @property {String} settings.mode - CPU / GPU configuration mode (Defaults to null)\n  *\n  * The following modes are supported\n  * *'falsey'* : Attempts to build GPU mode, else fallbacks\n  * *'gpu'* : Attempts to build GPU mode, else fallbacks\n  * *'cpu'* : Forces JS fallback mode only\n  *\n  *\n  * @returns {Function} callable function to run\n  *\n  */\n\n\n\t_createClass(GPU, [{\n\t\tkey: 'createKernel',\n\t\tvalue: function createKernel(fn, settings) {\n\t\t\t//\n\t\t\t// basic parameters safety checks\n\t\t\t//\n\t\t\tif (typeof fn === 'undefined') {\n\t\t\t\tthrow 'Missing fn parameter';\n\t\t\t}\n\t\t\tif (!utils.isFunction(fn) && typeof fn !== 'string') {\n\t\t\t\tthrow 'fn parameter not a function';\n\t\t\t}\n\n\t\t\tvar mergedSettings = Object.assign({\n\t\t\t\twebGl: this._webGl,\n\t\t\t\tcanvas: this._canvas\n\t\t\t}, settings || {});\n\n\t\t\tvar kernel = this._runner.buildKernel(fn, mergedSettings);\n\n\t\t\t//if canvas didn't come from this, propagate from kernel\n\t\t\tif (!this._canvas) {\n\t\t\t\tthis._canvas = kernel.getCanvas();\n\t\t\t}\n\t\t\tif (!this._runner.canvas) {\n\t\t\t\tthis._runner.canvas = kernel.getCanvas();\n\t\t\t}\n\n\t\t\tthis.kernels.push(kernel);\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Create a super kernel which executes sub kernels\n   * and saves their output to be used with the next sub kernel.\n   * This can be useful if we want to save the output on one kernel,\n   * and then use it as an input to another kernel. *Machine Learning*\n   *\n   * @name createKernelMap\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Object|Array} subKernels - Sub kernels for this kernel\n   * @param {Function} rootKernel - Root kernel\n   *\n   * @returns {Function} callable kernel function\n   *\n   * @example\n   * const megaKernel = gpu.createKernelMap({\n   *   addResult: function add(a, b) {\n   *     return a[this.thread.x] + b[this.thread.x];\n   *   },\n   *   multiplyResult: function multiply(a, b) {\n   *     return a[this.thread.x] * b[this.thread.x];\n   *   },\n   *  }, function(a, b, c) {\n   *       return multiply(add(a, b), c);\n   * });\n   *\n   * megaKernel(a, b, c);\n   *\n   * Note: You can also define subKernels as an array of functions.\n   * > [add, multiply]\n   *\n   */\n\n\t}, {\n\t\tkey: 'createKernelMap',\n\t\tvalue: function createKernelMap() {\n\t\t\tvar fn = void 0;\n\t\t\tvar settings = void 0;\n\t\t\tif (typeof arguments[arguments.length - 2] === 'function') {\n\t\t\t\tfn = arguments[arguments.length - 2];\n\t\t\t\tsettings = arguments[arguments.length - 1];\n\t\t\t} else {\n\t\t\t\tfn = arguments[arguments.length - 1];\n\t\t\t}\n\n\t\t\tif (!utils.isWebGlDrawBuffersSupported()) {\n\t\t\t\tthis._runner = new CPURunner(settings);\n\t\t\t}\n\n\t\t\tvar kernel = this.createKernel(fn, settings);\n\t\t\tif (Array.isArray(arguments[0])) {\n\t\t\t\tvar functions = arguments[0];\n\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\tkernel.addSubKernel(functions[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar _functions = arguments[0];\n\t\t\t\tfor (var p in _functions) {\n\t\t\t\t\tif (!_functions.hasOwnProperty(p)) continue;\n\t\t\t\t\tkernel.addSubKernelProperty(p, _functions[p]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn kernel;\n\t\t}\n\n\t\t/**\n   *\n   * Combine different kernels into one super Kernel,\n   * useful to perform multiple operations inside one\n   * kernel without the penalty of data transfer between\n   * cpu and gpu.\n   *\n   * The number of kernel functions sent to this method can be variable.\n   * You can send in one, two, etc.\n   *\n   * @name combineKernels\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function} subKernels - Kernel function(s) to combine.\n   * @param {Function} rootKernel - Root kernel to combine kernels into\n   *\n   * @example\n   * \tcombineKernels(add, multiply, function(a,b,c){\n   *\t \treturn add(multiply(a,b), c)\n   *\t})\n   *\n   * @returns {Function} Callable kernel function\n   *\n   */\n\n\t}, {\n\t\tkey: 'combineKernels',\n\t\tvalue: function combineKernels() {\n\t\t\tvar lastKernel = arguments[arguments.length - 2];\n\t\t\tvar combinedKernel = arguments[arguments.length - 1];\n\t\t\tif (this.getMode() === 'cpu') return combinedKernel;\n\n\t\t\tvar canvas = arguments[0].getCanvas();\n\t\t\tvar webGl = arguments[0].getWebGl();\n\n\t\t\tfor (var i = 0; i < arguments.length - 1; i++) {\n\t\t\t\targuments[i].setCanvas(canvas).setWebGl(webGl).setOutputToTexture(true);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tcombinedKernel.apply(null, arguments);\n\t\t\t\tvar texSize = lastKernel.texSize;\n\t\t\t\tvar gl = lastKernel.getWebGl();\n\t\t\t\tvar threadDim = lastKernel.threadDim;\n\t\t\t\tvar result = void 0;\n\t\t\t\tif (lastKernel.floatOutput) {\n\t\t\t\t\tvar w = texSize[0];\n\t\t\t\t\tvar h = Math.ceil(texSize[1] / 4);\n\t\t\t\t\tresult = new Float32Array(w * h * 4);\n\t\t\t\t\tgl.readPixels(0, 0, w, h, gl.RGBA, gl.FLOAT, result);\n\t\t\t\t} else {\n\t\t\t\t\tvar bytes = new Uint8Array(texSize[0] * texSize[1] * 4);\n\t\t\t\t\tgl.readPixels(0, 0, texSize[0], texSize[1], gl.RGBA, gl.UNSIGNED_BYTE, bytes);\n\t\t\t\t\tresult = new Float32Array(bytes.buffer);\n\t\t\t\t}\n\n\t\t\t\tresult = result.subarray(0, threadDim[0] * threadDim[1] * threadDim[2]);\n\n\t\t\t\tif (lastKernel.output.length === 1) {\n\t\t\t\t\treturn result;\n\t\t\t\t} else if (lastKernel.output.length === 2) {\n\t\t\t\t\treturn utils.splitArray(result, lastKernel.output[0]);\n\t\t\t\t} else if (lastKernel.output.length === 3) {\n\t\t\t\t\tvar cube = utils.splitArray(result, lastKernel.output[0] * lastKernel.output[1]);\n\t\t\t\t\treturn cube.map(function (x) {\n\t\t\t\t\t\treturn utils.splitArray(x, lastKernel.output[0]);\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t}, {\n\t\tkey: 'getGPURunner',\n\t\tvalue: function getGPURunner() {\n\t\t\tif (typeof WebGL2RenderingContext !== 'undefined' && utils.isWebGl2Supported()) return WebGL2Runner;\n\t\t\tif (typeof WebGLRenderingContext !== 'undefined') return WebGLRunner;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional functions, that the kernel may call.\n   *\n   * @name addFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {Function|String} fn - JS Function to do conversion\n   * @param {Object} options\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(fn, options) {\n\t\t\tthis._runner.functionBuilder.addFunction(null, fn, options);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Adds additional native functions, that the kernel may call.\n   *\n   * @name addNativeFunction\n   * @function\n   * @memberOf GPU#\n   *\n   * @param {String} name - native function name, used for reverse lookup\n   * @param {String} nativeFunction - the native function implementation, as it would be defined in it's entirety\n   *\n   * @returns {GPU} returns itself\n   *\n   */\n\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, nativeFunction) {\n\t\t\tthis._runner.functionBuilder.addNativeFunction(name, nativeFunction);\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   *\n   * Return the current mode in which gpu.js is executing.\n   * @name getMode\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {String} The current mode, \"cpu\", \"webgl\", etc.\n   *\n   */\n\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn this._runner.getMode();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if browser supports WebGl AND Canvas\n   *\n   * @name get isWebGlSupported\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.isWebGlSupported()`\n   *\n   * @returns {Boolean} TRUE if browser supports webGl\n   *\n   */\n\n\t}, {\n\t\tkey: 'isWebGlSupported',\n\t\tvalue: function isWebGlSupported() {\n\t\t\treturn utils.isWebGlSupported();\n\t\t}\n\n\t\t/**\n   *\n   * Return TRUE, if system has integer division accuracy issue\n   *\n   * @name get hasIntegerDivisionAccuracyBug\n   * @function\n   * @memberOf GPU#\n   *\n   * Note: This function can also be called directly `GPU.hasIntegerDivisionAccuracyBug()`\n   *\n   * @returns {Boolean} TRUE if system has integer division accuracy issue\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\treturn utils.hasIntegerDivisionAccuracyBug();\n\t\t}\n\n\t\t/**\n   *\n   * Return the canvas object bound to this gpu instance.\n   *\n   * @name getCanvas\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} Canvas object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   *\n   * Return the webGl object bound to this gpu instance.\n   *\n   * @name getWebGl\n   * @function\n   * @memberOf GPU#\n   *\n   * @returns {Object} WebGl object if present\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with gpu.js & the webGl if we created it\n   *\n   * @name destroy\n   * @function\n   * @memberOf GPU#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {\n\t\t\tvar _this2 = this;\n\n\t\t\t// perform on next runloop - for some reason we dont get lose context events \n\t\t\t// if webGl is created and destroyed in the same run loop.\n\t\t\tsetTimeout(function () {\n\t\t\t\tvar kernels = _this2.kernels;\n\n\t\t\t\tvar destroyWebGl = !_this2._webGl && kernels.length && kernels[0]._webGl;\n\t\t\t\tfor (var i = 0; i < _this2.kernels.length; i++) {\n\t\t\t\t\t_this2.kernels[i].destroy(true); // remove canvas if exists\n\t\t\t\t}\n\n\t\t\t\tif (destroyWebGl) {\n\t\t\t\t\tdestroyWebGl.OES_texture_float = null;\n\t\t\t\t\tdestroyWebGl.OES_texture_float_linear = null;\n\t\t\t\t\tdestroyWebGl.OES_element_index_uint = null;\n\t\t\t\t\tvar loseContextExt = destroyWebGl.getExtension('WEBGL_lose_context');\n\t\t\t\t\tif (loseContextExt) {\n\t\t\t\t\t\tloseContextExt.loseContext();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}, 0);\n\t\t}\n\t}]);\n\n\treturn GPU;\n}(GPUCore);\n\n;\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\nObject.assign(GPU, GPUCore);\n\nmodule.exports = GPU;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _ones = require('../../utilities/ones');\n\nvar _ones2 = _interopRequireDefault(_ones);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nvar OnesMatrix = function (_Matrix) {\n  _inherits(OnesMatrix, _Matrix);\n\n  function OnesMatrix(rows, columns) {\n    _classCallCheck(this, OnesMatrix);\n\n    var _this = _possibleConstructorReturn(this, (OnesMatrix.__proto__ || Object.getPrototypeOf(OnesMatrix)).call(this, rows, columns));\n\n    _this.rows = rows;\n    _this.columns = columns;\n    _this.weights = (0, _ones2.default)(rows * columns);\n    _this.deltas = (0, _ones2.default)(rows * columns);\n    return _this;\n  }\n\n  return OnesMatrix;\n}(_2.default);\n\nexports.default = OnesMatrix;\n//# sourceMappingURL=ones-matrix.js.map","\"use strict\";\n\nmodule.exports = \"#version 300 es\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nin vec2 aPos;\\nin vec2 aTexCoord;\\n\\nout vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar Input = require('../core/input');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor KernelBase\n  * \n  * @desc Implements the base class for Kernels, and is used as a \n  * parent class for all Kernel implementations.\n  *\n  * This contains the basic methods needed by all Kernel implementations, \n  * like setDimensions, addSubKernel, etc.\n  * \n  * @prop {Array} paramNames - Name of the parameters of the kernel function\n  * @prop {String} fnString - Kernel function as a String\n  * @prop {Array} dimensions - Dimensions of the kernel function, this.thread.x, etc.\n  * @prop {Boolean} debug - Toggle debug mode\n  * @prop {String} graphical - Toggle graphical mode\n  * @prop {number} loopMaxIterations - Maximum number of loop iterations\n  * @prop {Object} constants - Global constants\n  * @prop {Array} subKernels - Sub kernels bound to this kernel instance\n  * @prop {Object} subKernelProperties - Sub kernels bound to this kernel instance as key/value pairs\n  * @prop {Array} subKernelOutputVariableNames - Names of the variables outputted by the subkerls\n  * @prop {Boolean} fixIntegerDivisionAccuracy - fix issues with some graphics cards not returning whole numbers when dividing by factors of 3\n  *\n  */\n\tfunction KernelBase(fnString, settings) {\n\t\t_classCallCheck(this, KernelBase);\n\n\t\tthis.paramNames = utils.getParamNamesFromString(fnString);\n\t\tthis.fnString = fnString;\n\t\tthis.output = null;\n\t\tthis.debug = false;\n\t\tthis.graphical = false;\n\t\tthis.loopMaxIterations = 0;\n\t\tthis.constants = null;\n\t\tthis.wraparound = null;\n\t\tthis.hardcodeConstants = null;\n\t\tthis.outputToTexture = null;\n\t\tthis.outputImmutable = null;\n\t\tthis.texSize = null;\n\t\tthis._canvas = null;\n\t\tthis._webGl = null;\n\t\tthis.threadDim = null;\n\t\tthis.floatTextures = null;\n\t\tthis.floatOutput = null;\n\t\tthis.floatOutputForce = null;\n\t\tthis.addFunction = null;\n\t\tthis.functions = null;\n\t\tthis.nativeFunctions = null;\n\t\tthis.subKernels = null;\n\t\tthis.subKernelProperties = null;\n\t\tthis.subKernelNames = null;\n\t\tthis.subKernelOutputVariableNames = null;\n\t\tthis.functionBuilder = null;\n\t\tthis.paramTypes = null;\n\t\tthis.paramSizes = null;\n\t\tthis.constantTypes = null;\n\t\tthis.fixIntegerDivisionAccuracy = null;\n\n\t\tfor (var p in settings) {\n\t\t\tif (!settings.hasOwnProperty(p) || !this.hasOwnProperty(p)) continue;\n\t\t\tthis[p] = settings[p];\n\t\t}\n\t\tif (settings.hasOwnProperty('canvas')) {\n\t\t\tthis._canvas = settings.canvas;\n\t\t}\n\t\tif (settings.hasOwnProperty('webGl')) {\n\t\t\tthis._webGl = settings.webGl;\n\t\t}\n\t\tif (settings.hasOwnProperty('output')) {\n\t\t\tthis.setOutput(settings.output); // Flatten output object\n\t\t}\n\n\t\tif (!this._canvas) this._canvas = utils.initCanvas();\n\t}\n\n\t_createClass(KernelBase, [{\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\tthrow new Error('\"build\" not defined on Base');\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setupParams\n   *\n   * @desc Setup the parameter types for the parameters\n   * supplied to the Kernel function\n   *\n   * @param {IArguments} args - The actual parameters sent to the Kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'setupParams',\n\t\tvalue: function setupParams(args) {\n\t\t\tthis.paramTypes = [];\n\t\t\tthis.paramSizes = [];\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tvar arg = args[i];\n\n\t\t\t\tthis.paramTypes.push(utils.getArgumentType(arg));\n\t\t\t\tthis.paramSizes.push(arg.constructor === Input ? arg.size : null);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setupConstants',\n\t\tvalue: function setupConstants() {\n\t\t\tthis.constantTypes = {};\n\t\t\tif (this.constants) {\n\t\t\t\tfor (var p in this.constants) {\n\t\t\t\t\tthis.constantTypes[p] = utils.getArgumentType(this.constants[p]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'setFunctions',\n\t\tvalue: function setFunctions(functions) {\n\t\t\tthis.functions = functions;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setOutput\n   *\n   * @desc Set dimensions of the kernel function\n   *\n   * @param {Array|Object} output - The output array to set the kernel output size to\n   *\n   */\n\n\t}, {\n\t\tkey: 'setOutput',\n\t\tvalue: function setOutput(output) {\n\t\t\tif (output.hasOwnProperty('x')) {\n\t\t\t\tif (output.hasOwnProperty('y')) {\n\t\t\t\t\tif (output.hasOwnProperty('z')) {\n\t\t\t\t\t\tthis.output = [output.x, output.y, output.z];\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.output = [output.x, output.y];\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.output = [output.x];\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.output = output;\n\t\t\t}\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setDebug\n   *\n   * @desc Toggle debug mode\n   *\n   * @param {Boolean} flag - true to enable debug\n   *\n   */\n\n\t}, {\n\t\tkey: 'setDebug',\n\t\tvalue: function setDebug(flag) {\n\t\t\tthis.debug = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setGraphical\n   *\n   * @desc Toggle graphical output mode\n   *\n   * @param {Boolean} flag - true to enable graphical output\n   *\n   */\n\n\t}, {\n\t\tkey: 'setGraphical',\n\t\tvalue: function setGraphical(flag) {\n\t\t\tthis.graphical = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setLoopMaxIterations\n   *\n   * @desc Set the maximum number of loop iterations\n   *\n   * @param {number} max - iterations count\n   *\n   */\n\n\t}, {\n\t\tkey: 'setLoopMaxIterations',\n\t\tvalue: function setLoopMaxIterations(max) {\n\t\t\tthis.loopMaxIterations = max;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFixIntegerDivisionAccuracy\n   *\n   * @desc Fix division by factor of 3 FP accuracy bug\n   *\n   * @param {Boolean} fix - should fix \n   *\n   */\n\n\t}, {\n\t\tkey: 'setFixIntegerDivisionAccuracy',\n\t\tvalue: function setFixIntegerDivisionAccuracy(fix) {\n\t\t\tthis.fixIntegerDivisionAccuracy = fix;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setConstants\n   * @desc Set Constants\n   */\n\n\t}, {\n\t\tkey: 'setConstants',\n\t\tvalue: function setConstants(constants) {\n\t\t\tthis.constants = constants;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setWraparound',\n\t\tvalue: function setWraparound(flag) {\n\t\t\tconsole.warn('Wraparound mode is not supported and undocumented.');\n\t\t\tthis.wraparound = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setHardcodeConstants',\n\t\tvalue: function setHardcodeConstants(flag) {\n\t\t\tthis.hardcodeConstants = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputToTexture',\n\t\tvalue: function setOutputToTexture(flag) {\n\t\t\tthis.outputToTexture = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setOutputImmutable',\n\t\tvalue: function setOutputImmutable(flag) {\n\t\t\tthis.outputImmutable = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatTextures\n   *\n   * @desc Toggle texture output mode\n   *\n   * @param {Boolean} flag - true to enable floatTextures\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatTextures',\n\t\tvalue: function setFloatTextures(flag) {\n\t\t\tthis.floatTextures = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setFloatOutput\n   *\n   * @desc Toggle output mode\n   *\n   * @param {Boolean} flag - true to enable float\n   *\n   */\n\n\t}, {\n\t\tkey: 'setFloatOutput',\n\t\tvalue: function setFloatOutput(flag) {\n\t\t\tthis.floatOutput = flag;\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'setFloatOutputForce',\n\t\tvalue: function setFloatOutputForce(flag) {\n\t\t\tthis.floatOutputForce = flag;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the canvas to kernel\n   * \n   * @param {Canvas} canvas - Canvas to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setCanvas',\n\t\tvalue: function setCanvas(canvas) {\n\t\t\tthis._canvas = canvas;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name setCanvas\n   *\n   * @desc Bind the webGL instance to kernel\n   * \n   * @param {Canvas} webGL - webGL instance to bind\n   *\n   */\n\n\t}, {\n\t\tkey: 'setWebGl',\n\t\tvalue: function setWebGl(webGl) {\n\t\t\tthis._webGl = webGl;\n\t\t\treturn this;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getCanvas()\n   *\n   * @desc Returns the current canvas instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getCanvas',\n\t\tvalue: function getCanvas() {\n\t\t\treturn this._canvas;\n\t\t}\n\n\t\t/**\n   * @memberOf KernelBase#\n   * @function\n   * @name getWebGl()\n   *\n   * @desc Returns the current webGl instance bound to the kernel\n   *\n   */\n\n\t}, {\n\t\tkey: 'getWebGl',\n\t\tvalue: function getWebGl() {\n\t\t\treturn this._webGl;\n\t\t}\n\t}, {\n\t\tkey: 'validateOptions',\n\t\tvalue: function validateOptions() {\n\t\t\tthrow new Error('validateOptions not defined');\n\t\t}\n\t}, {\n\t\tkey: 'exec',\n\t\tvalue: function exec() {\n\t\t\treturn this.execute.apply(this, arguments);\n\t\t}\n\t}, {\n\t\tkey: 'execute',\n\t\tvalue: function execute() {\n\t\t\tvar _this = this;\n\n\t\t\t//\n\t\t\t// Prepare the required objects\n\t\t\t//\n\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\n\t\t\t//\n\t\t\t// Setup and return the promise, and execute the function, in synchronous mode\n\t\t\t//\n\t\t\treturn utils.newPromise(function (accept, reject) {\n\t\t\t\ttry {\n\t\t\t\t\taccept(_this.run.apply(_this, args));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t//\n\t\t\t\t\t// Error : throw rejection\n\t\t\t\t\t//\n\t\t\t\t\treject(e);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a sub kernel to the root kernel instance.\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(fnString) {\n\t\t\tif (this.subKernels === null) {\n\t\t\t\tthis.subKernels = [];\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tthis.subKernels.push(fnString);\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\n\t\t/** \n   * @memberOf KernelBase#\n   * @function\n   * @name addSubKernelProperty\n   *\n   * @desc Add a sub kernel to the root kernel instance, indexed by a property name\n   * This is what `createKernelMap` uses.\n   *\n   * @param {String} property - property key for the subKernel\n   * @param {String} fnString - function (as a String) of the subKernel to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernelProperty',\n\t\tvalue: function addSubKernelProperty(property, fnString) {\n\t\t\tif (this.subKernelProperties === null) {\n\t\t\t\tthis.subKernelProperties = {};\n\t\t\t\tthis.subKernelNames = [];\n\t\t\t}\n\t\t\tif (this.subKernelProperties.hasOwnProperty(property)) {\n\t\t\t\tthrow new Error('cannot add sub kernel ' + property + ', already defined');\n\t\t\t}\n\t\t\tthis.subKernelProperties[property] = fnString;\n\t\t\tthis.subKernelNames.push(utils.getFunctionNameFromString(fnString));\n\t\t\treturn this;\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(name, source) {\n\t\t\tthis.functionBuilder.addNativeFunction(name, source);\n\t\t}\n\n\t\t/**\n   *\n   * Destroys all memory associated with this kernel\n   *\n   * @name destroy\n   * @function\n   * @memberOf KernelBase#\n   *\n   * * @param {Boolean} removeCanvasReferences remve any associated canvas references?\n   *\n   */\n\n\t}, {\n\t\tkey: 'destroy',\n\t\tvalue: function destroy() {}\n\t}]);\n\n\treturn KernelBase;\n}();","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Buffer = require('safe-buffer').Buffer;\nvar util = require('util');\n\nfunction copyBuffer(src, target, offset) {\n  src.copy(target, offset);\n}\n\nmodule.exports = function () {\n  function BufferList() {\n    _classCallCheck(this, BufferList);\n\n    this.head = null;\n    this.tail = null;\n    this.length = 0;\n  }\n\n  BufferList.prototype.push = function push(v) {\n    var entry = { data: v, next: null };\n    if (this.length > 0) this.tail.next = entry;else this.head = entry;\n    this.tail = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.unshift = function unshift(v) {\n    var entry = { data: v, next: this.head };\n    if (this.length === 0) this.tail = entry;\n    this.head = entry;\n    ++this.length;\n  };\n\n  BufferList.prototype.shift = function shift() {\n    if (this.length === 0) return;\n    var ret = this.head.data;\n    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;\n    --this.length;\n    return ret;\n  };\n\n  BufferList.prototype.clear = function clear() {\n    this.head = this.tail = null;\n    this.length = 0;\n  };\n\n  BufferList.prototype.join = function join(s) {\n    if (this.length === 0) return '';\n    var p = this.head;\n    var ret = '' + p.data;\n    while (p = p.next) {\n      ret += s + p.data;\n    }return ret;\n  };\n\n  BufferList.prototype.concat = function concat(n) {\n    if (this.length === 0) return Buffer.alloc(0);\n    if (this.length === 1) return this.head.data;\n    var ret = Buffer.allocUnsafe(n >>> 0);\n    var p = this.head;\n    var i = 0;\n    while (p) {\n      copyBuffer(p.data, ret, i);\n      i += p.data.length;\n      p = p.next;\n    }\n    return ret;\n  };\n\n  return BufferList;\n}();\n\nif (util && util.inspect && util.inspect.custom) {\n  module.exports.prototype[util.inspect.custom] = function () {\n    var obj = util.inspect({ length: this.length });\n    return this.constructor.name + ' ' + obj;\n  };\n}","\"use strict\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function Input(value, size) {\n\t_classCallCheck(this, Input);\n\n\tthis.value = value;\n\tif (Array.isArray(size)) {\n\t\tthis.size = [];\n\t\tfor (var i = 0; i < size.length; i++) {\n\t\t\tthis.size[i] = size[i];\n\t\t}\n\t\twhile (this.size.length < 3) {\n\t\t\tthis.size.push(1);\n\t\t}\n\t} else {\n\t\tif (size.z) {\n\t\t\tthis.size = [size.x, size.y, size.z];\n\t\t} else if (size.y) {\n\t\t\tthis.size = [size.x, size.y, 1];\n\t\t} else {\n\t\t\tthis.size = [size.x, 1, 1];\n\t\t}\n\t}\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionNodeBase = require('../function-node-base');\nvar utils = require('../../core/utils');\n// Closure capture for the ast function, prevent collision with existing AST functions\n// The prefixes to use\nvar jsMathPrefix = 'Math.';\nvar localPrefix = 'this.';\nvar constantsPrefix = 'this.constants.';\n\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n// these debugs were hugely usefull...\n// TODO: optimise out - webpack/babel options? maybe some generic logging support in core/utils?\n// const debugLog = console.log\nvar debugLog = function debugLog() {};\n/**\n * @class WebGLFunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends FunctionNodeBase\n *\n * @param {functionNode} inNode - The function node object\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_FunctionNodeBase) {\n\t_inherits(WebGLFunctionNode, _FunctionNodeBase);\n\n\tfunction WebGLFunctionNode() {\n\t\t_classCallCheck(this, WebGLFunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLFunctionNode.__proto__ || Object.getPrototypeOf(WebGLFunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLFunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tdebugLog(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tthis.builder.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   * @static\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tvar returnType = this.returnType;\n\t\t\tvar type = typeMap[returnType];\n\t\t\tif (!type) {\n\t\t\t\tthrow new Error('unknown type ' + returnType);\n\t\t\t}\n\t\t\tretArr.push(type);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\n\t\t\t\tretArr.push(this.paramTypes[i]);\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('void');\n\t\t\t} else {\n\t\t\t\tvar returnType = this.returnType;\n\t\t\t\tvar type = typeMap[returnType];\n\t\t\t\tif (!type) {\n\t\t\t\t\tthrow new Error('unknown type ' + returnType);\n\t\t\t\t}\n\t\t\t\tretArr.push(type);\n\t\t\t}\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tvar paramType = this.getParamType(paramName);\n\t\t\t\t\tvar _type = typeMap[paramType];\n\t\t\t\t\tif (!_type) {\n\t\t\t\t\t\tthrow new Error('unknown type ' + paramType);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(_type);\n\t\t\t\t\tretArr.push(' ');\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Function opening\n\t\t\tretArr.push(') {\\n');\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\t// Function closing\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return;');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\t// Push the literal value as a float/int\n\t\t\tretArr.push(ast.value);\n\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\t// If it was an int, node made a float if necessary\n\t\t\tif (Number.isInteger(ast.value)) {\n\t\t\t\tif (!inGetParams) {\n\t\t\t\t\tretArr.push('.0');\n\t\t\t\t}\n\t\t\t} else if (inGetParams) {\n\t\t\t\t// or cast to an int as we are addressing an input array\n\t\t\t\tretArr.pop();\n\t\t\t\tretArr.push('int(');\n\t\t\t\tretArr.push(ast.value);\n\t\t\t\tretArr.push(')');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tvar inGetParams = this.isState('in-get-call-parameters');\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\t\t\t\tretArr.push('int');\n\t\t\t}\n\t\t\tretArr.push('(');\n\n\t\t\tif (ast.operator === '%') {\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else if (ast.operator === '===') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('==');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (ast.operator === '!==') {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push('!=');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t} else if (this.fixIntegerDivisionAccuracy && ast.operator === '/') {\n\t\t\t\tretArr.push('div_with_int_check(');\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(', ');\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\t\tretArr.push(ast.operator);\n\t\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\t}\n\n\t\t\tretArr.push(')');\n\n\t\t\tif (inGetParams) {\n\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\t// https://stackoverflow.com/a/47543127/1324039\n\t\t\t\t\tretArr.push('3.402823466e+38');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statment', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif (forNode.test.right.type === 'Identifier' && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('\\n} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tdebugLog(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('float ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (float ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statment', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (float i = 0.0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tif (assNode.operator === '%=') {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push('=');\n\t\t\t\tretArr.push('mod(');\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(',');\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\tretArr.push(')');\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\t\tretArr.push(assNode.operator);\n\t\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\t\treturn retArr;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tvar declaration = vardecNode.declarations[i];\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tvar retDeclaration = [];\n\t\t\t\tthis.astGeneric(declaration, retDeclaration);\n\t\t\t\tvar declarationType = 'Number';\n\t\t\t\tif (i === 0) {\n\t\t\t\t\tvar init = declaration.init;\n\t\t\t\t\tif (init) {\n\t\t\t\t\t\tif (init.object) {\n\t\t\t\t\t\t\tif (init.object.type === 'MemberExpression' && init.object.object) {\n\t\t\t\t\t\t\t\t// this.thread.x, this.thread.y, this.thread.z\n\t\t\t\t\t\t\t\tif (init.object.object.type === 'ThisExpression' && init.object.property && (init.object.property.name === 'thread' || init.object.property.name === 'output')) {\n\t\t\t\t\t\t\t\t\tdeclarationType = 'Integer';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// param[]\n\t\t\t\t\t\t\t\telse if (init.object.object.type === 'Identifier') {\n\t\t\t\t\t\t\t\t\t\tvar _type2 = this.getParamType(init.object.object.name);\n\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type2];\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// param[][]\n\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.type === 'Identifier') {\n\t\t\t\t\t\t\t\t\t\t\tvar _type3 = this.getParamType(init.object.object.object.name);\n\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type3];\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// this.constants.param[]\n\t\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.object && init.object.object.object.object.type === 'ThisExpression' && init.object.object.object.property.name === 'constants') {\n\t\t\t\t\t\t\t\t\t\t\t\tvar _type4 = this.getConstantType(init.object.object.property.name);\n\t\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type4];\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t// this.constants.param[][]\n\t\t\t\t\t\t\t\t\t\t\telse if (init.object.object.object && init.object.object.object.object && init.object.object.object.object.object && init.object.object.object.object.object.type === 'ThisExpression' && init.object.object.object.object.property.name === 'constants') {\n\t\t\t\t\t\t\t\t\t\t\t\t\tvar _type5 = this.getConstantType(init.object.object.object.property.name);\n\t\t\t\t\t\t\t\t\t\t\t\t\tdeclarationType = typeLookupMap[_type5];\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif (!declarationType) {\n\t\t\t\t\t\t\t\tthrow new Error('unknown lookup type ' + typeLookupMap);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (init.name && this.declarations[init.name]) {\n\t\t\t\t\t\t\t\tdeclarationType = this.declarations[init.name];\n\t\t\t\t\t\t\t} else if (init.type === 'ArrayExpression') {\n\t\t\t\t\t\t\t\tdeclarationType = 'Array(' + init.elements.length + ')';\n\t\t\t\t\t\t\t} else if (init.type === 'CallExpression') {\n\t\t\t\t\t\t\t\tvar node = this.builder.nodeMap[init.callee.name];\n\t\t\t\t\t\t\t\tif (node && node.returnType) {\n\t\t\t\t\t\t\t\t\tdeclarationType = node.returnType;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tvar type = typeMap[declarationType];\n\t\t\t\t\tif (!type) {\n\t\t\t\t\t\tthrow new Error('type ' + declarationType + ' not handled');\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(type + ' ');\n\t\t\t\t}\n\t\t\t\tthis.declarations[declaration.id.name] = declarationType;\n\t\t\t\tretArr.push.apply(retArr, retDeclaration);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tdebugLog(\"[in] astMemberExpression \" + mNode.object.type);\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' &&\n\t\t\t\t// mNode.object.object &&\n\t\t\t\tmNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\t// Working logger\n\t\t\t\t\tvar reqName = mNode.object.name;\n\t\t\t\t\tvar funcName = this.functionName || 'kernel';\n\t\t\t\t\tvar assumeNotTexture = false;\n\n\t\t\t\t\t// Possibly an array request - handle it as such\n\t\t\t\t\tif (this.paramNames) {\n\t\t\t\t\t\tvar idx = this.paramNames.indexOf(reqName);\n\t\t\t\t\t\tif (idx >= 0 && this.paramTypes[idx] === 'Number') {\n\t\t\t\t\t\t\tassumeNotTexture = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\tdebugLog(\"- astMemberExpression \" + reqName + \" \" + funcName);\n\t\t\t\t\tif (assumeNotTexture) {\n\t\t\t\t\t\t// Get from array\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tretArr.push('[int(');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(')]');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar isInGetParams = this.isState('in-get-call-parameters');\n\t\t\t\t\t\tvar multiMemberExpression = this.isState('multi-member-expression');\n\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tthis.pushState('not-in-get-call-parameters');\n\n\t\t\t\t\t\t// This normally refers to the global read only input vars\n\t\t\t\t\t\tvar variableType = null;\n\t\t\t\t\t\tif (mNode.object.name) {\n\t\t\t\t\t\t\tif (this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\t\tvariableType = this.declarations[mNode.object.name];\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tvariableType = this.getParamType(mNode.object.name);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (mNode.object && mNode.object.object && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression') {\n\t\t\t\t\t\t\tvariableType = this.getConstantType(mNode.object.property.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tswitch (variableType) {\n\t\t\t\t\t\t\tcase 'Array(2)':\n\t\t\t\t\t\t\tcase 'Array(3)':\n\t\t\t\t\t\t\tcase 'Array(4)':\n\t\t\t\t\t\t\t\t// Get from local vec4\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('[');\n\t\t\t\t\t\t\t\tretArr.push(mNode.property.raw);\n\t\t\t\t\t\t\t\tretArr.push(']');\n\t\t\t\t\t\t\t\tif (multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'HTMLImageArray':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage3D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 'ArrayTexture(4)':\n\t\t\t\t\t\t\tcase 'HTMLImage':\n\t\t\t\t\t\t\t\t// Get from image\n\t\t\t\t\t\t\t\tretArr.push('getImage2D(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t// Get from texture\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push('int(');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push('get(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push(', ivec2(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Size[1]), ivec3(');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[0],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[1],');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('Dim[2]');\n\t\t\t\t\t\t\t\tretArr.push('), ');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\t\tretArr.push('BitRatio');\n\t\t\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t\t\t\tthis.popState('not-in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.pushState('in-get-call-parameters');\n\t\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\t\tif (!multiMemberExpression) {\n\t\t\t\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\tif (isInGetParams) {\n\t\t\t\t\t\t\t\t\tretArr.push(')');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\n\t\t\t\t\tdebugLog(\"- astMemberExpression obj:\", mNode.object);\n\t\t\t\t\tvar stateStackDepth = this.states.length;\n\t\t\t\t\tvar startedInGetParamsState = this.isState('in-get-call-parameters');\n\t\t\t\t\tif (!startedInGetParamsState) {\n\t\t\t\t\t\tthis.pushState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tif (this.isState('multi-member-expression')) {\n\t\t\t\t\t\tthis.popState('multi-member-expression');\n\t\t\t\t\t}\n\t\t\t\t\tvar changedGetParamsState = !startedInGetParamsState && this.isState('in-get-call-parameters');\n\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t\tdebugLog(\"- astMemberExpression prop:\", mNode.property);\n\t\t\t\t\tvar shouldPopParamState = this.isState('should-pop-in-get-call-parameters');\n\t\t\t\t\tif (shouldPopParamState) {\n\t\t\t\t\t\t// go back to in-get-call-parameters state\n\t\t\t\t\t\tthis.popState('should-pop-in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\tretArr.push(last);\n\n\t\t\t\t\tif (changedGetParamsState) {\n\t\t\t\t\t\t// calling memberExpression should pop...\n\t\t\t\t\t\tthis.pushState('should-pop-in-get-call-parameters');\n\t\t\t\t\t} else if (shouldPopParamState) {\n\t\t\t\t\t\t// do the popping!\n\t\t\t\t\t\tthis.popState('in-get-call-parameters');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\n\t\t\t\t// Unroll the member expression\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tvar unrolled_lc = unrolled.toLowerCase();\n\t\t\t\tdebugLog(\"- astMemberExpression unrolled:\", unrolled);\n\t\t\t\t// Its a constant, remove this.constants.\n\t\t\t\tif (unrolled.indexOf(constantsPrefix) === 0) {\n\t\t\t\t\tunrolled = 'constants_' + unrolled.slice(constantsPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// do we need to cast addressing vales to float?\n\t\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\t\tswitch (unrolled_lc) {\n\t\t\t\t\tcase 'this.thread.x':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.y':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.thread.z':\n\t\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2] + '.0');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\t\t\t}\n\t\t\tdebugLog(\"[out] astMemberExpression \" + mNode.object.type);\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Its a math operator, remove the prefix\n\t\t\t\tif (funcName.indexOf(jsMathPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(jsMathPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// Its a local function, remove this\n\t\t\t\tif (funcName.indexOf(localPrefix) === 0) {\n\t\t\t\t\tfuncName = funcName.slice(localPrefix.length);\n\t\t\t\t}\n\n\t\t\t\t// if this if grows to more than one, lets use a switch\n\t\t\t\tif (funcName === 'atan2') {\n\t\t\t\t\tfuncName = 'atan';\n\t\t\t\t}\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex] || 'Number'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('vec' + arrLen + '(');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(')');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\n\t\t/**\n   * @memberOf WebGLFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted webgl shader function equivalent of the JS function\n   *\n   * @returns {String} webgl function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\t}, {\n\t\tkey: 'build',\n\t\tvalue: function build() {\n\t\t\treturn this.getFunctionPrototypeString().length > 0;\n\t\t}\n\t}]);\n\n\treturn WebGLFunctionNode;\n}(FunctionNodeBase);\n\nvar typeMap = {\n\t'Array': 'sampler2D',\n\t'Array(2)': 'vec2',\n\t'Array(3)': 'vec3',\n\t'Array(4)': 'vec4',\n\t'Array2D': 'sampler2D',\n\t'Array3D': 'sampler2D',\n\t'Float': 'float',\n\t'Input': 'sampler2D',\n\t'Integer': 'float',\n\t'Number': 'float',\n\t'NumberTexture': 'sampler2D',\n\t'ArrayTexture(4)': 'sampler2D'\n};\n\nvar typeLookupMap = {\n\t'Array': 'Number',\n\t'Array2D': 'Number',\n\t'Array3D': 'Number',\n\t'HTMLImage': 'Array(4)',\n\t'HTMLImageArray': 'Array(4)',\n\t'NumberTexture': 'Number',\n\t'ArrayTexture(4)': 'Array(4)'\n};\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following:\n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar utils = require('../core/utils');\nvar kernelRunShortcut = require('./kernel-run-shortcut');\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor BaseRunner\n  *\n  * @desc Represents the 'private/protected' namespace of the GPU class\n  *\n  * <p>I know @private makes more sense, but since the documentation engine state is undetirmined.\n  * (See https://github.com/gpujs/gpu.js/issues/19 regarding documentation engine issue)\n  * File isolation is currently the best way to go. </p>\n  *\n  * *base.js* internal functions namespace <br>\n  * *gpu.js* PUBLIC function namespace <br>\n  *\n  * @prop {Object} settings - Settings object used to set Dimensions, etc.\n  * @prop {String} kernel - Current kernel instance\n  * @prop {Object} canvas - Canvas instance attached to the kernel\n  * @prop {Object} webGl - WebGl instance attached to the kernel\n  * @prop {Function} fn - Kernel function to run\n  * @prop {Object} functionBuilder - FunctionBuilder instance\n  * @prop {String} fnString - Kernel function (as a String)\n  * @prop {String} endianness - endian information like Little-endian, Big-endian.\n  *\n  */\n\n\tfunction BaseRunner(functionBuilder, settings) {\n\t\t_classCallCheck(this, BaseRunner);\n\n\t\tsettings = settings || {};\n\t\tthis.kernel = settings.kernel;\n\t\tthis.canvas = settings.canvas;\n\t\tthis.webGl = settings.webGl;\n\t\tthis.fn = null;\n\t\tthis.functionBuilder = functionBuilder;\n\t\tthis.fnString = null;\n\t\tthis.endianness = utils.systemEndianness();\n\t}\n\n\t/**\n  * @memberOf BaseRunner#\n  * @function\n  * @name textureToArray\n  *\n  * @desc Converts the provided Texture instance to a JavaScript Array\n  *\n  * @param {Object} texture - Texture Object\n  *\n  */\n\n\n\t_createClass(BaseRunner, [{\n\t\tkey: 'textureToArray',\n\t\tvalue: function textureToArray(texture) {\n\t\t\tvar copy = this.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t});\n\n\t\t\treturn copy(texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name deleteTexture\n   *\n   * @desc Deletes the provided Texture instance\n   *\n   * @param {Object} texture - Texture Object\n   */\n\n\t}, {\n\t\tkey: 'deleteTexture',\n\t\tvalue: function deleteTexture(texture) {\n\t\t\tthis.webGl.deleteTexture(texture.texture);\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   * @name buildPromiseKernel\n   *\n   * @desc Get and returns the ASYNCHRONOUS executor, of a class and kernel\n   * This returns a Promise object from an argument set.\n   *\n   * Note that there is no current implementation.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildPromiseKernel',\n\t\tvalue: function buildPromiseKernel() {\n\t\t\tthrow new Error('not yet implemented');\n\t\t}\n\t}, {\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\tthrow new Error('\"mode\" not implemented on BaseRunner');\n\t\t}\n\n\t\t/**\n   * @memberOf BaseRunner#\n   * @function\n   *\n   * @name buildKernel\n   *\n   * @desc Get and returns the Synchronous executor, of a class and kernel\n   * Which returns the result directly after passing the arguments.\n   *\n   */\n\n\t}, {\n\t\tkey: 'buildKernel',\n\t\tvalue: function buildKernel(fn, settings) {\n\t\t\tsettings = Object.assign({}, settings || {});\n\t\t\tvar fnString = fn.toString();\n\t\t\tif (!settings.functionBuilder) {\n\t\t\t\tsettings.functionBuilder = this.functionBuilder;\n\t\t\t}\n\n\t\t\tif (!settings.canvas) {\n\t\t\t\tsettings.canvas = this.canvas;\n\t\t\t}\n\n\t\t\tif (!settings.webGl) {\n\t\t\t\tsettings.webGl = this.webgl;\n\t\t\t}\n\n\t\t\treturn kernelRunShortcut(new this.Kernel(fnString, settings));\n\t\t}\n\t}]);\n\n\treturn BaseRunner;\n}();","\"use strict\";\n\nmodule.exports = \"#version 300 es\\n__HEADER__;\\nprecision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nconst float LOOP_MAX = __LOOP_MAX__;\\n\\n__CONSTANTS__;\\n\\nin vec2 vTexCoord;\\n\\nvec2 integerMod(vec2 x, float y) {\\n  vec2 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec3 integerMod(vec3 x, float y) {\\n  vec3 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nvec4 integerMod(vec4 x, vec4 y) {\\n  vec4 res = floor(mod(x, y));\\n  return res * step(1.0 - floor(y), -res);\\n}\\n\\nfloat integerMod(float x, float y) {\\n  float res = floor(mod(x, y));\\n  return res * (res > floor(y) - 1.0 ? 0.0 : 1.0);\\n}\\n\\nint integerMod(int x, int y) {\\n  return x - (y * int(x/y));\\n}\\n\\n__DIVIDE_WITH_INTEGER_CHECK__;\\n\\n// Here be dragons!\\n// DO NOT OPTIMIZE THIS CODE\\n// YOU WILL BREAK SOMETHING ON SOMEBODY'S MACHINE\\n// LEAVE IT AS IT IS, LEST YOU WASTE YOUR OWN TIME\\nconst vec2 MAGIC_VEC = vec2(1.0, -256.0);\\nconst vec4 SCALE_FACTOR = vec4(1.0, 256.0, 65536.0, 0.0);\\nconst vec4 SCALE_FACTOR_INV = vec4(1.0, 0.00390625, 0.0000152587890625, 0.0); // 1, 1/256, 1/65536\\nfloat decode32(vec4 rgba) {\\n  __DECODE32_ENDIANNESS__;\\n  rgba *= 255.0;\\n  vec2 gte128;\\n  gte128.x = rgba.b >= 128.0 ? 1.0 : 0.0;\\n  gte128.y = rgba.a >= 128.0 ? 1.0 : 0.0;\\n  float exponent = 2.0 * rgba.a - 127.0 + dot(gte128, MAGIC_VEC);\\n  float res = exp2(round(exponent));\\n  rgba.b = rgba.b - 128.0 * gte128.x;\\n  res = dot(rgba, SCALE_FACTOR) * exp2(round(exponent-23.0)) + res;\\n  res *= gte128.y * -2.0 + 1.0;\\n  return res;\\n}\\n\\nvec4 encode32(float f) {\\n  float F = abs(f);\\n  float sign = f < 0.0 ? 1.0 : 0.0;\\n  float exponent = floor(log2(F));\\n  float mantissa = (exp2(-exponent) * F);\\n  // exponent += floor(log2(mantissa));\\n  vec4 rgba = vec4(F * exp2(23.0-exponent)) * SCALE_FACTOR_INV;\\n  rgba.rg = integerMod(rgba.rg, 256.0);\\n  rgba.b = integerMod(rgba.b, 128.0);\\n  rgba.a = exponent*0.5 + 63.5;\\n  rgba.ba += vec2(integerMod(exponent+127.0, 2.0), sign) * 128.0;\\n  rgba = floor(rgba);\\n  rgba *= 0.003921569; // 1/255\\n  __ENCODE32_ENDIANNESS__;\\n  return rgba;\\n}\\n// Dragons end here\\n\\nfloat decode(vec4 rgba, int x, int bitRatio) {\\n  if (bitRatio == 1) {\\n    return decode32(rgba);\\n  }\\n  __DECODE32_ENDIANNESS__;\\n  int channel = integerMod(x, bitRatio);\\n  if (bitRatio == 4) {\\n    return rgba[channel] * 255.0;\\n  }\\n  else {\\n    return rgba[channel*2] * 255.0 + rgba[channel*2 + 1] * 65280.0;\\n  }\\n}\\n\\nint index;\\nivec3 threadId;\\n\\nivec3 indexTo3D(int idx, ivec3 texDim) {\\n  int z = int(idx / (texDim.x * texDim.y));\\n  idx -= z * int(texDim.x * texDim.y);\\n  int y = int(idx / texDim.x);\\n  int x = int(integerMod(idx, texDim.x));\\n  return ivec3(x, y, z);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio,  int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  vec4 texel = texture(tex, st / vec2(texSize));\\n  __GET_RESULT__;\\n  \\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, st / vec2(texSize));\\n}\\n\\nvec4 getImage3D(sampler2DArray tex, ivec2 texSize, ivec3 texDim, int z, int y, int x) {\\n  ivec3 xyz = ivec3(x, y, z);\\n  __GET_WRAPAROUND__;\\n  int index = xyz.x + texDim.x * (xyz.y + texDim.y * xyz.z);\\n  __GET_TEXTURE_CHANNEL__;\\n  int w = texSize.x;\\n  vec2 st = vec2(float(integerMod(index, w)), float(index / w)) + 0.5;\\n  __GET_TEXTURE_INDEX__;\\n  return texture(tex, vec3(st / vec2(texSize), z));\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int y, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, y, x);\\n}\\n\\nfloat get(sampler2D tex, ivec2 texSize, ivec3 texDim, int bitRatio, int x) {\\n  return get(tex, texSize, texDim, bitRatio, 0, 0, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int y, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, y, x);\\n}\\n\\nvec4 getImage2D(sampler2D tex, ivec2 texSize, ivec3 texDim, int x) {\\n  return getImage2D(tex, texSize, texDim, 0, 0, x);\\n}\\n\\nvec4 actualColor;\\nvoid color(float r, float g, float b, float a) {\\n  actualColor = vec4(r,g,b,a);\\n}\\n\\nvoid color(float r, float g, float b) {\\n  color(r,g,b,1.0);\\n}\\n\\n__MAIN_PARAMS__;\\n__MAIN_CONSTANTS__;\\n__KERNEL__;\\n\\nvoid main(void) {\\n  index = int(vTexCoord.s * float(uTexSize.x)) + int(vTexCoord.t * float(uTexSize.y)) * uTexSize.x;\\n  __MAIN_RESULT__;\\n}\";","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _stream = require('stream');\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n *\n * @param opts\n * @returns {TrainStream}\n * @constructor\n */\nvar TrainStream = function (_Writable) {\n  _inherits(TrainStream, _Writable);\n\n  function TrainStream(options) {\n    _classCallCheck(this, TrainStream);\n\n    var _this = _possibleConstructorReturn(this, (TrainStream.__proto__ || Object.getPrototypeOf(TrainStream)).call(this, {\n      objectMode: true\n    }));\n\n    options = options || {};\n\n    // require the neuralNetwork\n    if (!options.neuralNetwork) {\n      throw new Error('no neural network specified');\n    }\n\n    var _options = options,\n        neuralNetwork = _options.neuralNetwork;\n\n    _this.neuralNetwork = neuralNetwork;\n    _this.dataFormatDetermined = false;\n    _this.i = 0; // keep track of internal iterations\n    _this.size = 0;\n    _this.count = 0;\n    _this.sum = 0;\n    _this.floodCallback = options.floodCallback;\n    _this.doneTrainingCallback = options.doneTrainingCallback;\n\n    // inherit trainOpts settings from neuralNetwork\n    neuralNetwork.updateTrainingOptions(options);\n    var trainOpts = neuralNetwork.trainOpts;\n\n    _this.iterations = trainOpts.iterations;\n    _this.errorThresh = trainOpts.errorThresh;\n    _this.log = trainOpts.log;\n    _this.logPeriod = trainOpts.logPeriod;\n    _this.callbackPeriod = trainOpts.callbackPeriod;\n    _this.callback = trainOpts.callback;\n\n    _this.on('finish', _this.finishStreamIteration.bind(_this));\n    return _this;\n  }\n\n  _createClass(TrainStream, [{\n    key: 'endInputs',\n    value: function endInputs() {\n      this.write(false);\n    }\n\n    /**\n     * _write expects data to be in the form of a datum. ie. {input: {a: 1 b: 0}, output: {z: 0}}\n     * @param chunk\n     * @param enc\n     * @param next\n     * @returns {*}\n     * @private\n     */\n\n  }, {\n    key: '_write',\n    value: function _write(chunk, enc, next) {\n      if (!chunk) {\n        // check for the end of one iteration of the stream\n        this.emit('finish');\n        return next();\n      }\n\n      if (!this.dataFormatDetermined) {\n        this.size++;\n        this.neuralNetwork.addFormat(chunk);\n        this.firstDatum = this.firstDatum || chunk;\n        return next();\n      }\n\n      this.count++;\n\n      var data = this.neuralNetwork.formatData(chunk);\n      this.sum += this.neuralNetwork.trainPattern(data[0], true);\n\n      // tell the Readable Stream that we are ready for more data\n      next();\n    }\n\n    /**\n     *\n     * @returns {*}\n     */\n\n  }, {\n    key: 'finishStreamIteration',\n    value: function finishStreamIteration() {\n      if (this.dataFormatDetermined && this.size !== this.count) {\n        this.log('This iteration\\'s data length was different from the first.');\n      }\n\n      if (!this.dataFormatDetermined) {\n        var data = this.neuralNetwork.formatData(this.firstDatum);\n        this.neuralNetwork.verifyIsInitialized(data);\n        this.dataFormatDetermined = true;\n\n        if (typeof this.floodCallback === 'function') {\n          this.floodCallback();\n        }\n        return;\n      }\n\n      var error = this.sum / this.size;\n\n      if (this.log && this.i % this.logPeriod === 0) {\n        this.log('iterations: ' + this.i + ', training error: ' + error);\n      }\n      if (this.callback && this.i % this.callbackPeriod === 0) {\n        this.callback({\n          error: error,\n          iterations: this.i\n        });\n      }\n\n      this.sum = 0;\n      this.count = 0;\n      // update the iterations\n      this.i++;\n\n      // do a check here to see if we need the stream again\n      if (this.i < this.iterations && error > this.errorThresh) {\n        if (typeof this.floodCallback === 'function') {\n          return this.floodCallback();\n        }\n      } else {\n        // done training\n        if (typeof this.doneTrainingCallback === 'function') {\n          return this.doneTrainingCallback({\n            error: error,\n            iterations: this.i\n          });\n        }\n      }\n    }\n  }]);\n\n  return TrainStream;\n}(_stream.Writable);\n\nexports.default = TrainStream;\n//# sourceMappingURL=train-stream.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGLValidatorKernel, _WebGLKernel);\n\n\tfunction WebGLValidatorKernel() {\n\t\t_classCallCheck(this, WebGLValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGLValidatorKernel.__proto__ || Object.getPrototypeOf(WebGLValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGLValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGLValidatorKernel;\n}(WebGLKernel);","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","var CrossValidate = require('./dist/cross-validate').default;\nvar likely = require('./dist/likely').default;\nvar lookup = require('./dist/lookup').default;\nvar NeuralNetwork = require('./dist/neural-network').default;\nvar NeuralNetworkGPU = require('./dist/neural-network-gpu').default;\nvar TrainStream = require('./dist/train-stream').default;\nvar RNNTimeStep = require('./dist/recurrent/rnn-time-step').default;\nvar LSTMTimeStep = require('./dist/recurrent/lstm-time-step').default;\nvar GRUTimeStep = require('./dist/recurrent/gru-time-step').default;\nvar RNN = require('./dist/recurrent/rnn').default;\nvar LSTM = require('./dist/recurrent/lstm').default;\nvar GRU = require('./dist/recurrent/gru').default;\nvar utilities = {\n  max: require('./dist/utilities/max').default,\n  mse: require('./dist/utilities/mse').default,\n  ones: require('./dist/utilities/ones').default,\n  random: require('./dist/utilities/random').default,\n  randomWeight: require('./dist/utilities/random-weight').default,\n  randos: require('./dist/utilities/randos').default,\n  range: require('./dist/utilities/range').default,\n  toArray: require('./dist/utilities/to-array').default,\n  DataFormatter: require('./dist/utilities/data-formatter').default,\n  zeros: require('./dist/utilities/zeros').default,\n  toSVG: require('./dist/utilities/to-svg').default\n};\n\nvar brain = {\n  CrossValidate: CrossValidate,\n  likely: likely,\n  lookup: lookup,\n  NeuralNetwork: NeuralNetwork,\n  NeuralNetworkGPU: NeuralNetworkGPU,\n  TrainStream: TrainStream,\n  recurrent: {\n    RNNTimeStep: RNNTimeStep,\n    LSTMTimeStep: LSTMTimeStep,\n    GRUTimeStep: GRUTimeStep,\n    RNN: RNN,\n    LSTM: LSTM,\n    GRU: GRU,\n  },\n  utilities: utilities\n};\n\nif (typeof window !== 'undefined') {\n  window.brain = brain;\n}\nif (typeof self !== 'undefined') {\n  self.brain = brain;\n}\nif (typeof module !== 'undefined') {\n  module.exports = brain;\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nvar _random = require('../../utilities/random');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/** return Matrix but filled with random numbers from gaussian\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @param std\n * @constructor\n */\nvar RandomMatrix = function (_Matrix) {\n  _inherits(RandomMatrix, _Matrix);\n\n  function RandomMatrix(rows, columns, std) {\n    _classCallCheck(this, RandomMatrix);\n\n    var _this = _possibleConstructorReturn(this, (RandomMatrix.__proto__ || Object.getPrototypeOf(RandomMatrix)).call(this, rows, columns));\n\n    _this.rows = rows;\n    _this.columns = columns;\n    _this.std = std;\n    for (var i = 0, max = _this.weights.length; i < max; i++) {\n      _this.weights[i] = (0, _random.randomF)(-std, std);\n    }\n    return _this;\n  }\n\n  return RandomMatrix;\n}(_2.default);\n\nexports.default = RandomMatrix;\n//# sourceMappingURL=random-matrix.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar utils = require('../../core/utils');\nvar RunnerBase = require('../runner-base');\nvar CPUKernel = require('./kernel');\nvar CPUFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(CPURunner, _RunnerBase);\n\n\t/**\n  * @constructor CPURunner\n  *\n  * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @extends RunnerBase\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\n\tfunction CPURunner(settings) {\n\t\t_classCallCheck(this, CPURunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPURunner.__proto__ || Object.getPrototypeOf(CPURunner)).call(this, new CPUFunctionBuilder(), settings));\n\n\t\t_this.Kernel = CPUKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf CPURunner#\n  * @function\n  * @name getMode()\n  *\n  * Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(CPURunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'cpu';\n\t\t}\n\t}]);\n\n\treturn CPURunner;\n}(RunnerBase);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a passthrough stream.\n// basically just the most minimal sort of Transform stream.\n// Every written chunk gets output as-is.\n\n'use strict';\n\nmodule.exports = PassThrough;\n\nvar Transform = require('./_stream_transform');\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nutil.inherits(PassThrough, Transform);\n\nfunction PassThrough(options) {\n  if (!(this instanceof PassThrough)) return new PassThrough(options);\n\n  Transform.call(this, options);\n}\n\nPassThrough.prototype._transform = function (chunk, encoding, cb) {\n  cb(null, chunk);\n};","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar WebGL2FunctionNode = require('./function-node');\n\n/**\n * @class WebGLFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds webGl functions (shaders) from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(WebGL2FunctionBuilder, _FunctionBuilderBase);\n\n  function WebGL2FunctionBuilder() {\n    _classCallCheck(this, WebGL2FunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (WebGL2FunctionBuilder.__proto__ || Object.getPrototypeOf(WebGL2FunctionBuilder)).call(this));\n\n    _this.Node = WebGL2FunctionNode;\n    return _this;\n  }\n\n  return WebGL2FunctionBuilder;\n}(FunctionBuilderBase);","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _gru = require('./gru');\n\nvar _gru2 = _interopRequireDefault(_gru);\n\nvar _rnnTimeStep = require('./rnn-time-step');\n\nvar _rnnTimeStep2 = _interopRequireDefault(_rnnTimeStep);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GRUTimeStep = function (_RNNTimeStep) {\n  _inherits(GRUTimeStep, _RNNTimeStep);\n\n  function GRUTimeStep() {\n    _classCallCheck(this, GRUTimeStep);\n\n    return _possibleConstructorReturn(this, (GRUTimeStep.__proto__ || Object.getPrototypeOf(GRUTimeStep)).apply(this, arguments));\n  }\n\n  _createClass(GRUTimeStep, [{\n    key: 'getModel',\n    value: function getModel(hiddenSize, prevSize) {\n      return _gru2.default.prototype.getModel(hiddenSize, prevSize);\n    }\n\n    /**\n     *\n     * @param {Equation} equation\n     * @param {Matrix} inputMatrix\n     * @param {Matrix} previousResult\n     * @param {Object} hiddenLayer\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'getEquation',\n    value: function getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return _gru2.default.prototype.getEquation(equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }]);\n\n  return GRUTimeStep;\n}(_rnnTimeStep2.default);\n\nexports.default = GRUTimeStep;\n//# sourceMappingURL=gru-time-step.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _zeros = require('../../utilities/zeros');\n\nvar _zeros2 = _interopRequireDefault(_zeros);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A matrix\n * @param {Number} [rows]\n * @param {Number} [columns]\n * @constructor\n */\nvar Matrix = function () {\n  function Matrix(rows, columns) {\n    _classCallCheck(this, Matrix);\n\n    if (rows === undefined) return;\n    if (columns === undefined) return;\n\n    this.rows = rows;\n    this.columns = columns;\n    this.weights = (0, _zeros2.default)(rows * columns);\n    this.deltas = (0, _zeros2.default)(rows * columns);\n  }\n\n  /**\n   *\n   * @param {Number} row\n   * @param {Number} col\n   * @returns {Float32Array|Array}\n   */\n\n\n  _createClass(Matrix, [{\n    key: 'getWeights',\n    value: function getWeights(row, col) {\n      // slow but careful accessor function\n      // we want row-major order\n      var ix = this.columns * row + col;\n      if (ix < 0 && ix >= this.weights.length) throw new Error('get accessor is skewed');\n      return this.weights[ix];\n    }\n\n    /**\n     *\n     * @param {Number} row\n     * @param {Number} col\n     * @param v\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'setWeight',\n    value: function setWeight(row, col, v) {\n      // slow but careful accessor function\n      var ix = this.columns * row + col;\n      if (ix < 0 && ix >= this.weights.length) throw new Error('set accessor is skewed');\n      this.weights[ix] = v;\n    }\n\n    /**\n     *\n     * @param {Number} row\n     * @param {Number} col\n     * @param v\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'setDeltas',\n    value: function setDeltas(row, col, v) {\n      // slow but careful accessor function\n      var ix = this.columns * row + col;\n      if (ix < 0 && ix >= this.weights.length) throw new Error('set accessor is skewed');\n      this.deltas[ix] = v;\n    }\n\n    /**\n     *\n     * @returns {{rows: *, columns: *, weights: Array}}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return {\n        rows: this.rows,\n        columns: this.columns,\n        weights: this.weights.slice(0)\n      };\n    }\n  }, {\n    key: 'weightsToArray',\n    value: function weightsToArray() {\n      var deltas = [];\n      var row = 0;\n      var column = 0;\n      for (var i = 0; i < this.weights.length; i++) {\n        if (column === 0) {\n          deltas.push([]);\n        }\n        deltas[row].push(this.weights[i]);\n        column++;\n        if (column >= this.columns) {\n          column = 0;\n          row++;\n        }\n      }\n      return deltas;\n    }\n  }, {\n    key: 'deltasToArray',\n    value: function deltasToArray() {\n      var deltas = [];\n      var row = 0;\n      var column = 0;\n      for (var i = 0; i < this.deltas.length; i++) {\n        if (column === 0) {\n          deltas.push([]);\n        }\n        deltas[row].push(this.deltas[i]);\n        column++;\n        if (column >= this.columns) {\n          column = 0;\n          row++;\n        }\n      }\n      return deltas;\n    }\n  }], [{\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var matrix = new Matrix(json.rows, json.columns);\n      for (var i = 0, max = json.rows * json.columns; i < max; i++) {\n        matrix.weights[i] = json.weights[i]; // copy over weights\n      }\n      return matrix;\n    }\n\n    /**\n     *\n     * @param weightRows\n     * @param [deltasRows]\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'fromArray',\n    value: function fromArray(weightRows, deltasRows) {\n      var rows = weightRows.length;\n      var columns = weightRows[0].length;\n      var m = new Matrix(rows, columns);\n\n      deltasRows = deltasRows || weightRows;\n\n      for (var rowIndex = 0; rowIndex < rows; rowIndex++) {\n        var weightValues = weightRows[rowIndex];\n        var deltasValues = deltasRows[rowIndex];\n        for (var columnIndex = 0; columnIndex < columns; columnIndex++) {\n          m.setWeight(rowIndex, columnIndex, weightValues[columnIndex]);\n          m.setDeltas(rowIndex, columnIndex, deltasValues[columnIndex]);\n        }\n      }\n\n      return m;\n    }\n  }]);\n\n  return Matrix;\n}();\n\nexports.default = Matrix;\n//# sourceMappingURL=index.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = relu;\n/**\n *\n * relu {m} weights to {into} weights\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction relu(product, left) {\n  for (var i = 0; i < left.weights.length; i++) {\n    product.weights[i] = Math.max(0, left.weights[i]); // relu\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=relu.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\n/*</replacement>*/\n\nvar isEncoding = Buffer.isEncoding || function (encoding) {\n  encoding = '' + encoding;\n  switch (encoding && encoding.toLowerCase()) {\n    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':\n      return true;\n    default:\n      return false;\n  }\n};\n\nfunction _normalizeEncoding(enc) {\n  if (!enc) return 'utf8';\n  var retried;\n  while (true) {\n    switch (enc) {\n      case 'utf8':\n      case 'utf-8':\n        return 'utf8';\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return 'utf16le';\n      case 'latin1':\n      case 'binary':\n        return 'latin1';\n      case 'base64':\n      case 'ascii':\n      case 'hex':\n        return enc;\n      default:\n        if (retried) return; // undefined\n        enc = ('' + enc).toLowerCase();\n        retried = true;\n    }\n  }\n};\n\n// Do not cache `Buffer.isEncoding` when checking encoding names as some\n// modules monkey-patch it to support additional encodings\nfunction normalizeEncoding(enc) {\n  var nenc = _normalizeEncoding(enc);\n  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);\n  return nenc || enc;\n}\n\n// StringDecoder provides an interface for efficiently splitting a series of\n// buffers into a series of JS strings without breaking apart multi-byte\n// characters.\nexports.StringDecoder = StringDecoder;\nfunction StringDecoder(encoding) {\n  this.encoding = normalizeEncoding(encoding);\n  var nb;\n  switch (this.encoding) {\n    case 'utf16le':\n      this.text = utf16Text;\n      this.end = utf16End;\n      nb = 4;\n      break;\n    case 'utf8':\n      this.fillLast = utf8FillLast;\n      nb = 4;\n      break;\n    case 'base64':\n      this.text = base64Text;\n      this.end = base64End;\n      nb = 3;\n      break;\n    default:\n      this.write = simpleWrite;\n      this.end = simpleEnd;\n      return;\n  }\n  this.lastNeed = 0;\n  this.lastTotal = 0;\n  this.lastChar = Buffer.allocUnsafe(nb);\n}\n\nStringDecoder.prototype.write = function (buf) {\n  if (buf.length === 0) return '';\n  var r;\n  var i;\n  if (this.lastNeed) {\n    r = this.fillLast(buf);\n    if (r === undefined) return '';\n    i = this.lastNeed;\n    this.lastNeed = 0;\n  } else {\n    i = 0;\n  }\n  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);\n  return r || '';\n};\n\nStringDecoder.prototype.end = utf8End;\n\n// Returns only complete characters in a Buffer\nStringDecoder.prototype.text = utf8Text;\n\n// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer\nStringDecoder.prototype.fillLast = function (buf) {\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);\n  this.lastNeed -= buf.length;\n};\n\n// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a\n// continuation byte. If an invalid byte is detected, -2 is returned.\nfunction utf8CheckByte(byte) {\n  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;\n  return byte >> 6 === 0x02 ? -1 : -2;\n}\n\n// Checks at most 3 bytes at the end of a Buffer in order to detect an\n// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)\n// needed to complete the UTF-8 character (if applicable) are returned.\nfunction utf8CheckIncomplete(self, buf, i) {\n  var j = buf.length - 1;\n  if (j < i) return 0;\n  var nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 1;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) self.lastNeed = nb - 2;\n    return nb;\n  }\n  if (--j < i || nb === -2) return 0;\n  nb = utf8CheckByte(buf[j]);\n  if (nb >= 0) {\n    if (nb > 0) {\n      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;\n    }\n    return nb;\n  }\n  return 0;\n}\n\n// Validates as many continuation bytes for a multi-byte UTF-8 character as\n// needed or are available. If we see a non-continuation byte where we expect\n// one, we \"replace\" the validated continuation bytes we've seen so far with\n// a single UTF-8 replacement character ('\\ufffd'), to match v8's UTF-8 decoding\n// behavior. The continuation byte check is included three times in the case\n// where all of the continuation bytes for a character exist in the same buffer.\n// It is also done this way as a slight performance increase instead of using a\n// loop.\nfunction utf8CheckExtraBytes(self, buf, p) {\n  if ((buf[0] & 0xC0) !== 0x80) {\n    self.lastNeed = 0;\n    return '\\ufffd';\n  }\n  if (self.lastNeed > 1 && buf.length > 1) {\n    if ((buf[1] & 0xC0) !== 0x80) {\n      self.lastNeed = 1;\n      return '\\ufffd';\n    }\n    if (self.lastNeed > 2 && buf.length > 2) {\n      if ((buf[2] & 0xC0) !== 0x80) {\n        self.lastNeed = 2;\n        return '\\ufffd';\n      }\n    }\n  }\n}\n\n// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.\nfunction utf8FillLast(buf) {\n  var p = this.lastTotal - this.lastNeed;\n  var r = utf8CheckExtraBytes(this, buf, p);\n  if (r !== undefined) return r;\n  if (this.lastNeed <= buf.length) {\n    buf.copy(this.lastChar, p, 0, this.lastNeed);\n    return this.lastChar.toString(this.encoding, 0, this.lastTotal);\n  }\n  buf.copy(this.lastChar, p, 0, buf.length);\n  this.lastNeed -= buf.length;\n}\n\n// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a\n// partial character, the character's bytes are buffered until the required\n// number of bytes are available.\nfunction utf8Text(buf, i) {\n  var total = utf8CheckIncomplete(this, buf, i);\n  if (!this.lastNeed) return buf.toString('utf8', i);\n  this.lastTotal = total;\n  var end = buf.length - (total - this.lastNeed);\n  buf.copy(this.lastChar, 0, end);\n  return buf.toString('utf8', i, end);\n}\n\n// For UTF-8, a replacement character is added when ending on a partial\n// character.\nfunction utf8End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + '\\ufffd';\n  return r;\n}\n\n// UTF-16LE typically needs two bytes per character, but even if we have an even\n// number of bytes available, we need to check if we end on a leading/high\n// surrogate. In that case, we need to wait for the next two bytes in order to\n// decode the last character properly.\nfunction utf16Text(buf, i) {\n  if ((buf.length - i) % 2 === 0) {\n    var r = buf.toString('utf16le', i);\n    if (r) {\n      var c = r.charCodeAt(r.length - 1);\n      if (c >= 0xD800 && c <= 0xDBFF) {\n        this.lastNeed = 2;\n        this.lastTotal = 4;\n        this.lastChar[0] = buf[buf.length - 2];\n        this.lastChar[1] = buf[buf.length - 1];\n        return r.slice(0, -1);\n      }\n    }\n    return r;\n  }\n  this.lastNeed = 1;\n  this.lastTotal = 2;\n  this.lastChar[0] = buf[buf.length - 1];\n  return buf.toString('utf16le', i, buf.length - 1);\n}\n\n// For UTF-16LE we do not explicitly append special replacement characters if we\n// end on a partial character, we simply let v8 handle that.\nfunction utf16End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) {\n    var end = this.lastTotal - this.lastNeed;\n    return r + this.lastChar.toString('utf16le', 0, end);\n  }\n  return r;\n}\n\nfunction base64Text(buf, i) {\n  var n = (buf.length - i) % 3;\n  if (n === 0) return buf.toString('base64', i);\n  this.lastNeed = 3 - n;\n  this.lastTotal = 3;\n  if (n === 1) {\n    this.lastChar[0] = buf[buf.length - 1];\n  } else {\n    this.lastChar[0] = buf[buf.length - 2];\n    this.lastChar[1] = buf[buf.length - 1];\n  }\n  return buf.toString('base64', i, buf.length - n);\n}\n\nfunction base64End(buf) {\n  var r = buf && buf.length ? this.write(buf) : '';\n  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);\n  return r;\n}\n\n// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)\nfunction simpleWrite(buf) {\n  return buf.toString(this.encoding);\n}\n\nfunction simpleEnd(buf) {\n  return buf && buf.length ? this.write(buf) : '';\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sampleI;\n\nvar _random = require('../../utilities/random');\n\n//prevent parser from renaming when calling toString() method later\nvar randomF = _random.randomF;\n/**\n *\n * @param {Matrix} m\n * @returns {number}\n */\nfunction sampleI(m) {\n  // sample argmax from w, assuming w are\n  // probabilities that sum to one\n  var r = randomF(0, 1);\n  var x = 0;\n  var i = 0;\n  var w = m.weights;\n\n  while (true) {\n    x += w[i];\n    if (x > r) {\n      return i;\n    }\n    i++;\n  }\n}\n//# sourceMappingURL=sample-i.js.map","/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _randomMatrix = require('./matrix/random-matrix');\n\nvar _randomMatrix2 = _interopRequireDefault(_randomMatrix);\n\nvar _equation = require('./matrix/equation');\n\nvar _equation2 = _interopRequireDefault(_equation);\n\nvar _sampleI = require('./matrix/sample-i');\n\nvar _sampleI2 = _interopRequireDefault(_sampleI);\n\nvar _maxI = require('./matrix/max-i');\n\nvar _maxI2 = _interopRequireDefault(_maxI);\n\nvar _softmax = require('./matrix/softmax');\n\nvar _softmax2 = _interopRequireDefault(_softmax);\n\nvar _copy = require('./matrix/copy');\n\nvar _copy2 = _interopRequireDefault(_copy);\n\nvar _random = require('../utilities/random');\n\nvar _zeros = require('../utilities/zeros');\n\nvar _zeros2 = _interopRequireDefault(_zeros);\n\nvar _dataFormatter = require('../utilities/data-formatter');\n\nvar _dataFormatter2 = _interopRequireDefault(_dataFormatter);\n\nvar _neuralNetwork = require('../neural-network');\n\nvar _neuralNetwork2 = _interopRequireDefault(_neuralNetwork);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar RNN = function () {\n  function RNN() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, RNN);\n\n    var defaults = this.constructor.defaults;\n\n    Object.assign(this, defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.stepCache = {};\n    this.runs = 0;\n    this.ratioClipped = null;\n    this.model = null;\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n\n    if (options.json) {\n      this.fromJSON(options.json);\n    }\n  }\n\n  _createClass(RNN, [{\n    key: 'initialize',\n    value: function initialize() {\n      this.model = {\n        input: null,\n        hiddenLayers: [],\n        output: null,\n        equations: [],\n        allMatrices: [],\n        equationConnections: [],\n        outputConnector: null\n      };\n\n      if (this.dataFormatter) {\n        this.inputSize = this.inputRange = this.outputSize = this.dataFormatter.characters.length;\n      }\n      this.mapModel();\n    }\n  }, {\n    key: 'createHiddenLayers',\n    value: function createHiddenLayers() {\n      //0 is end, so add 1 to offset\n      this.model.hiddenLayers.push(this.getModel(this.hiddenLayers[0], this.inputSize));\n      var prevSize = this.hiddenLayers[0];\n\n      for (var d = 1; d < this.hiddenLayers.length; d++) {\n        // loop over depths\n        var hiddenSize = this.hiddenLayers[d];\n        this.model.hiddenLayers.push(this.getModel(hiddenSize, prevSize));\n        prevSize = hiddenSize;\n      }\n    }\n\n    /**\n     *\n     * @param {Number} hiddenSize\n     * @param {Number} prevSize\n     * @returns {object}\n     */\n\n  }, {\n    key: 'getModel',\n    value: function getModel(hiddenSize, prevSize) {\n      return {\n        //wxh\n        weight: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //whh\n        transition: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bhh\n        bias: new _matrix2.default(hiddenSize, 1)\n      };\n    }\n\n    /**\n     *\n     * @param {Equation} equation\n     * @param {Matrix} inputMatrix\n     * @param {Matrix} previousResult\n     * @param {Object} hiddenLayer\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'getEquation',\n    value: function getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      var relu = equation.relu.bind(equation);\n      var add = equation.add.bind(equation);\n      var multiply = equation.multiply.bind(equation);\n\n      return relu(add(add(multiply(hiddenLayer.weight, inputMatrix), multiply(hiddenLayer.transition, previousResult)), hiddenLayer.bias));\n    }\n  }, {\n    key: 'createInputMatrix',\n    value: function createInputMatrix() {\n      //0 is end, so add 1 to offset\n      this.model.input = new _randomMatrix2.default(this.inputRange + 1, this.inputSize, 0.08);\n    }\n  }, {\n    key: 'createOutputMatrix',\n    value: function createOutputMatrix() {\n      var model = this.model;\n      var outputSize = this.outputSize;\n      var lastHiddenSize = this.hiddenLayers[this.hiddenLayers.length - 1];\n\n      //0 is end, so add 1 to offset\n      //whd\n      model.outputConnector = new _randomMatrix2.default(outputSize + 1, lastHiddenSize, 0.08);\n      //0 is end, so add 1 to offset\n      //bd\n      model.output = new _matrix2.default(outputSize + 1, 1);\n    }\n  }, {\n    key: 'bindEquation',\n    value: function bindEquation() {\n      var model = this.model;\n      var equation = new _equation2.default();\n      var outputs = [];\n      var equationConnection = model.equationConnections.length > 0 ? model.equationConnections[model.equationConnections.length - 1] : this.initialLayerInputs;\n\n      // 0 index\n      var output = this.getEquation(equation, equation.inputMatrixToRow(model.input), equationConnection[0], model.hiddenLayers[0]);\n      outputs.push(output);\n      // 1+ indices\n      for (var i = 1, max = this.hiddenLayers.length; i < max; i++) {\n        output = this.getEquation(equation, output, equationConnection[i], model.hiddenLayers[i]);\n        outputs.push(output);\n      }\n\n      model.equationConnections.push(outputs);\n      equation.add(equation.multiply(model.outputConnector, output), model.output);\n      model.equations.push(equation);\n    }\n  }, {\n    key: 'mapModel',\n    value: function mapModel() {\n      var model = this.model;\n      var hiddenLayers = model.hiddenLayers;\n      var allMatrices = model.allMatrices;\n      this.initialLayerInputs = this.hiddenLayers.map(function (size) {\n        return new _matrix2.default(size, 1);\n      });\n\n      this.createInputMatrix();\n      if (!model.input) throw new Error('net.model.input not set');\n      allMatrices.push(model.input);\n\n      this.createHiddenLayers();\n      if (!model.hiddenLayers.length) throw new Error('net.hiddenLayers not set');\n      for (var i = 0, max = hiddenLayers.length; i < max; i++) {\n        var hiddenMatrix = hiddenLayers[i];\n        for (var property in hiddenMatrix) {\n          if (!hiddenMatrix.hasOwnProperty(property)) continue;\n          allMatrices.push(hiddenMatrix[property]);\n        }\n      }\n\n      this.createOutputMatrix();\n      if (!model.outputConnector) throw new Error('net.model.outputConnector not set');\n      if (!model.output) throw new Error('net.model.output not set');\n\n      allMatrices.push(model.outputConnector);\n      allMatrices.push(model.output);\n    }\n\n    /**\n     *\n     * @param {Number[]|string[]|string} input\n     * @param {boolean} [logErrorRate]\n     * @returns {number}\n     */\n\n  }, {\n    key: 'trainPattern',\n    value: function trainPattern(input, logErrorRate) {\n      var error = this.trainInput(input);\n      this.backpropagate(input);\n      this.adjustWeights();\n\n      if (logErrorRate) {\n        return error;\n      }\n    }\n\n    /**\n     *\n     * @param {Number[]} input\n     * @returns {number}\n     */\n\n  }, {\n    key: 'trainInput',\n    value: function trainInput(input) {\n      this.runs++;\n      var model = this.model;\n      var max = input.length;\n      var log2ppl = 0;\n      var equation = void 0;\n      while (model.equations.length <= input.length + 1) {\n        //last is zero\n        this.bindEquation();\n      }\n      for (var inputIndex = -1, inputMax = input.length; inputIndex < inputMax; inputIndex++) {\n        // start and end tokens are zeros\n        var equationIndex = inputIndex + 1;\n        equation = model.equations[equationIndex];\n\n        var source = inputIndex === -1 ? 0 : input[inputIndex] + 1; // first step: start with START token\n        var target = inputIndex === max - 1 ? 0 : input[inputIndex + 1] + 1; // last step: end with END token\n        log2ppl += equation.predictTargetIndex(source, target);\n      }\n      return Math.pow(2, log2ppl / (max - 1)) / 100;\n    }\n\n    /**\n     * @param {Number[]} input\n     */\n\n  }, {\n    key: 'backpropagate',\n    value: function backpropagate(input) {\n      var i = input.length;\n      var model = this.model;\n      var equations = model.equations;\n      while (i > 0) {\n        equations[i].backpropagateIndex(input[i - 1] + 1);\n        i--;\n      }\n      equations[0].backpropagateIndex(0);\n    }\n  }, {\n    key: 'adjustWeights',\n    value: function adjustWeights() {\n      var regc = this.regc,\n          clipval = this.clipval,\n          model = this.model,\n          decayRate = this.decayRate,\n          stepCache = this.stepCache,\n          smoothEps = this.smoothEps,\n          trainOpts = this.trainOpts;\n      var learningRate = trainOpts.learningRate;\n      var allMatrices = model.allMatrices;\n\n      var numClipped = 0;\n      var numTot = 0;\n      for (var matrixIndex = 0; matrixIndex < allMatrices.length; matrixIndex++) {\n        var matrix = allMatrices[matrixIndex];\n        var weights = matrix.weights,\n            deltas = matrix.deltas;\n\n        if (!(matrixIndex in stepCache)) {\n          stepCache[matrixIndex] = (0, _zeros2.default)(matrix.rows * matrix.columns);\n        }\n        var cache = stepCache[matrixIndex];\n        for (var i = 0; i < weights.length; i++) {\n          var r = deltas[i];\n          var w = weights[i];\n          // rmsprop adaptive learning rate\n          cache[i] = cache[i] * decayRate + (1 - decayRate) * r * r;\n          // gradient clip\n          if (r > clipval) {\n            r = clipval;\n            numClipped++;\n          }\n          if (r < -clipval) {\n            r = -clipval;\n            numClipped++;\n          }\n          numTot++;\n          // update (and regularize)\n          weights[i] = w + -learningRate * r / Math.sqrt(cache[i] + smoothEps) - regc * w;\n        }\n      }\n      this.ratioClipped = numClipped / numTot;\n    }\n\n    /**\n     *\n     * @returns boolean\n     */\n\n  }, {\n    key: 'run',\n\n\n    /**\n     *\n     * @param {Number[]|*} [rawInput]\n     * @param {Boolean} [isSampleI]\n     * @param {Number} temperature\n     * @returns {*}\n     */\n    value: function run() {\n      var rawInput = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var isSampleI = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n      var temperature = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n\n      var maxPredictionLength = this.maxPredictionLength + rawInput.length + (this.dataFormatter ? this.dataFormatter.specialIndexes.length : 0);\n      if (!this.isRunnable) return null;\n      var input = this.formatDataIn(rawInput);\n      var model = this.model;\n      var output = [];\n      var i = 0;\n      while (true) {\n        var previousIndex = i === 0 ? 0 : i < input.length ? input[i - 1] + 1 : output[i - 1];\n        while (model.equations.length <= i) {\n          this.bindEquation();\n        }\n        var equation = model.equations[i];\n        // sample predicted letter\n        var outputMatrix = equation.runIndex(previousIndex);\n        var logProbabilities = new _matrix2.default(model.output.rows, model.output.columns);\n        (0, _copy2.default)(logProbabilities, outputMatrix);\n        if (temperature !== 1 && isSampleI) {\n          /**\n           * scale log probabilities by temperature and re-normalize\n           * if temperature is high, logProbabilities will go towards zero\n           * and the softmax outputs will be more diffuse. if temperature is\n           * very low, the softmax outputs will be more peaky\n           */\n          for (var j = 0, max = logProbabilities.weights.length; j < max; j++) {\n            logProbabilities.weights[j] /= temperature;\n          }\n        }\n\n        var probs = (0, _softmax2.default)(logProbabilities);\n        var nextIndex = isSampleI ? (0, _sampleI2.default)(probs) : (0, _maxI2.default)(probs);\n\n        i++;\n        if (nextIndex === 0) {\n          // END token predicted, break out\n          break;\n        }\n        if (i >= maxPredictionLength) {\n          // something is wrong\n          break;\n        }\n\n        output.push(nextIndex);\n      }\n\n      /**\n       * we slice the input length here, not because output contains it, but it will be erroneous as we are sending the\n       * network what is contained in input, so the data is essentially guessed by the network what could be next, till it\n       * locks in on a value.\n       * Kind of like this, values are from input:\n       * 0 -> 4 (or in English: \"beginning on input\" -> \"I have no idea? I'll guess what they want next!\")\n       * 2 -> 2 (oh how interesting, I've narrowed down values...)\n       * 1 -> 9 (oh how interesting, I've now know what the values are...)\n       * then the output looks like: [4, 2, 9,...]\n       * so we then remove the erroneous data to get our true output\n       */\n      return this.formatDataOut(input, output.slice(input.length).map(function (value) {\n        return value - 1;\n      }));\n    }\n\n    /**\n     *\n     * @param data\n     * Verifies network sizes are initilaized\n     * If they are not it will initialize them based off the data set.\n     */\n\n  }, {\n    key: 'verifyIsInitialized',\n    value: function verifyIsInitialized(data) {\n      if (!this.model) {\n        this.initialize();\n      }\n    }\n\n    /**\n     *\n     * @param options\n     *    Supports all `trainDefaults` properties\n     *    also supports:\n     *       learningRate: (number),\n     *       momentum: (number),\n     *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n     */\n\n  }, {\n    key: 'updateTrainingOptions',\n    value: function updateTrainingOptions(options) {\n      var _this = this;\n\n      Object.keys(this.constructor.trainDefaults).forEach(function (p) {\n        return _this.trainOpts[p] = options.hasOwnProperty(p) ? options[p] : _this.trainOpts[p];\n      });\n      this.validateTrainingOptions(this.trainOpts);\n      this.setLogMethod(options.log || this.trainOpts.log);\n      this.activation = options.activation || this.activation;\n    }\n  }, {\n    key: 'validateTrainingOptions',\n    value: function validateTrainingOptions(options) {\n      _neuralNetwork2.default.prototype.validateTrainingOptions.call(this, options);\n    }\n\n    /**\n     *\n     * @param log\n     * if a method is passed in method is used\n     * if false passed in nothing is logged\n     * @returns error\n     */\n\n  }, {\n    key: 'setLogMethod',\n    value: function setLogMethod(log) {\n      if (typeof log === 'function') {\n        this.trainOpts.log = log;\n      } else if (log) {\n        this.trainOpts.log = console.log;\n      } else {\n        this.trainOpts.log = false;\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @protected\n     * @return {object} { data, status, endTime }\n     */\n\n  }, {\n    key: 'prepTraining',\n    value: function prepTraining(data, options) {\n      this.updateTrainingOptions(options);\n      data = this.formatData(data);\n      var endTime = Date.now() + this.trainOpts.timeout;\n\n      var status = {\n        error: 1,\n        iterations: 0\n      };\n\n      this.verifyIsInitialized(data);\n\n      return {\n        data: data,\n        status: status,\n        endTime: endTime\n      };\n    }\n\n    /**\n     *\n     * @param {Object[]|String[]} data an array of objects: `{input: 'string', output: 'string'}` or an array of strings\n     * @param {Object} [options]\n     * @returns {{error: number, iterations: number}}\n     */\n\n  }, {\n    key: 'train',\n    value: function train(data) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      this.trainOpts = options = Object.assign({}, this.constructor.trainDefaults, options);\n      var iterations = options.iterations;\n      var errorThresh = options.errorThresh;\n      var log = options.log === true ? console.log : options.log;\n      var logPeriod = options.logPeriod;\n      var callback = options.callback;\n      var callbackPeriod = options.callbackPeriod;\n      var error = Infinity;\n      var i = void 0;\n\n      if (this.hasOwnProperty('setupData')) {\n        data = this.setupData(data);\n      }\n\n      this.verifyIsInitialized();\n\n      for (i = 0; i < iterations && error > errorThresh; i++) {\n        var sum = 0;\n        for (var j = 0; j < data.length; j++) {\n          var err = this.trainPattern(data[j], true);\n          sum += err;\n        }\n        error = sum / data.length;\n\n        if (isNaN(error)) throw new Error('network error rate is unexpected NaN, check network configurations and try again');\n        if (log && i % logPeriod === 0) {\n          log('iterations: ' + i + ', training error: ' + error);\n        }\n        if (callback && i % callbackPeriod === 0) {\n          callback({ error: error, iterations: i });\n        }\n      }\n\n      return {\n        error: error,\n        iterations: i\n      };\n    }\n  }, {\n    key: 'addFormat',\n    value: function addFormat() {\n      throw new Error('not yet implemented');\n    }\n\n    /**\n     *\n     * @returns {Object}\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var defaults = this.constructor.defaults;\n      if (!this.model) {\n        this.initialize();\n      }\n      var model = this.model;\n      var options = {};\n      for (var p in defaults) {\n        if (defaults.hasOwnProperty(p)) {\n          options[p] = this[p];\n        }\n      }\n\n      return {\n        type: this.constructor.name,\n        options: options,\n        input: model.input.toJSON(),\n        hiddenLayers: model.hiddenLayers.map(function (hiddenLayer) {\n          var layers = {};\n          for (var _p in hiddenLayer) {\n            layers[_p] = hiddenLayer[_p].toJSON();\n          }\n          return layers;\n        }),\n        outputConnector: this.model.outputConnector.toJSON(),\n        output: this.model.output.toJSON()\n      };\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      var defaults = this.constructor.defaults;\n      var options = json.options;\n      this.model = null;\n      this.hiddenLayers = null;\n      var allMatrices = [];\n      var input = _matrix2.default.fromJSON(json.input);\n      allMatrices.push(input);\n      var hiddenLayers = [];\n\n      // backward compatibility for hiddenSizes\n      (json.hiddenLayers || json.hiddenSizes).forEach(function (hiddenLayer) {\n        var layers = {};\n        for (var p in hiddenLayer) {\n          layers[p] = _matrix2.default.fromJSON(hiddenLayer[p]);\n          allMatrices.push(layers[p]);\n        }\n        hiddenLayers.push(layers);\n      });\n\n      var outputConnector = _matrix2.default.fromJSON(json.outputConnector);\n      allMatrices.push(outputConnector);\n      var output = _matrix2.default.fromJSON(json.output);\n      allMatrices.push(output);\n\n      Object.assign(this, defaults, options);\n\n      // backward compatibility\n      if (options.hiddenSizes) {\n        this.hiddenLayers = options.hiddenSizes;\n      }\n\n      if (options.dataFormatter) {\n        this.dataFormatter = _dataFormatter2.default.fromJSON(options.dataFormatter);\n      }\n\n      this.model = {\n        input: input,\n        hiddenLayers: hiddenLayers,\n        output: output,\n        allMatrices: allMatrices,\n        outputConnector: outputConnector,\n        equations: [],\n        equationConnections: []\n      };\n      this.initialLayerInputs = this.hiddenLayers.map(function (size) {\n        return new _matrix2.default(size, 1);\n      });\n      this.bindEquation();\n    }\n\n    /**\n     *\n     * @returns {Function}\n     */\n\n  }, {\n    key: 'toFunction',\n    value: function toFunction() {\n      var model = this.model;\n      var equations = this.model.equations;\n      var equation = equations[1];\n      var states = equation.states;\n      var jsonString = JSON.stringify(this.toJSON());\n\n      function matrixOrigin(m, stateIndex) {\n        for (var i = 0, max = states.length; i < max; i++) {\n          var state = states[i];\n\n          if (i === stateIndex) {\n            var j = previousConnectionIndex(m);\n            switch (m) {\n              case state.left:\n                if (j > -1) {\n                  return 'typeof prevStates[' + j + '] === \\'object\\' ? prevStates[' + j + '].product : new Matrix(' + m.rows + ', ' + m.columns + ')';\n                }\n              case state.right:\n                if (j > -1) {\n                  return 'typeof prevStates[' + j + '] === \\'object\\' ? prevStates[' + j + '].product : new Matrix(' + m.rows + ', ' + m.columns + ')';\n                }\n              case state.product:\n                return 'new Matrix(' + m.rows + ', ' + m.columns + ')';\n              default:\n                throw Error('unknown state');\n            }\n          }\n\n          if (m === state.product) return 'states[' + i + '].product';\n          if (m === state.right) return 'states[' + i + '].right';\n          if (m === state.left) return 'states[' + i + '].left';\n        }\n      }\n\n      function previousConnectionIndex(m) {\n        var connection = model.equationConnections[0];\n        var states = equations[0].states;\n        for (var i = 0, max = states.length; i < max; i++) {\n          if (states[i].product === m) {\n            return i;\n          }\n        }\n        return connection.indexOf(m);\n      }\n\n      function matrixToString(m, stateIndex) {\n        if (!m || !m.rows || !m.columns) return 'null';\n\n        if (m === model.input) return 'json.input';\n        if (m === model.outputConnector) return 'json.outputConnector';\n        if (m === model.output) return 'json.output';\n\n        for (var i = 0, max = model.hiddenLayers.length; i < max; i++) {\n          var hiddenLayer = model.hiddenLayers[i];\n          for (var p in hiddenLayer) {\n            if (!hiddenLayer.hasOwnProperty(p)) continue;\n            if (hiddenLayer[p] !== m) continue;\n            return 'json.hiddenLayers[' + i + '].' + p;\n          }\n        }\n\n        return matrixOrigin(m, stateIndex);\n      }\n\n      function toInner(fnString) {\n        // crude, but should be sufficient for now\n        // function() { body }\n        fnString = fnString.toString().split('{');\n        fnString.shift();\n        // body }\n        fnString = fnString.join('{');\n        fnString = fnString.split('}');\n        fnString.pop();\n        // body\n        return fnString.join('}').split('\\n').join('\\n        ').replace('product.deltas[i] = 0;', '').replace('product.deltas[column] = 0;', '').replace('left.deltas[leftIndex] = 0;', '').replace('right.deltas[rightIndex] = 0;', '').replace('product.deltas = left.deltas.slice(0);', '');\n      }\n\n      function fileName(fnName) {\n        return 'src/recurrent/matrix/' + fnName.replace(/[A-Z]/g, function (value) {\n          return '-' + value.toLowerCase();\n        }) + '.js';\n      }\n\n      var statesRaw = [];\n      var usedFunctionNames = {};\n      var innerFunctionsSwitch = [];\n      for (var i = 0, max = states.length; i < max; i++) {\n        var state = states[i];\n        statesRaw.push('states[' + i + '] = {\\n      name: \\'' + state.forwardFn.name + '\\',\\n      left: ' + matrixToString(state.left, i) + ',\\n      right: ' + matrixToString(state.right, i) + ',\\n      product: ' + matrixToString(state.product, i) + '\\n    }');\n\n        var fnName = state.forwardFn.name;\n        if (!usedFunctionNames[fnName]) {\n          usedFunctionNames[fnName] = true;\n          innerFunctionsSwitch.push('        case \\'' + fnName + '\\': //compiled from ' + fileName(fnName) + '\\n          ' + toInner(state.forwardFn.toString()) + '\\n          break;');\n        }\n      }\n\n      var src = '\\n  if (typeof rawInput === \\'undefined\\') rawInput = [];\\n  if (typeof isSampleI === \\'undefined\\') isSampleI = false;\\n  if (typeof temperature === \\'undefined\\') temperature = 1;\\n  ' + (this.dataFormatter ? this.dataFormatter.toFunctionString() : '') + '\\n  \\n  var input = ' + (this.dataFormatter && typeof this.formatDataIn === 'function' ? 'formatDataIn(rawInput)' : 'rawInput') + ';\\n  var json = ' + jsonString + ';\\n  var maxPredictionLength = input.length + ' + this.maxPredictionLength + ';\\n  var _i = 0;\\n  var output = [];\\n  var states = [];\\n  var prevStates;\\n  while (true) {\\n    var previousIndex = (_i === 0\\n        ? 0\\n        : _i < input.length\\n          ? input[_i - 1] + 1\\n          : output[_i - 1])\\n          ;\\n    var rowPluckIndex = previousIndex;\\n    var state;\\n    prevStates = states;\\n    states = [];\\n    ' + statesRaw.join(';\\n    ') + ';\\n    for (var stateIndex = 0, stateMax = ' + statesRaw.length + '; stateIndex < stateMax; stateIndex++) {\\n      state = states[stateIndex];\\n      var product = state.product;\\n      var left = state.left;\\n      var right = state.right;\\n      \\n      switch (state.name) {\\n' + innerFunctionsSwitch.join('\\n') + '\\n      }\\n    }\\n    \\n    var logProbabilities = state.product;\\n    if (temperature !== 1 && isSampleI) {\\n      for (var q = 0, nq = logProbabilities.weights.length; q < nq; q++) {\\n        logProbabilities.weights[q] /= temperature;\\n      }\\n    }\\n\\n    var probs = softmax(logProbabilities);\\n    var nextIndex = isSampleI ? sampleI(probs) : maxI(probs);\\n    \\n    _i++;\\n    if (nextIndex === 0) {\\n      break;\\n    }\\n    if (_i >= maxPredictionLength) {\\n      break;\\n    }\\n\\n    output.push(nextIndex);\\n  }\\n  ' + (this.dataFormatter && typeof this.formatDataOut === 'function' ? 'return formatDataOut(input, output.slice(input.length).map(function(value) { return value - 1; }))' : 'return output.slice(input.length).map(function(value) { return value - 1; })') + ';\\n  function Matrix(rows, columns) {\\n    this.rows = rows;\\n    this.columns = columns;\\n    this.weights = zeros(rows * columns);\\n  }\\n  ' + (this.dataFormatter && typeof this.formatDataIn === 'function' ? 'function formatDataIn(input, output) { ' + toInner(this.formatDataIn.toString()).replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '').replace(/this[.]dataFormatter[.]/g, '').replace(/this[.]dataFormatter/g, 'true') + ' }' : '') + '\\n  ' + (this.dataFormatter !== null && typeof this.formatDataOut === 'function' ? 'function formatDataOut(input, output) { ' + toInner(this.formatDataOut.toString()).replace(/this[.]dataFormatter[\\n\\s]+[.]/g, '').replace(/this[.]dataFormatter[.]/g, '').replace(/this[.]dataFormatter/g, 'true') + ' }' : '') + '\\n  ' + _zeros2.default.toString() + '\\n  ' + _softmax2.default.toString().replace('_2.default', 'Matrix') + '\\n  ' + _random.randomF.toString() + '\\n  ' + _sampleI2.default.toString() + '\\n  ' + _maxI2.default.toString();\n      return new Function('rawInput', 'isSampleI', 'temperature', src);\n    }\n  }, {\n    key: 'isRunnable',\n    get: function get() {\n      if (this.model.equations.length === 0) {\n        console.error('No equations bound, did you run train()?');\n        return false;\n      }\n\n      return true;\n    }\n  }]);\n\n  return RNN;\n}();\n\nexports.default = RNN;\n\n\nRNN.defaults = {\n  inputSize: 20,\n  inputRange: 20,\n  hiddenLayers: [20, 20],\n  outputSize: 20,\n  decayRate: 0.999,\n  smoothEps: 1e-8,\n  regc: 0.000001,\n  clipval: 5,\n  maxPredictionLength: 100,\n  /**\n   *\n   * @param {*[]} data\n   * @returns {Number[]}\n   */\n  setupData: function setupData(data) {\n    if (typeof data[0] !== 'string' && !Array.isArray(data[0]) && (!data[0].hasOwnProperty('input') || !data[0].hasOwnProperty('output'))) {\n      return data;\n    }\n    var values = [];\n    var result = [];\n    if (typeof data[0] === 'string' || Array.isArray(data[0])) {\n      if (!this.dataFormatter) {\n        for (var i = 0; i < data.length; i++) {\n          values.push(data[i]);\n        }\n        this.dataFormatter = new _dataFormatter2.default(values);\n      }\n      for (var _i = 0, max = data.length; _i < max; _i++) {\n        result.push(this.formatDataIn(data[_i]));\n      }\n    } else {\n      if (!this.dataFormatter) {\n        for (var _i2 = 0; _i2 < data.length; _i2++) {\n          values.push(data[_i2].input);\n          values.push(data[_i2].output);\n        }\n        this.dataFormatter = _dataFormatter2.default.fromArrayInputOutput(values);\n        this.dataFormatter.addUnrecognized();\n      }\n      for (var _i3 = 0, _max = data.length; _i3 < _max; _i3++) {\n        result.push(this.formatDataIn(data[_i3].input, data[_i3].output));\n      }\n    }\n    return result;\n  },\n  /**\n   *\n   * @param {*[]} input\n   * @param {*[]} output\n   * @returns {Number[]}\n   */\n  formatDataIn: function formatDataIn(input) {\n    var output = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n    if (this.dataFormatter) {\n      if (this.dataFormatter.indexTable.hasOwnProperty('stop-input')) {\n        return this.dataFormatter.toIndexesInputOutput(input, output);\n      } else {\n        return this.dataFormatter.toIndexes(input);\n      }\n    }\n    return input;\n  },\n  /**\n   *\n   * @param {Number[]} input\n   * @param {Number[]} output\n   * @returns {*}\n   */\n  formatDataOut: function formatDataOut(input, output) {\n    if (this.dataFormatter) {\n      return this.dataFormatter.toCharacters(output).join('');\n    }\n    return output;\n  },\n  dataFormatter: null\n};\n\nRNN.trainDefaults = {\n  iterations: 20000,\n  errorThresh: 0.005,\n  log: false,\n  logPeriod: 10,\n  learningRate: 0.01,\n  callback: null,\n  callbackPeriod: 10\n};\n//# sourceMappingURL=rnn.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @constructor FunctionBuilderBase\n  *\n  * @desc This handles all the raw state, converted state, etc. of a single function.\n  * [INTERNAL] A collection of functionNodes.\n  * \n  * @prop {Object} nodeMap - Object map, where nodeMap[function] = new FunctionNode;\n  * @prop {Object} gpu - The current gpu instance bound to this builder\n  * @prop {Object} rootKernel - The root kernel object, contains the paramNames, dimensions etc.\n  * \n  */\n\tfunction FunctionBuilderBase(gpu) {\n\t\t_classCallCheck(this, FunctionBuilderBase);\n\n\t\tthis.nodeMap = {};\n\t\tthis.nativeFunctions = {};\n\t\tthis.gpu = gpu;\n\t\tthis.rootKernel = null;\n\t\tthis.Node = null;\n\t}\n\n\t_createClass(FunctionBuilderBase, [{\n\t\tkey: 'addNativeFunction',\n\t\tvalue: function addNativeFunction(functionName, glslFunctionString) {\n\t\t\tthis.nativeFunctions[functionName] = glslFunctionString;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunction\n   *\n   * @desc Instantiates a FunctionNode, and add it to the nodeMap\n   *\n   * @param {String} functionName - Function name to assume, if its null, it attempts to extract from the function\n   * @param {Function} jsFunction - JS Function to do conversion\n   * @param {Object} [options]\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunction',\n\t\tvalue: function addFunction(functionName, jsFunction, options) {\n\t\t\tthis.addFunctionNode(new this.Node(functionName, jsFunction, options).setBuilder(this));\n\t\t}\n\t}, {\n\t\tkey: 'addFunctions',\n\t\tvalue: function addFunctions(functions, options) {\n\t\t\tif (functions) {\n\t\t\t\tif (Array.isArray(functions)) {\n\t\t\t\t\tfor (var i = 0; i < functions.length; i++) {\n\t\t\t\t\t\tthis.addFunction(null, functions[i], options);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tfor (var p in functions) {\n\t\t\t\t\t\tthis.addFunction(p, functions[p], options);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'addNativeFunctions',\n\t\tvalue: function addNativeFunctions(nativeFunctions) {\n\t\t\tfor (var functionName in nativeFunctions) {\n\t\t\t\tif (!nativeFunctions.hasOwnProperty(functionName)) continue;\n\t\t\t\tthis.addNativeFunction(functionName, nativeFunctions[functionName]);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addFunctionNode\n   *\n   * @desc Add the function node directly\n   *\n   * @param {functionNode} inNode - functionNode to add\n   *\n   */\n\n\t}, {\n\t\tkey: 'addFunctionNode',\n\t\tvalue: function addFunctionNode(inNode) {\n\t\t\tthis.nodeMap[inNode.functionName] = inNode;\n\t\t\tif (inNode.isRootKernel) {\n\t\t\t\tthis.rootKernel = inNode;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name traceFunctionCalls\n   *\n   * @desc Trace all the depending functions being called, from a single function\n   *\n   * This allow for 'unneeded' functions to be automatically optimized out.\n   * Note that the 0-index, is the starting function trace.\n   *\n   * @param {String} functionName - Function name to trace from, default to 'kernel'\n   * @param {String[]} retList - Returning list of function names that is traced. Including itself.\n   * @param {Object} [parent] - Parent node\n   *\n   * @returns {String[]}  Returning list of function names that is traced. Including itself.\n   */\n\n\t}, {\n\t\tkey: 'traceFunctionCalls',\n\t\tvalue: function traceFunctionCalls(functionName, retList, parent) {\n\t\t\tfunctionName = functionName || 'kernel';\n\t\t\tretList = retList || [];\n\n\t\t\tvar fNode = this.nodeMap[functionName];\n\t\t\tif (fNode) {\n\t\t\t\t// Check if function already exists\n\t\t\t\tvar functionIndex = retList.indexOf(functionName);\n\t\t\t\tif (functionIndex === -1) {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t\tif (parent) {\n\t\t\t\t\t\tfNode.parent = parent;\n\t\t\t\t\t}\n\t\t\t\t\tfNode.getFunctionString(); //ensure JS trace is done\n\t\t\t\t\tfor (var i = 0; i < fNode.calledFunctions.length; ++i) {\n\t\t\t\t\t\tthis.traceFunctionCalls(fNode.calledFunctions[i], retList, fNode);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t/**\n      * https://github.com/gpujs/gpu.js/issues/207\n      * if dependent function is already in the list, because a function depends on it, and because it has\n      * already been traced, we know that we must move the dependent function to the end of the the retList.\n      * */\n\t\t\t\t\tvar dependantFunctionName = retList.splice(functionIndex, 1)[0];\n\t\t\t\t\tretList.push(dependantFunctionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.nativeFunctions[functionName]) {\n\t\t\t\tif (retList.indexOf(functionName) >= 0) {\n\t\t\t\t\t// Does nothing if already traced\n\t\t\t\t} else {\n\t\t\t\t\tretList.push(functionName);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retList;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addKernel\n   *\n   * @desc Add a new kernel to this instance\n   *\n   * @param {String} fnString - Kernel function as a String\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   *\n   * @returns {Object} The inserted kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addKernel',\n\t\tvalue: function addKernel(fnString, options) {\n\t\t\tvar kernelNode = new this.Node('kernel', fnString, options);\n\t\t\tkernelNode.setBuilder(this);\n\t\t\tkernelNode.isRootKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name addSubKernel\n   *\n   * @desc Add a new sub-kernel to the current kernel instance\n   *\n   * @param {Function} jsFunction - Sub-kernel function (JavaScript)\n   * @param {Object} options - Settings object to set constants, debug mode, etc.\n   *\n   * @returns {Object} The inserted sub-kernel as a Kernel Node\n   *\n   */\n\n\t}, {\n\t\tkey: 'addSubKernel',\n\t\tvalue: function addSubKernel(jsFunction, options) {\n\t\t\tvar kernelNode = new this.Node(null, jsFunction, options);\n\t\t\tkernelNode.setBuilder(this);\n\t\t\tkernelNode.isSubKernel = true;\n\t\t\tthis.addFunctionNode(kernelNode);\n\t\t\treturn kernelNode;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeString',\n\t\tvalue: function getPrototypeString(functionName) {\n\t\t\treturn this.getPrototypes(functionName).join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionBuilder#\n   * @name getPrototypeString\n   * @function\n   *\n   * @desc Return the string for a function\n   *\n   * @param {String} [functionName] - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {Array} The full string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypes',\n\t\tvalue: function getPrototypes(functionName) {\n\t\t\tthis.rootKernel.generate();\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getPrototypesFromFunctionNames(this.traceFunctionCalls(functionName, []).reverse());\n\t\t\t}\n\t\t\treturn this.getPrototypesFromFunctionNames(Object.keys(this.nodeMap));\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getStringFromFunctionNames\n   *\n   * @desc Get string from function names\n   *\n   * @param {String[]} functionList - List of function to build string\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getStringFromFunctionNames',\n\t\tvalue: function getStringFromFunctionNames(functionList) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar node = this.nodeMap[functionList[i]];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(this.nodeMap[functionList[i]].getFunctionString());\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret.join('\\n');\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} [opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {Array} Prototypes of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypesFromFunctionNames',\n\t\tvalue: function getPrototypesFromFunctionNames(functionList, opt) {\n\t\t\tvar ret = [];\n\t\t\tfor (var i = 0; i < functionList.length; ++i) {\n\t\t\t\tvar functionName = functionList[i];\n\t\t\t\tvar node = this.nodeMap[functionName];\n\t\t\t\tif (node) {\n\t\t\t\t\tret.push(node.getFunctionPrototypeString(opt));\n\t\t\t\t} else if (this.nativeFunctions[functionName]) {\n\t\t\t\t\tret.push(this.nativeFunctions[functionName]);\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getPrototypeStringFromFunctionNames\n   *\n   * @desc Return string of all functions converted\n   *\n   * @param {String[]} functionList - List of function names to build the string.\n   * @param {Object} opt - Settings object passed to functionNode. See functionNode for more details.\n   *\n   * @returns {String} Prototype string of all functions converted\n   *\n   */\n\n\t}, {\n\t\tkey: 'getPrototypeStringFromFunctionNames',\n\t\tvalue: function getPrototypeStringFromFunctionNames(functionList, opt) {\n\t\t\treturn this.getPrototypesFromFunctionNames(functionList, opt).toString();\n\t\t}\n\n\t\t/**\n   * @memberOf FunctionBuilderBase#\n   * @function\n   * @name getString\n   *\n   * Get string for a particular function name\n   *\n   * @param {String} functionName - Function name to trace from. If null, it returns the WHOLE builder stack\n   *\n   * @returns {String} The string, of all the various functions. Trace optimized if functionName given\n   *\n   */\n\n\t}, {\n\t\tkey: 'getString',\n\t\tvalue: function getString(functionName, opt) {\n\t\t\tif (opt === undefined) {\n\t\t\t\topt = {};\n\t\t\t}\n\n\t\t\tif (functionName) {\n\t\t\t\treturn this.getStringFromFunctionNames(this.traceFunctionCalls(functionName, [], opt).reverse(), opt);\n\t\t\t}\n\t\t\treturn this.getStringFromFunctionNames(Object.keys(this.nodeMap), opt);\n\t\t}\n\t}]);\n\n\treturn FunctionBuilderBase;\n}();","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = LookupTable;\nfunction LookupTable(data, prop) {\n  this.length = 0;\n  if (prop) {\n    this.prop = prop;\n    var table = this.table = {};\n    for (var i = 0; i < data.length; i++) {\n      var datum = data[i];\n      var object = datum[prop];\n      for (var p in object) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  } else if (Array.isArray(data[0])) {\n    var _table = this.table = {};\n    for (var _i = 0; _i < data.length; _i++) {\n      var array = data[_i];\n      for (var j = 0; j < array.length; j++) {\n        var _object = array[j];\n        for (var _p in _object) {\n          if (_table.hasOwnProperty(_p)) continue;\n          _table[_p] = this.length++;\n        }\n      }\n    }\n  } else {\n    var _table2 = this.table = {};\n    for (var _i2 = 0; _i2 < data.length; _i2++) {\n      var _object2 = data[_i2];\n      for (var _p2 in _object2) {\n        if (_table2.hasOwnProperty(_p2)) continue;\n        _table2[_p2] = this.length++;\n      }\n    }\n  }\n};\n//# sourceMappingURL=lookup-table.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _randomMatrix = require('./matrix/random-matrix');\n\nvar _randomMatrix2 = _interopRequireDefault(_randomMatrix);\n\nvar _rnn = require('./rnn');\n\nvar _rnn2 = _interopRequireDefault(_rnn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar GRU = function (_RNN) {\n  _inherits(GRU, _RNN);\n\n  function GRU() {\n    _classCallCheck(this, GRU);\n\n    return _possibleConstructorReturn(this, (GRU.__proto__ || Object.getPrototypeOf(GRU)).apply(this, arguments));\n  }\n\n  _createClass(GRU, [{\n    key: 'getModel',\n    value: function getModel(hiddenSize, prevSize) {\n      return {\n        // update Gate\n        //wzxh\n        updateGateInputMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wzhh\n        updateGateHiddenMatrix: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bz\n        updateGateBias: new _matrix2.default(hiddenSize, 1),\n\n        // reset Gate\n        //wrxh\n        resetGateInputMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wrhh\n        resetGateHiddenMatrix: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //br\n        resetGateBias: new _matrix2.default(hiddenSize, 1),\n\n        // cell write parameters\n        //wcxh\n        cellWriteInputMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wchh\n        cellWriteHiddenMatrix: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bc\n        cellWriteBias: new _matrix2.default(hiddenSize, 1)\n      };\n    }\n\n    /**\n     *\n     * @param {Equation} equation\n     * @param {Matrix} inputMatrix\n     * @param {Matrix} previousResult\n     * @param {Object} hiddenLayer\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'getEquation',\n    value: function getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      var sigmoid = equation.sigmoid.bind(equation);\n      var add = equation.add.bind(equation);\n      var multiply = equation.multiply.bind(equation);\n      var multiplyElement = equation.multiplyElement.bind(equation);\n      var tanh = equation.tanh.bind(equation);\n      var allOnes = equation.allOnes.bind(equation);\n      var cloneNegative = equation.cloneNegative.bind(equation);\n\n      // update gate\n      var updateGate = sigmoid(add(add(multiply(hiddenLayer.updateGateInputMatrix, inputMatrix), multiply(hiddenLayer.updateGateHiddenMatrix, previousResult)), hiddenLayer.updateGateBias));\n\n      // reset gate\n      var resetGate = sigmoid(add(add(multiply(hiddenLayer.resetGateInputMatrix, inputMatrix), multiply(hiddenLayer.resetGateHiddenMatrix, previousResult)), hiddenLayer.resetGateBias));\n\n      // cell\n      var cell = tanh(add(add(multiply(hiddenLayer.cellWriteInputMatrix, inputMatrix), multiply(hiddenLayer.cellWriteHiddenMatrix, multiplyElement(resetGate, previousResult))), hiddenLayer.cellWriteBias));\n\n      // compute hidden state as gated, saturated cell activations\n      // negate updateGate\n      return add(multiplyElement(add(allOnes(updateGate.rows, updateGate.columns), cloneNegative(updateGate)), cell), multiplyElement(previousResult, updateGate));\n    }\n  }]);\n\n  return GRU;\n}(_rnn2.default);\n\nexports.default = GRU;\n//# sourceMappingURL=gru.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nexports.thaw = thaw;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//private variables\nvar thawing = false;\nvar thaws = [];\n\n/**\n * thaw an array of items\n * @param {Array} items\n * @param {Object} [options]\n * @constructor\n */\n\nvar Thaw = function () {\n  _createClass(Thaw, null, [{\n    key: \"stopAll\",\n\n\n    /**\n     * Stops all Thaw instances\n     */\n    value: function stopAll() {\n      for (var i = 0; i < thaws.length; i++) {\n        thaws[i].stop();\n      }\n    }\n  }, {\n    key: \"defaultSettings\",\n\n    /**\n     *\n     * @type {{each: null, done: null}}\n     */\n    get: function get() {\n      return {\n        each: null,\n        done: null\n      };\n    }\n\n    /**\n     * returns if Thaw.js is thawing\n     * @returns {boolean}\n     */\n\n  }, {\n    key: \"isThawing\",\n    get: function get() {\n      return thawing;\n    }\n  }]);\n\n  function Thaw(items) {\n    var _this = this;\n\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Thaw);\n\n    var _constructor$defaultS = _extends({}, this.constructor.defaultSettings, options),\n        each = _constructor$defaultS.each,\n        done = _constructor$defaultS.done;\n\n    this.items = items;\n    this.i = 0;\n    this.options = options;\n    var tick = this.tick = function () {\n      if (_this.i < 0) return;\n\n      _this.timeout = setTimeout(tick, 0);\n\n      if (thawing) return;\n      var item = items[_this.i];\n      if (_this.i >= items.length) {\n        if (done !== null) {\n          thawing = true;\n          done(item, _this.i);\n          thawing = false;\n        }\n\n        _this.i = -1;\n        clearTimeout(_this.timeout);\n        return;\n      }\n      if (each !== null) {\n        thawing = true;\n        each(item, _this.i);\n        thawing = false;\n      } else if (item !== undefined) {\n        item();\n      }\n      _this.i++;\n    };\n\n    thaws.push(this);\n    if (!options.delay) {\n      tick();\n    }\n  }\n\n  /**\n   * readies thaw to continue\n   * @returns {boolean} if had to get ready\n   */\n\n\n  _createClass(Thaw, [{\n    key: \"makeReady\",\n    value: function makeReady() {\n      if (this.i < 0) {\n        this.i = this.items.length;\n        return true;\n      }\n      return false;\n    }\n\n    /**\n     * Adds an item to the end of this instance of Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      var doTick = this.makeReady();\n\n      this.items.push(item);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Inserts an item just after the current item being processed in Thaw and readies Thaw to process it\n     * @param item\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insert\",\n    value: function insert(item) {\n      var doTick = this.makeReady();\n\n      this.items.splice(this.i, 0, item);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Adds an Array to the end of this instance of Thaw and readies Thaw to process it\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"addArray\",\n    value: function addArray(items) {\n      var doTick = this.makeReady();\n\n      this.items = this.items.concat(items);\n\n      if (doTick) {\n        this.tick();\n      }\n\n      return this;\n    }\n\n    /**\n     * Inserts an Array just after the current item being processed in Thaw and readies Thaw to process them\n     * @param {Array} items\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"insertArray\",\n    value: function insertArray(items) {\n      var doTick = this.makeReady();\n      var left = this.items;\n      var middle = items;\n      var right = this.items.splice(this.i, this.items.length - this.i + 1);\n\n      this.items = left.concat(middle, right);\n\n      if (doTick) {\n        this.tick();\n      }\n      return this;\n    }\n\n    /**\n     * Stops this instance of Thaw\n     * @returns {Thaw}\n     */\n\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this.i = -1;\n      clearTimeout(this.timeout);\n      if (this.options.done) {\n        this.options.done();\n      }\n      return this;\n    }\n  }]);\n\n  return Thaw;\n}();\n\n/**\n * simple thaw\n * @param {Array} items\n * @param {Object} [options]\n * @returns Thaw\n */\n\n\nexports.default = Thaw;\nfunction thaw(items) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return new Thaw(items, options);\n}\n//# sourceMappingURL=thaw.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = allOnes;\n/**\n * makes matrix weights and deltas all ones\n * @param {Matrix} product\n */\nfunction allOnes(product) {\n  for (var i = 0; i < product.weights.length; i++) {\n    product.weights[i] = 1;\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=all-ones.js.map","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","\"use strict\";\n\nmodule.exports = \"precision highp float;\\nprecision highp int;\\nprecision highp sampler2D;\\n\\nattribute vec2 aPos;\\nattribute vec2 aTexCoord;\\n\\nvarying vec2 vTexCoord;\\nuniform vec2 ratio;\\n\\nvoid main(void) {\\n  gl_Position = vec4((aPos + vec2(1)) * ratio + vec2(-1), 0, 1);\\n  vTexCoord = aTexCoord;\\n}\";","'use strict';\n\nif (!process.version ||\n    process.version.indexOf('v0.') === 0 ||\n    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {\n  module.exports = { nextTick: nextTick };\n} else {\n  module.exports = process\n}\n\nfunction nextTick(fn, arg1, arg2, arg3) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('\"callback\" argument must be a function');\n  }\n  var len = arguments.length;\n  var args, i;\n  switch (len) {\n  case 0:\n  case 1:\n    return process.nextTick(fn);\n  case 2:\n    return process.nextTick(function afterTickOne() {\n      fn.call(null, arg1);\n    });\n  case 3:\n    return process.nextTick(function afterTickTwo() {\n      fn.call(null, arg1, arg2);\n    });\n  case 4:\n    return process.nextTick(function afterTickThree() {\n      fn.call(null, arg1, arg2, arg3);\n    });\n  default:\n    args = new Array(len - 1);\n    i = 0;\n    while (i < args.length) {\n      args[i++] = arguments[i];\n    }\n    return process.nextTick(function afterTick() {\n      fn.apply(null, args);\n    });\n  }\n}\n\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.randomF = randomF;\nexports.randomI = randomI;\nexports.randomN = randomN;\nfunction randomF(a, b) {\n  return Math.random() * (b - a) + a;\n}\n\nfunction randomI(a, b) {\n  return Math.floor(Math.random() * (b - a) + a);\n}\n\nfunction randomN(mu, std) {\n  return mu + gaussRandom() * std;\n}\n\n// Random numbers utils\nfunction gaussRandom() {\n  if (gaussRandom.returnV) {\n    gaussRandom.returnV = false;\n    return gaussRandom.vVal;\n  }\n  var u = 2 * Math.random() - 1;\n  var v = 2 * Math.random() - 1;\n  var r = u * u + v * v;\n  if (r == 0 || r > 1) {\n    return gaussRandom();\n  }\n  var c = Math.sqrt(-2 * Math.log(r) / r);\n  gaussRandom.vVal = v * c; // cache this\n  gaussRandom.returnV = true;\n  return u * c;\n}\ngaussRandom.returnV = false;\ngaussRandom.vVal = 0;\n//# sourceMappingURL=random.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _lstm = require('./lstm');\n\nvar _lstm2 = _interopRequireDefault(_lstm);\n\nvar _rnnTimeStep = require('./rnn-time-step');\n\nvar _rnnTimeStep2 = _interopRequireDefault(_rnnTimeStep);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LSTMTimeStep = function (_RNNTimeStep) {\n  _inherits(LSTMTimeStep, _RNNTimeStep);\n\n  function LSTMTimeStep() {\n    _classCallCheck(this, LSTMTimeStep);\n\n    return _possibleConstructorReturn(this, (LSTMTimeStep.__proto__ || Object.getPrototypeOf(LSTMTimeStep)).apply(this, arguments));\n  }\n\n  _createClass(LSTMTimeStep, [{\n    key: 'getModel',\n    value: function getModel(hiddenSize, prevSize) {\n      return _lstm2.default.prototype.getModel.call(this, hiddenSize, prevSize);\n    }\n\n    /**\n     *\n     * @param {Equation} equation\n     * @param {Matrix} inputMatrix\n     * @param {Matrix} previousResult\n     * @param {Object} hiddenLayer\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'getEquation',\n    value: function getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      return _lstm2.default.prototype.getEquation.call(this, equation, inputMatrix, previousResult, hiddenLayer);\n    }\n  }]);\n\n  return LSTMTimeStep;\n}(_rnnTimeStep2.default);\n\nexports.default = LSTMTimeStep;\n//# sourceMappingURL=lstm-time-step.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = sigmoidB;\n/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction sigmoidB(product, left) {\n  for (var i = 0; i < product.deltas.length; i++) {\n    var mwi = product.weights[i];\n    left.deltas[i] = mwi * (1 - mwi) * product.deltas[i];\n  }\n}\n//# sourceMappingURL=sigmoid-b.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multiplyB;\n/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction multiplyB(product, left, right) {\n  var leftRows = left.rows;\n  var leftColumns = left.columns;\n  var rightColumns = right.columns;\n\n  // loop over rows of left\n  for (var leftRow = 0; leftRow < leftRows; leftRow++) {\n    var leftRowBase = leftColumns * leftRow;\n    var rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (var rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n\n      //loop over columns of left\n      for (var leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        var rightColumnBase = rightColumns * leftColumn;\n        var _leftRow = leftRowBase + leftColumn;\n        var rightRow = rightColumnBase + rightColumn;\n        var backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[_leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[_leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n//# sourceMappingURL=multiply-b.js.map","'use strict';\n\n/**\n * \n * @classdesc Various utility functions / snippets of code that GPU.JS uses internally.\\\n * This covers various snippets of code that is not entirely gpu.js specific (ie. may find uses elsewhere)\n *\n * Note that all methods in this class are *static* by nature `Utils.functionName()`\n * \n * @class Utils\n * @extends UtilsCore\n *\n */\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar UtilsCore = require(\"./utils-core\");\nvar Input = require('./input');\nvar Texture = require('./texture');\n// FUNCTION_NAME regex\nvar FUNCTION_NAME = /function ([^(]*)/;\n\n// STRIP COMMENTS regex\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\n\n// ARGUMENT NAMES regex\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\n\nvar _systemEndianness = function () {\n\tvar b = new ArrayBuffer(4);\n\tvar a = new Uint32Array(b);\n\tvar c = new Uint8Array(b);\n\ta[0] = 0xdeadbeef;\n\tif (c[0] === 0xef) return 'LE';\n\tif (c[0] === 0xde) return 'BE';\n\tthrow new Error('unknown endianness');\n}();\n\nvar _isFloatReadPixelsSupported = null;\nvar _isFloatReadPixelsSupportedWebGL2 = null;\n\nvar _isMixedIdentifiersSupported = function () {\n\ttry {\n\t\tnew Function('let i = 1; const j = 1;')();\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n}();\n\nvar _hasIntegerDivisionAccuracyBug = null;\n\n/**\n * @class\n * @extends UtilsCore\n */\n\nvar Utils = function (_UtilsCore) {\n\t_inherits(Utils, _UtilsCore);\n\n\tfunction Utils() {\n\t\t_classCallCheck(this, Utils);\n\n\t\treturn _possibleConstructorReturn(this, (Utils.__proto__ || Object.getPrototypeOf(Utils)).apply(this, arguments));\n\t}\n\n\t_createClass(Utils, null, [{\n\t\tkey: 'systemEndianness',\n\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  System values support (currently only endianness)\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name systemEndianness\n   * @function\n   * @static\n   *\n   * Gets the system endianness, and cache it\n   *\n   * @returns {String} 'LE' or 'BE' depending on system architecture\n   *\n   * Credit: https://gist.github.com/TooTallNate/4750953\n   */\n\t\tvalue: function systemEndianness() {\n\t\t\treturn _systemEndianness;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Function and function string validations\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunction\n   * @function\n   * @static\n   *\n   * Return TRUE, on a JS function\n   *\n   * @param {Function} funcObj - Object to validate if its a function\n   *\n   * @returns\t{Boolean} TRUE if the object is a JS function\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunction',\n\t\tvalue: function isFunction(funcObj) {\n\t\t\treturn typeof funcObj === 'function';\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFunctionString\n   * @function\n   * @static\n   *\n   * Return TRUE, on a valid JS function string\n   *\n   * Note: This does just a VERY simply sanity check. And may give false positives.\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {Boolean} TRUE if the string passes basic validation\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFunctionString',\n\t\tvalue: function isFunctionString(funcStr) {\n\t\t\tif (funcStr !== null) {\n\t\t\t\treturn funcStr.toString().slice(0, 'function'.length).toLowerCase() === 'function';\n\t\t\t}\n\t\t\treturn false;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getFunctionName_fromString\n   * @function\n   * @static\n   *\n   * Return the function name from a JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String} Function name string (if found)\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionNameFromString',\n\t\tvalue: function getFunctionNameFromString(funcStr) {\n\t\t\treturn FUNCTION_NAME.exec(funcStr)[1];\n\t\t}\n\t}, {\n\t\tkey: 'getFunctionBodyFromString',\n\t\tvalue: function getFunctionBodyFromString(funcStr) {\n\t\t\treturn funcStr.substring(funcStr.indexOf('{') + 1, funcStr.lastIndexOf('}'));\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getParamNames_fromString\n   * @function\n   * @static\n   *\n   * Return list of parameter names extracted from the JS function string\n   *\n   * @param {String} funcStr - String of JS function to validate\n   *\n   * @returns {String[]}  Array representing all the parameter names\n   *\n   */\n\n\t}, {\n\t\tkey: 'getParamNamesFromString',\n\t\tvalue: function getParamNamesFromString(func) {\n\t\t\tvar fnStr = func.toString().replace(STRIP_COMMENTS, '');\n\t\t\tvar result = fnStr.slice(fnStr.indexOf('(') + 1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\n\t\t\tif (result === null) result = [];\n\t\t\treturn result;\n\t\t}\n\n\t\t//-----------------------------------------------------------------------------\n\t\t//\n\t\t//  Object / function cloning and manipulation\n\t\t//\n\t\t//-----------------------------------------------------------------------------\n\n\t\t/**\n   * @memberOf Utils\n   * @name clone\n   * @function\n   * @static\n   *\n   * Returns a clone\n   *\n   * @param {Object} obj - Object to clone\n   *\n   * @returns {Object}  Cloned object\n   *\n   */\n\n\t}, {\n\t\tkey: 'clone',\n\t\tvalue: function clone(obj) {\n\t\t\tif (obj === null || (typeof obj === 'undefined' ? 'undefined' : _typeof(obj)) !== 'object' || obj.hasOwnProperty('isActiveClone')) return obj;\n\n\t\t\tvar temp = obj.constructor(); // changed\n\n\t\t\tfor (var key in obj) {\n\t\t\t\tif (Object.prototype.hasOwnProperty.call(obj, key)) {\n\t\t\t\t\tobj.isActiveClone = null;\n\t\t\t\t\ttemp[key] = Utils.clone(obj[key]);\n\t\t\t\t\tdelete obj.isActiveClone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn temp;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name newPromise\n   * @function\n   * @static\n   *\n   * Returns a `new Promise` object based on the underlying implmentation\n   *\n   * @param {Function} executor - Promise builder function\n   *\n   * @returns {Promise}  Promise object\n   *\n   */\n\n\t}, {\n\t\tkey: 'newPromise',\n\t\tvalue: function newPromise(executor) {\n\t\t\tvar simple = Promise || small_promise;\n\t\t\tif (simple === null) {\n\t\t\t\tthrow TypeError('Browser is missing Promise implementation. Consider adding small_promise.js polyfill');\n\t\t\t}\n\t\t\treturn new simple(executor);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name functionBinder\n   * @function\n   * @static\n   *\n   * Limited implementation of Function.bind, with fallback\n   *\n   * @param {Function} inFunc - to setup bind on\n   * @param {Object} thisObj - The this parameter to assume inside the binded function\n   *\n   * @returns {Function}  The binded function\n   *\n   */\n\n\t}, {\n\t\tkey: 'functionBinder',\n\t\tvalue: function functionBinder(inFunc, thisObj) {\n\t\t\tif (inFunc.bind) {\n\t\t\t\treturn inFunc.bind(thisObj);\n\t\t\t}\n\n\t\t\treturn function () {\n\t\t\t\tvar args = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);\n\t\t\t\treturn inFunc.apply(thisObj, args);\n\t\t\t};\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isArray\n   * @function\n   * @static\n   *\n   * * Checks if is an array or Array-like object\n   *\n   * @param {Object} arg - The argument object to check if is array\n   *\n   * @returns {Boolean}  true if is array or Array-like object\n   *\n   */\n\n\t}, {\n\t\tkey: 'isArray',\n\t\tvalue: function isArray(array) {\n\t\t\tif (isNaN(array.length)) {\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getArgumentType\n   * @function\n   * @static\n   *\n   * Evaluate the argument type, to apply respective logic for it\n   *\n   * @param {Object} arg - The argument object to evaluate type\n   *\n   * @returns {String}  Argument type Array/Number/Float/Texture/Unknown\n   *\n   */\n\n\t}, {\n\t\tkey: 'getArgumentType',\n\t\tvalue: function getArgumentType(arg) {\n\t\t\tif (Utils.isArray(arg)) {\n\t\t\t\tif (arg[0].nodeName === 'IMG') {\n\t\t\t\t\treturn 'HTMLImageArray';\n\t\t\t\t}\n\t\t\t\treturn 'Array';\n\t\t\t} else if (typeof arg === 'number') {\n\t\t\t\tif (Number.isInteger(arg)) {\n\t\t\t\t\treturn 'Integer';\n\t\t\t\t}\n\t\t\t\treturn 'Float';\n\t\t\t} else if (arg instanceof Texture) {\n\t\t\t\treturn arg.type;\n\t\t\t} else if (arg instanceof Input) {\n\t\t\t\treturn 'Input';\n\t\t\t} else if (arg.nodeName === 'IMG') {\n\t\t\t\treturn 'HTMLImage';\n\t\t\t} else {\n\t\t\t\treturn 'Unknown';\n\t\t\t}\n\t\t}\n\t\t/**\n   * @typedef {Object} gpuJSObject\n   */\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupported\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupported',\n\t\tvalue: function isFloatReadPixelsSupported() {\n\t\t\tif (_isFloatReadPixelsSupported !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupported;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupported = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupported;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name isFloatReadPixelsSupportedWebGL2\n   * @function\n   * @static\n   *\n   * Checks if the browser supports readPixels with float type\n   *\n   * @returns {Boolean} true if browser supports\n   *\n   */\n\n\t}, {\n\t\tkey: 'isFloatReadPixelsSupportedWebGL2',\n\t\tvalue: function isFloatReadPixelsSupportedWebGL2() {\n\t\t\tif (_isFloatReadPixelsSupportedWebGL2 !== null) {\n\t\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl2-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function () {\n\t\t\t\treturn 1;\n\t\t\t}, {\n\t\t\t\toutput: [2],\n\t\t\t\tfloatTextures: true,\n\t\t\t\tfloatOutput: true,\n\t\t\t\tfloatOutputForce: true\n\t\t\t})();\n\n\t\t\t_isFloatReadPixelsSupportedWebGL2 = x[0] === 1;\n\t\t\tgpu.destroy();\n\t\t\treturn _isFloatReadPixelsSupportedWebGL2;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name hasIntegerDivisionAccuracyBug\n   * @function\n   * @static\n   *\n   * Checks if the system has inaccuracies when dividing integers\n   *\n   * @returns {Boolean} true if bug is exhibited on this system\n   *\n   */\n\n\t}, {\n\t\tkey: 'hasIntegerDivisionAccuracyBug',\n\t\tvalue: function hasIntegerDivisionAccuracyBug() {\n\t\t\tif (_hasIntegerDivisionAccuracyBug !== null) {\n\t\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t\t}\n\n\t\t\tvar GPU = require('../index');\n\t\t\tvar gpu = new GPU({\n\t\t\t\tmode: 'webgl-validator'\n\t\t\t});\n\t\t\tvar x = gpu.createKernel(function (v1, v2) {\n\t\t\t\treturn v1[this.thread.x] / v2[this.thread.x];\n\t\t\t}, {\n\t\t\t\toutput: [1]\n\t\t\t})([6, 6030401], [3, 3991]);\n\n\t\t\t// have we not got whole numbers for 6/3 or 6030401/3991\n\t\t\t// add more here if others see this problem\n\t\t\t_hasIntegerDivisionAccuracyBug = x[0] !== 2 || x[1] !== 1511;\n\t\t\tgpu.destroy();\n\t\t\treturn _hasIntegerDivisionAccuracyBug;\n\t\t}\n\t}, {\n\t\tkey: 'isMixedIdentifiersSupported',\n\t\tvalue: function isMixedIdentifiersSupported() {\n\t\t\treturn _isMixedIdentifiersSupported;\n\t\t}\n\t}, {\n\t\tkey: 'dimToTexSize',\n\t\tvalue: function dimToTexSize(opt, dimensions, output) {\n\t\t\tvar numTexels = dimensions[0];\n\t\t\tvar w = dimensions[0];\n\t\t\tvar h = dimensions[1];\n\t\t\tfor (var i = 1; i < dimensions.length; i++) {\n\t\t\t\tnumTexels *= dimensions[i];\n\t\t\t}\n\n\t\t\tif (opt.floatTextures && (!output || opt.floatOutput)) {\n\t\t\t\tw = numTexels = Math.ceil(numTexels / 4);\n\t\t\t}\n\t\t\t// if given dimensions == a 2d image\n\t\t\tif (h > 1 && w * h === numTexels) {\n\t\t\t\treturn [w, h];\n\t\t\t}\n\t\t\t// find as close to square width, height sizes as possible\n\t\t\tvar sqrt = Math.sqrt(numTexels);\n\t\t\tvar high = Math.ceil(sqrt);\n\t\t\tvar low = Math.floor(sqrt);\n\t\t\twhile (high * low > numTexels) {\n\t\t\t\thigh--;\n\t\t\t\tlow = Math.ceil(numTexels / high);\n\t\t\t}\n\t\t\tw = low;\n\t\t\th = Math.ceil(numTexels / w);\n\t\t\treturn [w, h];\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name getDimensions\n   * @function\n   * @static\n   *\n   * Return the dimension of an array.\n   * \n   * @param {Array|String} x - The array\n   * @param {number} [pad] - To include padding in the dimension calculation [Optional]\n   *\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'getDimensions',\n\t\tvalue: function getDimensions(x, pad) {\n\t\t\tvar ret = void 0;\n\t\t\tif (Utils.isArray(x)) {\n\t\t\t\tvar dim = [];\n\t\t\t\tvar temp = x;\n\t\t\t\twhile (Utils.isArray(temp)) {\n\t\t\t\t\tdim.push(temp.length);\n\t\t\t\t\ttemp = temp[0];\n\t\t\t\t}\n\t\t\t\tret = dim.reverse();\n\t\t\t} else if (x instanceof Texture) {\n\t\t\t\tret = x.output;\n\t\t\t} else if (x instanceof Input) {\n\t\t\t\tret = x.size;\n\t\t\t} else {\n\t\t\t\tthrow 'Unknown dimensions of ' + x;\n\t\t\t}\n\n\t\t\tif (pad) {\n\t\t\t\tret = Utils.clone(ret);\n\t\t\t\twhile (ret.length < 3) {\n\t\t\t\t\tret.push(1);\n\t\t\t\t}\n\t\t\t}\n\t\t\t// return ret;\n\t\t\treturn new Int32Array(ret);\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name pad\n   * @function\n   * @static\n   *\n   * Pad an array AND its elements with leading and ending zeros\n   *\n   * @param {Array} arr - the array to pad zeros to\n   * @param {number} padding - amount of padding\n   *\n   * @returns {Array} Array with leading and ending zeros, and all the elements padded by zeros.\n   *\n   */\n\n\t}, {\n\t\tkey: 'pad',\n\t\tvalue: function pad(arr, padding) {\n\t\t\tfunction zeros(n) {\n\t\t\t\treturn Array.apply(null, new Array(n)).map(Number.prototype.valueOf, 0);\n\t\t\t}\n\n\t\t\tvar len = arr.length + padding * 2;\n\n\t\t\tvar ret = arr.map(function (x) {\n\t\t\t\treturn [].concat(zeros(padding), x, zeros(padding));\n\t\t\t});\n\n\t\t\tfor (var i = 0; i < padding; i++) {\n\t\t\t\tret = [].concat([zeros(len)], ret, [zeros(len)]);\n\t\t\t}\n\n\t\t\treturn ret;\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten2dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 2d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten2dArrayTo',\n\t\tvalue: function flatten2dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var y = 0; y < array.length; y++) {\n\t\t\t\ttarget.set(array[y], offset);\n\t\t\t\toffset += array[y].length;\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flatten3dArrayTo',\n\t\tvalue: function flatten3dArrayTo(array, target) {\n\t\t\tvar offset = 0;\n\t\t\tfor (var z = 0; z < array.length; z++) {\n\t\t\t\tfor (var y = 0; y < array[z].length; y++) {\n\t\t\t\t\ttarget.set(array[z][y], offset);\n\t\t\t\t\toffset += array[z][y].length;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name flatten3dArrayTo\n   * @function\n   * @static\n   *\n   * Puts a nested 1d, 2d, or 3d array into a one-dimensional target array\n   * @param {Array|*} array\n   * @param {Float32Array|Float64Array} target\n   */\n\n\t}, {\n\t\tkey: 'flattenTo',\n\t\tvalue: function flattenTo(array, target) {\n\t\t\tif (Utils.isArray(array[0])) {\n\t\t\t\tif (Utils.isArray(array[0][0])) {\n\t\t\t\t\tUtils.flatten3dArrayTo(array, target);\n\t\t\t\t} else {\n\t\t\t\t\tUtils.flatten2dArrayTo(array, target);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttarget.set(array);\n\t\t\t}\n\t\t}\n\n\t\t/**\n   * @memberOf Utils\n   * @name splitArray\n   * @function\n   * @static\n   *\n   * Splits an array into smaller arrays.\n   * Number of elements in one small chunk is given by `part`\n   *\n   * @param {Array} array - The array to split into chunks\n   * @param {Array} part - elements in one chunk\n   *\n  \t * @returns {Array} An array of smaller chunks\n   *\n   */\n\n\t}, {\n\t\tkey: 'splitArray',\n\t\tvalue: function splitArray(array, part) {\n\t\t\tvar result = [];\n\t\t\tfor (var i = 0; i < array.length; i += part) {\n\t\t\t\tresult.push(new array.constructor(array.buffer, i * 4 + array.byteOffset, part));\n\t\t\t}\n\t\t\treturn result;\n\t\t}\n\t}, {\n\t\tkey: 'getAstString',\n\t\tvalue: function getAstString(source, ast) {\n\t\t\tvar lines = Array.isArray(source) ? source : source.split(/\\r?\\n/g);\n\t\t\tvar start = ast.loc.start;\n\t\t\tvar end = ast.loc.end;\n\t\t\tvar result = [];\n\t\t\tresult.push(lines[start.line - 1].slice(start.column));\n\t\t\tfor (var i = start.line; i < end.line - 1; i++) {\n\t\t\t\tresult.push(lines[i]);\n\t\t\t}\n\t\t\tresult.push(lines[end.line - 1].slice(0, end.column));\n\t\t\treturn result.join('\\n');\n\t\t}\n\t}, {\n\t\tkey: 'allPropertiesOf',\n\t\tvalue: function allPropertiesOf(obj) {\n\t\t\tvar props = [];\n\n\t\t\tdo {\n\t\t\t\tprops.push.apply(props, Object.getOwnPropertyNames(obj));\n\t\t\t} while (obj = Object.getPrototypeOf(obj));\n\n\t\t\treturn props;\n\t\t}\n\t}]);\n\n\treturn Utils;\n}(UtilsCore);\n\n// This ensure static methods are \"inherited\"\n// See: https://stackoverflow.com/questions/5441508/how-to-inherit-static-methods-from-base-class-in-javascript\n\n\nObject.assign(Utils, UtilsCore);\n\nmodule.exports = Utils;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _thaw = require('thaw.js');\n\nvar _thaw2 = _interopRequireDefault(_thaw);\n\nvar _lookup2 = require('./lookup');\n\nvar _lookup3 = _interopRequireDefault(_lookup2);\n\nvar _max = require('./utilities/max');\n\nvar _max2 = _interopRequireDefault(_max);\n\nvar _mse = require('./utilities/mse');\n\nvar _mse2 = _interopRequireDefault(_mse);\n\nvar _randos = require('./utilities/randos');\n\nvar _randos2 = _interopRequireDefault(_randos);\n\nvar _range = require('./utilities/range');\n\nvar _range2 = _interopRequireDefault(_range);\n\nvar _toArray = require('./utilities/to-array');\n\nvar _toArray2 = _interopRequireDefault(_toArray);\n\nvar _zeros = require('./utilities/zeros');\n\nvar _zeros2 = _interopRequireDefault(_zeros);\n\nvar _lookupTable = require('./utilities/lookup-table');\n\nvar _lookupTable2 = _interopRequireDefault(_lookupTable);\n\nvar _cast = require('./utilities/cast');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * @param {object} options\n * @constructor\n */\nvar NeuralNetwork = function () {\n  _createClass(NeuralNetwork, null, [{\n    key: 'trainDefaults',\n    get: function get() {\n      return {\n        iterations: 20000, // the maximum times to iterate the training data\n        errorThresh: 0.005, // the acceptable error percentage from training data\n        log: false, // true to use console.log, when a function is supplied it is used\n        logPeriod: 10, // iterations between logging out\n        learningRate: 0.3, // multiply's against the input and the delta then adds to momentum\n        momentum: 0.1, // multiply's against the specified \"change\" then adds to learning rate for change\n        callback: null, // a periodic call back that can be triggered while training\n        callbackPeriod: 10, // the number of iterations through the training data between callback calls\n        timeout: Infinity, // the max number of milliseconds to train for\n        praxis: null,\n        beta1: 0.9,\n        beta2: 0.999,\n        epsilon: 1e-8\n      };\n    }\n  }, {\n    key: 'defaults',\n    get: function get() {\n      return {\n        leakyReluAlpha: 0.01,\n        binaryThresh: 0.5,\n        hiddenLayers: null, // array of ints for the sizes of the hidden layers in the network\n        activation: 'sigmoid' // Supported activation types ['sigmoid', 'relu', 'leaky-relu', 'tanh']\n      };\n    }\n  }]);\n\n  function NeuralNetwork() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, NeuralNetwork);\n\n    Object.assign(this, this.constructor.defaults, options);\n    this.trainOpts = {};\n    this.updateTrainingOptions(Object.assign({}, this.constructor.trainDefaults, options));\n\n    this.sizes = null;\n    this.outputLayer = null;\n    this.biases = null; // weights for bias nodes\n    this.weights = null;\n    this.outputs = null;\n\n    // state for training\n    this.deltas = null;\n    this.changes = null; // for momentum\n    this.errors = null;\n    this.errorCheckInterval = 1;\n    if (!this.constructor.prototype.hasOwnProperty('runInput')) {\n      this.runInput = null;\n    }\n    if (!this.constructor.prototype.hasOwnProperty('calculateDeltas')) {\n      this.calculateDeltas = null;\n    }\n    this.inputLookup = null;\n    this.inputLookupLength = null;\n    this.outputLookup = null;\n    this.outputLookupLength = null;\n  }\n\n  /**\n   *\n   * Expects this.sizes to have been set\n   */\n\n\n  _createClass(NeuralNetwork, [{\n    key: 'initialize',\n    value: function initialize() {\n      if (!this.sizes) throw new Error('Sizes must be set before initializing');\n\n      this.outputLayer = this.sizes.length - 1;\n      this.biases = []; // weights for bias nodes\n      this.weights = [];\n      this.outputs = [];\n\n      // state for training\n      this.deltas = [];\n      this.changes = []; // for momentum\n      this.errors = [];\n\n      for (var layer = 0; layer <= this.outputLayer; layer++) {\n        var size = this.sizes[layer];\n        this.deltas[layer] = (0, _zeros2.default)(size);\n        this.errors[layer] = (0, _zeros2.default)(size);\n        this.outputs[layer] = (0, _zeros2.default)(size);\n\n        if (layer > 0) {\n          this.biases[layer] = (0, _randos2.default)(size);\n          this.weights[layer] = new Array(size);\n          this.changes[layer] = new Array(size);\n\n          for (var node = 0; node < size; node++) {\n            var prevSize = this.sizes[layer - 1];\n            this.weights[layer][node] = (0, _randos2.default)(prevSize);\n            this.changes[layer][node] = (0, _zeros2.default)(prevSize);\n          }\n        }\n      }\n\n      this.setActivation();\n      if (this.trainOpts.praxis === 'adam') {\n        this._setupAdam();\n      }\n    }\n\n    /**\n     *\n     * @param activation supported inputs: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n     */\n\n  }, {\n    key: 'setActivation',\n    value: function setActivation(activation) {\n      this.activation = activation ? activation : this.activation;\n      switch (this.activation) {\n        case 'sigmoid':\n          this.runInput = this.runInput || this._runInputSigmoid;\n          this.calculateDeltas = this.calculateDeltas || this._calculateDeltasSigmoid;\n          break;\n        case 'relu':\n          this.runInput = this.runInput || this._runInputRelu;\n          this.calculateDeltas = this.calculateDeltas || this._calculateDeltasRelu;\n          break;\n        case 'leaky-relu':\n          this.runInput = this.runInput || this._runInputLeakyRelu;\n          this.calculateDeltas = this.calculateDeltas || this._calculateDeltasLeakyRelu;\n          break;\n        case 'tanh':\n          this.runInput = this.runInput || this._runInputTanh;\n          this.calculateDeltas = this.calculateDeltas || this._calculateDeltasTanh;\n          break;\n        default:\n          throw new Error('unknown activation ' + this.activation + ', The activation should be one of [\\'sigmoid\\', \\'relu\\', \\'leaky-relu\\', \\'tanh\\']');\n      }\n    }\n\n    /**\n     *\n     * @returns boolean\n     */\n\n  }, {\n    key: 'run',\n\n\n    /**\n     *\n     * @param input\n     * @returns {*}\n     */\n    value: function run(input) {\n      if (!this.isRunnable) return null;\n      if (this.inputLookup) {\n        input = _lookup3.default.toArray(this.inputLookup, input, this.inputLookupLength);\n      }\n\n      var output = this.runInput(input).slice(0);\n\n      if (this.outputLookup) {\n        output = _lookup3.default.toObject(this.outputLookup, output);\n      }\n      return output;\n    }\n\n    /**\n     * trains via sigmoid\n     * @param input\n     * @returns {*}\n     */\n\n  }, {\n    key: '_runInputSigmoid',\n    value: function _runInputSigmoid(input) {\n      this.outputs[0] = input; // set output state of input layer\n\n      var output = null;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var weights = this.weights[layer][node];\n\n          var sum = this.biases[layer][node];\n          for (var k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          //sigmoid\n          this.outputs[layer][node] = 1 / (1 + Math.exp(-sum));\n        }\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: '_runInputRelu',\n    value: function _runInputRelu(input) {\n      this.outputs[0] = input; // set output state of input layer\n\n      var output = null;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var weights = this.weights[layer][node];\n\n          var sum = this.biases[layer][node];\n          for (var k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          //relu\n          this.outputs[layer][node] = sum < 0 ? 0 : sum;\n        }\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: '_runInputLeakyRelu',\n    value: function _runInputLeakyRelu(input) {\n      this.outputs[0] = input; // set output state of input layer\n      var alpha = this.leakyReluAlpha;\n      var output = null;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var weights = this.weights[layer][node];\n\n          var sum = this.biases[layer][node];\n          for (var k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          //leaky relu\n          this.outputs[layer][node] = sum < 0 ? 0 : alpha * sum;\n        }\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n  }, {\n    key: '_runInputTanh',\n    value: function _runInputTanh(input) {\n      this.outputs[0] = input; // set output state of input layer\n\n      var output = null;\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var weights = this.weights[layer][node];\n\n          var sum = this.biases[layer][node];\n          for (var k = 0; k < weights.length; k++) {\n            sum += weights[k] * input[k];\n          }\n          //tanh\n          this.outputs[layer][node] = Math.tanh(sum);\n        }\n        output = input = this.outputs[layer];\n      }\n      return output;\n    }\n\n    /**\n     *\n     * @param data\n     * Verifies network sizes are initialized\n     * If they are not it will initialize them based off the data set.\n     */\n\n  }, {\n    key: 'verifyIsInitialized',\n    value: function verifyIsInitialized(data) {\n      var _this = this;\n\n      if (this.sizes) return;\n\n      this.sizes = [];\n      this.sizes.push(data[0].input.length);\n      if (!this.hiddenLayers) {\n        this.sizes.push(Math.max(3, Math.floor(data[0].input.length / 2)));\n      } else {\n        this.hiddenLayers.forEach(function (size) {\n          _this.sizes.push(size);\n        });\n      }\n      this.sizes.push(data[0].output.length);\n\n      this.initialize();\n    }\n\n    /**\n     *\n     * @param options\n     *    Supports all `trainDefaults` properties\n     *    also supports:\n     *       learningRate: (number),\n     *       momentum: (number),\n     *       activation: 'sigmoid', 'relu', 'leaky-relu', 'tanh'\n     */\n\n  }, {\n    key: 'updateTrainingOptions',\n    value: function updateTrainingOptions(options) {\n      var trainDefaults = this.constructor.trainDefaults;\n      for (var p in trainDefaults) {\n        if (!trainDefaults.hasOwnProperty(p)) continue;\n        this.trainOpts[p] = options.hasOwnProperty(p) ? options[p] : trainDefaults[p];\n      }\n      this.validateTrainingOptions(this.trainOpts);\n      this.setLogMethod(options.log || this.trainOpts.log);\n      this.activation = options.activation || this.activation;\n    }\n\n    /**\n     *\n     * @param options\n     */\n\n  }, {\n    key: 'validateTrainingOptions',\n    value: function validateTrainingOptions(options) {\n      var validations = {\n        iterations: function iterations(val) {\n          return typeof val === 'number' && val > 0;\n        },\n        errorThresh: function errorThresh(val) {\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        log: function log(val) {\n          return typeof val === 'function' || typeof val === 'boolean';\n        },\n        logPeriod: function logPeriod(val) {\n          return typeof val === 'number' && val > 0;\n        },\n        learningRate: function learningRate(val) {\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        momentum: function momentum(val) {\n          return typeof val === 'number' && val > 0 && val < 1;\n        },\n        callback: function callback(val) {\n          return typeof val === 'function' || val === null;\n        },\n        callbackPeriod: function callbackPeriod(val) {\n          return typeof val === 'number' && val > 0;\n        },\n        timeout: function timeout(val) {\n          return typeof val === 'number' && val > 0;\n        }\n      };\n      for (var p in validations) {\n        if (!validations.hasOwnProperty(p)) continue;\n        if (!options.hasOwnProperty(p)) continue;\n        if (!validations[p](options[p])) {\n          throw new Error('[' + p + ', ' + options[p] + '] is out of normal training range, your network will probably not train.');\n        }\n      }\n    }\n\n    /**\n     *\n     *  Gets JSON of trainOpts object\n     *    NOTE: Activation is stored directly on JSON object and not in the training options\n     */\n\n  }, {\n    key: 'getTrainOptsJSON',\n    value: function getTrainOptsJSON() {\n      var _this2 = this;\n\n      return Object.keys(this.constructor.trainDefaults).reduce(function (opts, opt) {\n        if (opt === 'timeout' && _this2.trainOpts[opt] === Infinity) return opts;\n        if (opt === 'callback') return opts;\n        if (_this2.trainOpts[opt]) opts[opt] = _this2.trainOpts[opt];\n        if (opt === 'log') opts.log = typeof opts.log === 'function';\n        return opts;\n      }, {});\n    }\n\n    /**\n     *\n     * @param log\n     * if a method is passed in method is used\n     * if false passed in nothing is logged\n     * @returns error\n     */\n\n  }, {\n    key: 'setLogMethod',\n    value: function setLogMethod(log) {\n      if (typeof log === 'function') {\n        this.trainOpts.log = log;\n      } else if (log) {\n        this.trainOpts.log = console.log;\n      } else {\n        this.trainOpts.log = false;\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {Number} error\n     */\n\n  }, {\n    key: 'calculateTrainingError',\n    value: function calculateTrainingError(data) {\n      var sum = 0;\n      for (var i = 0; i < data.length; ++i) {\n        sum += this.trainPattern(data[i], true);\n      }\n      return sum / data.length;\n    }\n\n    /**\n     * @param data\n     */\n\n  }, {\n    key: 'trainPatterns',\n    value: function trainPatterns(data) {\n      for (var i = 0; i < data.length; ++i) {\n        this.trainPattern(data[i]);\n      }\n    }\n\n    /**\n     *\n     * @param {object} data\n     * @param {object} status { iterations: number, error: number }\n     * @param endTime\n     */\n\n  }, {\n    key: 'trainingTick',\n    value: function trainingTick(data, status, endTime) {\n      if (status.iterations >= this.trainOpts.iterations || status.error <= this.trainOpts.errorThresh || Date.now() >= endTime) {\n        return false;\n      }\n\n      status.iterations++;\n\n      if (this.trainOpts.log && status.iterations % this.trainOpts.logPeriod === 0) {\n        status.error = this.calculateTrainingError(data);\n        this.trainOpts.log('iterations: ' + status.iterations + ', training error: ' + status.error);\n      } else {\n        if (status.iterations % this.errorCheckInterval === 0) {\n          status.error = this.calculateTrainingError(data);\n        } else {\n          this.trainPatterns(data);\n        }\n      }\n\n      if (this.trainOpts.callback && status.iterations % this.trainOpts.callbackPeriod === 0) {\n        this.trainOpts.callback({\n          iterations: status.iterations,\n          error: status.error\n        });\n      }\n      return true;\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @protected\n     * @return {object} { data, status, endTime }\n     */\n\n  }, {\n    key: 'prepTraining',\n    value: function prepTraining(data, options) {\n      this.updateTrainingOptions(options);\n      data = this.formatData(data);\n      var endTime = Date.now() + this.trainOpts.timeout;\n\n      var status = {\n        error: 1,\n        iterations: 0\n      };\n\n      this.verifyIsInitialized(data);\n\n      return {\n        data: data,\n        status: status,\n        endTime: endTime\n      };\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @returns {object} {error: number, iterations: number}\n     */\n\n  }, {\n    key: 'train',\n    value: function train(data) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var status = void 0,\n          endTime = void 0;\n\n      var _prepTraining = this.prepTraining(data, options);\n\n      data = _prepTraining.data;\n      status = _prepTraining.status;\n      endTime = _prepTraining.endTime;\n\n\n      while (this.trainingTick(data, status, endTime)) {}\n      return status;\n    }\n\n    /**\n     *\n     * @param data\n     * @param options\n     * @returns {Promise}\n     * @resolves {{error: number, iterations: number}}\n     * @rejects {{trainError: string, status: {error: number, iterations: number}}\n     */\n\n  }, {\n    key: 'trainAsync',\n    value: function trainAsync(data) {\n      var _this3 = this;\n\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n      var status = void 0,\n          endTime = void 0;\n\n      var _prepTraining2 = this.prepTraining(data, options);\n\n      data = _prepTraining2.data;\n      status = _prepTraining2.status;\n      endTime = _prepTraining2.endTime;\n\n\n      return new Promise(function (resolve, reject) {\n        try {\n          var thawedTrain = new _thaw2.default(new Array(_this3.trainOpts.iterations), {\n            delay: true,\n            each: function each() {\n              return _this3.trainingTick(data, status, endTime) || thawedTrain.stop();\n            },\n            done: function done() {\n              return resolve(status);\n            }\n          });\n          thawedTrain.tick();\n        } catch (trainError) {\n          reject({ trainError: trainError, status: status });\n        }\n      });\n    }\n\n    /**\n     *\n     * @param {object} value\n     * @param {boolean} [logErrorRate]\n     */\n\n  }, {\n    key: 'trainPattern',\n    value: function trainPattern(value, logErrorRate) {\n      // forward propagate\n      this.runInput(value.input);\n\n      // back propagate\n      this.calculateDeltas(value.output);\n      this.adjustWeights();\n\n      if (logErrorRate) {\n        return (0, _mse2.default)(this.errors[this.outputLayer]);\n      } else {\n        return null;\n      }\n    }\n\n    /**\n     *\n     * @param target\n     */\n\n  }, {\n    key: '_calculateDeltasSigmoid',\n    value: function _calculateDeltasSigmoid(target) {\n      for (var layer = this.outputLayer; layer >= 0; layer--) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var output = this.outputs[layer][node];\n\n          var error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            var deltas = this.deltas[layer + 1];\n            for (var k = 0; k < deltas.length; k++) {\n              error += deltas[k] * this.weights[layer + 1][k][node];\n            }\n          }\n          this.errors[layer][node] = error;\n          this.deltas[layer][node] = error * output * (1 - output);\n        }\n      }\n    }\n\n    /**\n     *\n     * @param target\n     */\n\n  }, {\n    key: '_calculateDeltasRelu',\n    value: function _calculateDeltasRelu(target) {\n      for (var layer = this.outputLayer; layer >= 0; layer--) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var output = this.outputs[layer][node];\n\n          var error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            var deltas = this.deltas[layer + 1];\n            for (var k = 0; k < deltas.length; k++) {\n              error += deltas[k] * this.weights[layer + 1][k][node];\n            }\n          }\n          this.errors[layer][node] = error;\n          this.deltas[layer][node] = output > 0 ? error : 0;\n        }\n      }\n    }\n\n    /**\n     *\n     * @param target\n     */\n\n  }, {\n    key: '_calculateDeltasLeakyRelu',\n    value: function _calculateDeltasLeakyRelu(target) {\n      var alpha = this.leakyReluAlpha;\n      for (var layer = this.outputLayer; layer >= 0; layer--) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var output = this.outputs[layer][node];\n\n          var error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            var deltas = this.deltas[layer + 1];\n            for (var k = 0; k < deltas.length; k++) {\n              error += deltas[k] * this.weights[layer + 1][k][node];\n            }\n          }\n          this.errors[layer][node] = error;\n          this.deltas[layer][node] = output > 0 ? error : alpha * error;\n        }\n      }\n    }\n\n    /**\n     *\n     * @param target\n     */\n\n  }, {\n    key: '_calculateDeltasTanh',\n    value: function _calculateDeltasTanh(target) {\n      for (var layer = this.outputLayer; layer >= 0; layer--) {\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var output = this.outputs[layer][node];\n\n          var error = 0;\n          if (layer === this.outputLayer) {\n            error = target[node] - output;\n          } else {\n            var deltas = this.deltas[layer + 1];\n            for (var k = 0; k < deltas.length; k++) {\n              error += deltas[k] * this.weights[layer + 1][k][node];\n            }\n          }\n          this.errors[layer][node] = error;\n          this.deltas[layer][node] = (1 - output * output) * error;\n        }\n      }\n    }\n\n    /**\n     *\n     * Changes weights of networks\n     */\n\n  }, {\n    key: 'adjustWeights',\n    value: function adjustWeights() {\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        var incoming = this.outputs[layer - 1];\n\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var delta = this.deltas[layer][node];\n\n          for (var k = 0; k < incoming.length; k++) {\n            var change = this.changes[layer][node][k];\n\n            change = this.trainOpts.learningRate * delta * incoming[k] + this.trainOpts.momentum * change;\n\n            this.changes[layer][node][k] = change;\n            this.weights[layer][node][k] += change;\n          }\n          this.biases[layer][node] += this.trainOpts.learningRate * delta;\n        }\n      }\n    }\n  }, {\n    key: '_setupAdam',\n    value: function _setupAdam() {\n      this.biasChangesLow = [];\n      this.biasChangesHigh = [];\n      this.changesLow = [];\n      this.changesHigh = [];\n      this.iterations = 0;\n\n      for (var layer = 0; layer <= this.outputLayer; layer++) {\n        var size = this.sizes[layer];\n        if (layer > 0) {\n          this.biasChangesLow[layer] = (0, _zeros2.default)(size);\n          this.biasChangesHigh[layer] = (0, _zeros2.default)(size);\n          this.changesLow[layer] = new Array(size);\n          this.changesHigh[layer] = new Array(size);\n\n          for (var node = 0; node < size; node++) {\n            var prevSize = this.sizes[layer - 1];\n            this.changesLow[layer][node] = (0, _zeros2.default)(prevSize);\n            this.changesHigh[layer][node] = (0, _zeros2.default)(prevSize);\n          }\n        }\n      }\n\n      this.adjustWeights = this._adjustWeightsAdam;\n    }\n  }, {\n    key: '_adjustWeightsAdam',\n    value: function _adjustWeightsAdam() {\n      var trainOpts = this.trainOpts;\n      this.iterations++;\n\n      for (var layer = 1; layer <= this.outputLayer; layer++) {\n        var incoming = this.outputs[layer - 1];\n\n        for (var node = 0; node < this.sizes[layer]; node++) {\n          var delta = this.deltas[layer][node];\n\n          for (var k = 0; k < incoming.length; k++) {\n            var gradient = delta * incoming[k];\n            var changeLow = this.changesLow[layer][node][k] * trainOpts.beta1 + (1 - trainOpts.beta1) * gradient;\n            var changeHigh = this.changesHigh[layer][node][k] * trainOpts.beta2 + (1 - trainOpts.beta2) * gradient * gradient;\n\n            var momentumCorrection = changeLow / (1 - Math.pow(trainOpts.beta1, this.iterations));\n            var gradientCorrection = changeHigh / (1 - Math.pow(trainOpts.beta2, this.iterations));\n\n            this.changesLow[layer][node][k] = changeLow;\n            this.changesHigh[layer][node][k] = changeHigh;\n            this.weights[layer][node][k] += this.trainOpts.learningRate * momentumCorrection / (Math.sqrt(gradientCorrection) + trainOpts.epsilon);\n          }\n\n          var biasGradient = this.deltas[layer][node];\n          var biasChangeLow = this.biasChangesLow[layer][node] * trainOpts.beta1 + (1 - trainOpts.beta1) * biasGradient;\n          var biasChangeHigh = this.biasChangesHigh[layer][node] * trainOpts.beta2 + (1 - trainOpts.beta2) * biasGradient * biasGradient;\n\n          var biasMomentumCorrection = this.biasChangesLow[layer][node] / (1 - Math.pow(trainOpts.beta1, this.iterations));\n          var biasGradientCorrection = this.biasChangesHigh[layer][node] / (1 - Math.pow(trainOpts.beta2, this.iterations));\n\n          this.biasChangesLow[layer][node] = biasChangeLow;\n          this.biasChangesHigh[layer][node] = biasChangeHigh;\n          this.biases[layer][node] += trainOpts.learningRate * biasMomentumCorrection / (Math.sqrt(biasGradientCorrection) + trainOpts.epsilon);\n        }\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {*}\n     */\n\n  }, {\n    key: 'formatData',\n    value: function formatData(data) {\n      if (!Array.isArray(data)) {\n        // turn stream datum into array\n        data = [data];\n      }\n\n      if (!Array.isArray(data[0].input)) {\n        if (this.inputLookup) {\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        } else {\n          var inputLookup = new _lookupTable2.default(data, 'input');\n          this.inputLookup = inputLookup.table;\n          this.inputLookupLength = inputLookup.length;\n        }\n      }\n\n      if (!Array.isArray(data[0].output)) {\n        if (this.outputLookup) {\n          this.outputLookupLength = Object.keys(this.outputLookup).length;\n        } else {\n          var _lookup = new _lookupTable2.default(data, 'output');\n          this.outputLookup = _lookup.table;\n          this.outputLookupLength = _lookup.length;\n        }\n      }\n\n      if (typeof this._formatInput === 'undefined') {\n        this._formatInput = getTypedArrayFn(data[0].input, this.inputLookup);\n        this._formatOutput = getTypedArrayFn(data[0].output, this.outputLookup);\n      }\n\n      // turn sparse hash input into arrays with 0s as filler\n      if (this._formatInput && this._formatOutput) {\n        var result = [];\n        for (var i = 0; i < data.length; i++) {\n          result.push({\n            input: this._formatInput(data[i].input),\n            output: this._formatOutput(data[i].output)\n          });\n        }\n        return result;\n      } else if (this._formatInput) {\n        var _result = [];\n        for (var _i = 0; _i < data.length; _i++) {\n          _result.push({\n            input: this._formatInput(data[_i].input),\n            output: data[_i].output\n          });\n        }\n        return _result;\n      } else if (this._formatOutput) {\n        var _result2 = [];\n        for (var _i2 = 0; _i2 < data.length; _i2++) {\n          _result2.push({\n            input: data[_i2].input,\n            output: this._formatOutput(data[_i2].output)\n          });\n        }\n        return _result2;\n      }\n      return data;\n    }\n  }, {\n    key: 'addFormat',\n    value: function addFormat(data) {\n      this.inputLookup = _lookup3.default.addKeys(data.input, this.inputLookup);\n      if (this.inputLookup) {\n        this.inputLookupLength = Object.keys(this.inputLookup).length;\n      }\n      this.outputLookup = _lookup3.default.addKeys(data.output, this.outputLookup);\n      if (this.outputLookup) {\n        this.outputLookupLength = Object.keys(this.outputLookup).length;\n      }\n    }\n\n    /**\n     *\n     * @param data\n     * @returns {\n     *  {\n     *    error: number,\n     *    misclasses: Array,\n     *  }\n     * }\n     */\n\n  }, {\n    key: 'test',\n    value: function test(data) {\n      var _this4 = this;\n\n      data = this.formatData(data);\n      // for binary classification problems with one output node\n      var isBinary = data[0].output.length === 1;\n      // for classification problems\n      var misclasses = [];\n      // run each pattern through the trained network and collect\n      // error and misclassification statistics\n      var errorSum = 0;\n\n      if (isBinary) {\n        var falsePos = 0;\n        var falseNeg = 0;\n        var truePos = 0;\n        var trueNeg = 0;\n\n        var _loop = function _loop(i) {\n          var output = _this4.runInput(data[i].input);\n          var target = data[i].output;\n          var actual = output[0] > _this4.binaryThresh ? 1 : 0;\n          var expected = target[0];\n\n          if (actual !== expected) {\n            var misclass = data[i];\n            misclasses.push({\n              input: misclass.input,\n              output: misclass.output,\n              actual: actual,\n              expected: expected\n            });\n          }\n\n          if (actual === 0 && expected === 0) {\n            trueNeg++;\n          } else if (actual === 1 && expected === 1) {\n            truePos++;\n          } else if (actual === 0 && expected === 1) {\n            falseNeg++;\n          } else if (actual === 1 && expected === 0) {\n            falsePos++;\n          }\n\n          errorSum += (0, _mse2.default)(output.map(function (value, i) {\n            return target[i] - value;\n          }));\n        };\n\n        for (var i = 0; i < data.length; i++) {\n          _loop(i);\n        }\n\n        return {\n          error: errorSum / data.length,\n          misclasses: misclasses,\n          total: data.length,\n          trueNeg: trueNeg,\n          truePos: truePos,\n          falseNeg: falseNeg,\n          falsePos: falsePos,\n          precision: truePos > 0 ? truePos / (truePos + falsePos) : 0,\n          recall: truePos > 0 ? truePos / (truePos + falseNeg) : 0,\n          accuracy: (trueNeg + truePos) / data.length\n        };\n      }\n\n      var _loop2 = function _loop2(i) {\n        var output = _this4.runInput(data[i].input);\n        var target = data[i].output;\n        var actual = output.indexOf((0, _max2.default)(output));\n        var expected = target.indexOf((0, _max2.default)(target));\n\n        if (actual !== expected) {\n          var misclass = data[i];\n          misclasses.push({\n            input: misclass.input,\n            output: misclass.output,\n            actual: actual,\n            expected: expected\n          });\n        }\n\n        errorSum += (0, _mse2.default)(output.map(function (value, i) {\n          return target[i] - value;\n        }));\n      };\n\n      for (var i = 0; i < data.length; i++) {\n        _loop2(i);\n      }\n      return {\n        error: errorSum / data.length,\n        misclasses: misclasses,\n        total: data.length\n      };\n    }\n\n    /**\n     *\n     * @returns\n     *  {\n     *    layers: [\n     *      {\n     *        x: {},\n     *        y: {}\n     *      },\n     *      {\n     *        '0': {\n     *          bias: -0.98771313,\n     *          weights: {\n     *            x: 0.8374838,\n     *            y: 1.245858\n     *          },\n     *        '1': {\n     *          bias: 3.48192004,\n     *          weights: {\n     *            x: 1.7825821,\n     *            y: -2.67899\n     *          }\n     *        }\n     *      },\n     *      {\n     *        f: {\n     *          bias: 0.27205739,\n     *          weights: {\n     *            '0': 1.3161821,\n     *            '1': 2.00436\n     *          }\n     *        }\n     *      }\n     *    ]\n     *  }\n     */\n\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      var layers = [];\n      for (var layer = 0; layer <= this.outputLayer; layer++) {\n        layers[layer] = {};\n\n        var nodes = void 0;\n        // turn any internal arrays back into hashes for readable json\n        if (layer === 0 && this.inputLookup) {\n          nodes = Object.keys(this.inputLookup);\n        } else if (this.outputLookup && layer === this.outputLayer) {\n          nodes = Object.keys(this.outputLookup);\n        } else {\n          nodes = (0, _range2.default)(0, this.sizes[layer]);\n        }\n\n        for (var j = 0; j < nodes.length; j++) {\n          var node = nodes[j];\n          layers[layer][node] = {};\n\n          if (layer > 0) {\n            layers[layer][node].bias = this.biases[layer][j];\n            layers[layer][node].weights = {};\n            for (var k in layers[layer - 1]) {\n              var index = k;\n              if (layer === 1 && this.inputLookup) {\n                index = this.inputLookup[k];\n              }\n              layers[layer][node].weights[k] = this.weights[layer][j][index];\n            }\n          }\n        }\n      }\n      return {\n        sizes: this.sizes.slice(0),\n        layers: layers,\n        outputLookup: this.outputLookup !== null,\n        inputLookup: this.inputLookup !== null,\n        activation: this.activation,\n        trainOpts: this.getTrainOptsJSON()\n      };\n    }\n\n    /**\n     *\n     * @param json\n     * @returns {NeuralNetwork}\n     */\n\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(json) {\n      Object.assign(this, this.constructor.defaults, json);\n      this.sizes = json.sizes;\n      this.initialize();\n\n      for (var i = 0; i <= this.outputLayer; i++) {\n        var layer = json.layers[i];\n        if (i === 0 && (!layer[0] || json.inputLookup)) {\n          this.inputLookup = _lookup3.default.toHash(layer);\n          this.inputLookupLength = Object.keys(this.inputLookup).length;\n        } else if (i === this.outputLayer && (!layer[0] || json.outputLookup)) {\n          this.outputLookup = _lookup3.default.toHash(layer);\n        }\n        if (i > 0) {\n          var nodes = Object.keys(layer);\n          this.sizes[i] = nodes.length;\n          for (var j in nodes) {\n            var node = nodes[j];\n            this.biases[i][j] = layer[node].bias;\n            this.weights[i][j] = (0, _toArray2.default)(layer[node].weights);\n          }\n        }\n      }\n      if (json.hasOwnProperty('trainOpts')) {\n        this.updateTrainingOptions(json.trainOpts);\n      }\n      return this;\n    }\n\n    /**\n     *\n     * @returns {Function}\n     */\n\n  }, {\n    key: 'toFunction',\n    value: function toFunction() {\n      var activation = this.activation;\n      var leakyReluAlpha = this.leakyReluAlpha;\n      var needsVar = false;\n      function nodeHandle(layers, layerNumber, nodeKey) {\n        if (layerNumber === 0) {\n          return typeof nodeKey === 'string' ? 'input[\\'' + nodeKey + '\\']' : 'input[' + nodeKey + ']';\n        }\n\n        var layer = layers[layerNumber];\n        var node = layer[nodeKey];\n        var result = ['(', node.bias];\n        for (var w in node.weights) {\n          if (node.weights[w] < 0) {\n            result.push(node.weights[w] + '*' + nodeHandle(layers, layerNumber - 1, w));\n          } else {\n            result.push('+' + node.weights[w] + '*' + nodeHandle(layers, layerNumber - 1, w));\n          }\n        }\n        result.push(')');\n\n        switch (activation) {\n          case 'sigmoid':\n            return '1/(1+1/Math.exp(' + result.join('') + '))';\n          case 'relu':\n            {\n              needsVar = true;\n              return '((v=' + result.join('') + ')<0?0:v)';\n            }\n          case 'leaky-relu':\n            {\n              needsVar = true;\n              return '((v=' + result.join('') + ')<0?0:' + leakyReluAlpha + '*v)';\n            }\n          case 'tanh':\n            return 'Math.tanh(' + result.join('') + ')';\n          default:\n            throw new Error('unknown activation type ' + activation);\n        }\n      }\n\n      var layers = this.toJSON().layers;\n      var layersAsMath = [];\n      var result = void 0;\n      for (var i in layers[layers.length - 1]) {\n        layersAsMath.push(nodeHandle(layers, layers.length - 1, i));\n      }\n      if (this.outputLookup) {\n        result = '{' + Object.keys(this.outputLookup).map(function (key, i) {\n          return '\\'' + key + '\\':' + layersAsMath[i];\n        }) + '}';\n      } else {\n        result = '[' + layersAsMath.join(',') + ']';\n      }\n\n      return new Function('input', (needsVar ? 'var v;' : '') + 'return ' + result + ';');\n    }\n  }, {\n    key: 'isRunnable',\n    get: function get() {\n      var _this5 = this;\n\n      if (!this.runInput) {\n        console.error('Activation function has not been initialized, did you run train()?');\n        return false;\n      }\n\n      var checkFns = ['sizes', 'outputLayer', 'biases', 'weights', 'outputs', 'deltas', 'changes', 'errors'].filter(function (c) {\n        return _this5[c] === null;\n      });\n\n      if (checkFns.length > 0) {\n        console.error('Some settings have not been initialized correctly, did you run train()? Found issues with: ' + checkFns.join(', '));\n        return false;\n      }\n      return true;\n    }\n  }]);\n\n  return NeuralNetwork;\n}();\n\nexports.default = NeuralNetwork;\n\n\nfunction getTypedArrayFn(value, table) {\n  if (value.buffer instanceof ArrayBuffer) {\n    return null;\n  } else if (Array.isArray(value)) {\n    return _cast.arrayToFloat32Array;\n  } else {\n    var length = Object.keys(table).length;\n    return function (v) {\n      var array = new Float32Array(length);\n      for (var p in table) {\n        array[table[p]] = v[p] || 0;\n      }\n      return array;\n    };\n  }\n}\n//# sourceMappingURL=neural-network.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (cpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    let Input = function() {};\\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {        \\n        this.argumentsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.built = false;\\n        this.program = null;\\n        this.paramNames = ' + JSON.stringify(cpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(cpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(cpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n        this._kernelString = `' + cpuKernel._kernelString + '`;\\n        this.output = ' + JSON.stringify(cpuKernel.output) + ';\\n\\t\\t    this.run = function() {\\n          this.run = null;\\n          this.build();\\n          return this.run.apply(this, arguments);\\n        }.bind(this);\\n        this.thread = {\\n          x: 0,\\n          y: 0,\\n          z: 0\\n        };\\n      }\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      setInput(Type) { Input = Type; }\\n      ' + removeFnNoise(cpuKernel.build.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupParams.toString()) + '\\n      ' + removeFnNoise(cpuKernel.setupConstants.toString()) + '\\n      run () { ' + cpuKernel.kernelString + ' }\\n      getKernelString() { return this._kernelString; }\\n      ' + removeFnNoise(cpuKernel.validateOptions.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGL2FunctionBuilder = require('./function-builder');\nvar WebGL2Kernel = require('./kernel');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGL2Runner, _RunnerBase);\n\n\t/**\n  * @constructor WebGL2Runner\n  *\n  * @extends RunnerBase\n \t * @desc Instantiates a Runner instance for the kernel.\n  *\n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGL2Runner(settings) {\n\t\t_classCallCheck(this, WebGL2Runner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGL2Runner.__proto__ || Object.getPrototypeOf(WebGL2Runner)).call(this, new WebGL2FunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGL2Kernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGL2Runner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  *\n  * @returns {String} The current mode; \"gpu\".\n  *\n  */\n\n\n\t_createClass(WebGL2Runner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGL2Runner;\n}(RunnerBase);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// a duplex stream is just a stream that is both readable and writable.\n// Since JS doesn't have multiple prototypal inheritance, this class\n// prototypally inherits from Readable, and then parasitically from\n// Writable.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\n/*<replacement>*/\nvar objectKeys = Object.keys || function (obj) {\n  var keys = [];\n  for (var key in obj) {\n    keys.push(key);\n  }return keys;\n};\n/*</replacement>*/\n\nmodule.exports = Duplex;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\nvar Readable = require('./_stream_readable');\nvar Writable = require('./_stream_writable');\n\nutil.inherits(Duplex, Readable);\n\n{\n  // avoid scope creep, the keys array can then be collected\n  var keys = objectKeys(Writable.prototype);\n  for (var v = 0; v < keys.length; v++) {\n    var method = keys[v];\n    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];\n  }\n}\n\nfunction Duplex(options) {\n  if (!(this instanceof Duplex)) return new Duplex(options);\n\n  Readable.call(this, options);\n  Writable.call(this, options);\n\n  if (options && options.readable === false) this.readable = false;\n\n  if (options && options.writable === false) this.writable = false;\n\n  this.allowHalfOpen = true;\n  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;\n\n  this.once('end', onend);\n}\n\nObject.defineProperty(Duplex.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// the no-half-open enforcer\nfunction onend() {\n  // if we allow half-open state, or if the writable side ended,\n  // then we're ok.\n  if (this.allowHalfOpen || this._writableState.ended) return;\n\n  // no more data can be written.\n  // But allow more writes to happen in this tick.\n  pna.nextTick(onEndNT, this);\n}\n\nfunction onEndNT(self) {\n  self.end();\n}\n\nObject.defineProperty(Duplex.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed && this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (this._readableState === undefined || this._writableState === undefined) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n    this._writableState.destroyed = value;\n  }\n});\n\nDuplex.prototype._destroy = function (err, cb) {\n  this.push(null);\n  this.end();\n\n  pna.nextTick(cb, err);\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = mse;\nfunction mse(errors) {\n  // mean squared error\n  var sum = 0;\n  for (var i = 0; i < errors.length; i++) {\n    sum += errors[i] * errors[i];\n  }\n  return sum / errors.length;\n}\n//# sourceMappingURL=mse.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = add;\n/**\n * add {left} and {right} matrix weights into {into}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction add(product, left, right) {\n  for (var i = 0; i < left.weights.length; i++) {\n    product.weights[i] = left.weights[i] + right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=add.js.map","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict';\n\nvar utils = require('./utils');\nmodule.exports = function alias(name, fn) {\n\tvar fnString = fn.toString();\n\treturn new Function('return function ' + name + ' (' + utils.getParamNamesFromString(fnString).join(', ') + ') {' + utils.getFunctionBodyFromString(fnString) + '}')();\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = reluB;\n/**\n * adds {from} deltas to {m} deltas when {m} weights are above other a threshold of 0\n * @param {Matrix} product\n * @param {Matrix} m\n */\nfunction reluB(product, left) {\n  for (var i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = left.weights[i] > 0 ? product.deltas[i] : 0;\n  }\n}\n//# sourceMappingURL=relu-b.js.map","\n/**\n * Module exports.\n */\n\nmodule.exports = deprecate;\n\n/**\n * Mark that a method should not be used.\n * Returns a modified function which warns once by default.\n *\n * If `localStorage.noDeprecation = true` is set, then it is a no-op.\n *\n * If `localStorage.throwDeprecation = true` is set, then deprecated functions\n * will throw an Error when invoked.\n *\n * If `localStorage.traceDeprecation = true` is set, then deprecated functions\n * will invoke `console.trace()` instead of `console.error()`.\n *\n * @param {Function} fn - the function to deprecate\n * @param {String} msg - the string to print to the console when `fn` is invoked\n * @returns {Function} a new \"deprecated\" version of `fn`\n * @api public\n */\n\nfunction deprecate (fn, msg) {\n  if (config('noDeprecation')) {\n    return fn;\n  }\n\n  var warned = false;\n  function deprecated() {\n    if (!warned) {\n      if (config('throwDeprecation')) {\n        throw new Error(msg);\n      } else if (config('traceDeprecation')) {\n        console.trace(msg);\n      } else {\n        console.warn(msg);\n      }\n      warned = true;\n    }\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n}\n\n/**\n * Checks `localStorage` for boolean values for the given `name`.\n *\n * @param {String} name\n * @returns {Boolean}\n * @api private\n */\n\nfunction config (name) {\n  // accessing global.localStorage can trigger a DOMException in sandboxed iframes\n  try {\n    if (!global.localStorage) return false;\n  } catch (_) {\n    return false;\n  }\n  var val = global.localStorage[name];\n  if (null == val) return false;\n  return String(val).toLowerCase() === 'true';\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nmodule.exports = function () {\n\n\t/**\n  * @desc WebGl Texture implementation in JS\n  * @constructor Texture\n  * @param {Object} texture\n  * @param {Array} size\n  * @param dimensions\n  * @param {Array} output\n  * @param {Object} webGl\n  * @param {String} [type]\n  */\n\tfunction Texture(texture, size, dimensions, output, webGl) {\n\t\tvar type = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 'NumberTexture';\n\n\t\t_classCallCheck(this, Texture);\n\n\t\tthis.texture = texture;\n\t\tthis.size = size;\n\t\tthis.dimensions = dimensions;\n\t\tthis.output = output;\n\t\tthis.webGl = webGl;\n\t\tthis.kernel = null;\n\t\tthis.type = type;\n\t}\n\n\t/**\n  * @name toArray\n  * @function\n  * @memberOf Texture#\n  *\n  * @desc Converts the Texture into a JavaScript Array.\n  * \n  * @param {Object} The `gpu` Object\n  *\n  */\n\n\n\t_createClass(Texture, [{\n\t\tkey: 'toArray',\n\t\tvalue: function toArray(gpu) {\n\t\t\tif (!gpu) throw new Error('You need to pass the GPU object for toArray to work.');\n\t\t\tif (this.kernel) return this.kernel(this);\n\n\t\t\tthis.kernel = gpu.createKernel(function (x) {\n\t\t\t\treturn x[this.thread.z][this.thread.y][this.thread.x];\n\t\t\t}).setOutput(this.output);\n\n\t\t\treturn this.kernel(this);\n\t\t}\n\n\t\t/**\n   * @name delete\n   * @desc Deletes the Texture.\n   * @function\n   * @memberOf Texture#\n   *\n   *\n   */\n\n\t}, {\n\t\tkey: 'delete',\n\t\tvalue: function _delete() {\n\t\t\treturn this.webGl.deleteTexture(this.texture);\n\t\t}\n\t}]);\n\n\treturn Texture;\n}();","module.exports = require('./readable').PassThrough\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = cloneNegative;\n/**\n *\n * @param {Matrix} product\n * @param {Matrix} left\n */\nfunction cloneNegative(product, left) {\n  product.rows = parseInt(left.rows);\n  product.columns = parseInt(left.columns);\n  product.weights = left.weights.slice(0);\n  product.deltas = left.deltas.slice(0);\n  for (var i = 0; i < left.weights.length; i++) {\n    product.weights[i] = -left.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=clone-negative.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = rowPluck;\n/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Number} rowPluckIndex\n */\nfunction rowPluck(product, left, rowPluckIndex) {\n  var columns = left.columns;\n  var rowBase = columns * rowPluckIndex;\n  for (var column = 0; column < columns; column++) {\n    product.weights[column] = left.weights[rowBase + column];\n    product.deltas[column] = 0;\n  }\n}\n//# sourceMappingURL=row-pluck.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar CrossValidate = function () {\n\n  /**\n   *\n   * @param {NeuralNetwork|constructor} Classifier\n   * @param {object} [options]\n   */\n  function CrossValidate(Classifier, options) {\n    _classCallCheck(this, CrossValidate);\n\n    this.Classifier = Classifier;\n    this.options = options;\n    this.json = null;\n  }\n\n  /**\n   *\n   * @param {object} trainOpts\n   * @param {object} trainSet\n   * @param {object} testSet\n   * @returns {void|*}\n   */\n\n\n  _createClass(CrossValidate, [{\n    key: 'testPartition',\n    value: function testPartition(trainOpts, trainSet, testSet) {\n      var classifier = new this.Classifier(this.options);\n      var beginTrain = Date.now();\n      var trainingStats = classifier.train(trainSet, trainOpts);\n      var beginTest = Date.now();\n      var testStats = classifier.test(testSet);\n      var endTest = Date.now();\n      var stats = Object.assign({}, testStats, {\n        trainTime: beginTest - beginTrain,\n        testTime: endTest - beginTest,\n        iterations: trainingStats.iterations,\n        error: trainingStats.error,\n        total: testStats.total,\n        learningRate: classifier.trainOpts.learningRate,\n        hiddenLayers: classifier.hiddenLayers,\n        network: classifier.toJSON()\n      });\n\n      return stats;\n    }\n\n    /**\n     * Randomize array element order in-place.\n     * Using Durstenfeld shuffle algorithm.\n     * source: http://stackoverflow.com/a/12646864/1324039\n     */\n\n  }, {\n    key: 'shuffleArray',\n    value: function shuffleArray(array) {\n      for (var i = array.length - 1; i > 0; i--) {\n        var j = Math.floor(Math.random() * (i + 1));\n        var temp = array[i];\n        array[i] = array[j];\n        array[j] = temp;\n      }\n      return array;\n    }\n\n    /**\n     *\n     * @param {object} data\n     * @param {object} trainOpts\n     * @param {number} [k]\n     * @returns {\n     *  {\n     *    avgs: {\n     *      error: number,\n     *      trainTime: number,\n     *      testTime: number,\n     *      iterations: number,\n     *      error: number\n     *    },\n     *    stats: {\n     *      truePos: number,\n     *      trueNeg: number,\n     *      falsePos: number,\n     *      falseNeg: number,\n     *      total: number\n     *    },\n     *    sets: Array\n     *  }\n     * }\n     */\n\n  }, {\n    key: 'train',\n    value: function train(data) {\n      var trainOpts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var k = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 4;\n\n      if (data.length < k) {\n        throw new Error('Training set size is too small for ' + data.length + ' k folds of ' + k);\n      }\n\n      var size = data.length / k;\n\n      if (data.constructor === Array) {\n        this.shuffleArray(data);\n      } else {\n        var newData = {};\n        this.shuffleArray(Object.keys(data)).forEach(function (key) {\n          newData[key] = data[key];\n        });\n        data = newData;\n      }\n\n      var avgs = {\n        trainTime: 0,\n        testTime: 0,\n        iterations: 0,\n        error: 0\n      };\n\n      var stats = {\n        total: 0\n      };\n\n      var binaryStats = {\n        total: 0,\n        truePos: 0,\n        trueNeg: 0,\n        falsePos: 0,\n        falseNeg: 0\n      };\n\n      var results = [];\n      var stat = void 0;\n      var isBinary = null;\n\n      for (var i = 0; i < k; i++) {\n        var dclone = data.slice(0);\n        var testSet = dclone.splice(i * size, size);\n        var trainSet = dclone;\n        var result = this.testPartition(trainOpts, trainSet, testSet);\n\n        if (isBinary === null) {\n          isBinary = result.hasOwnProperty('falseNeg') && result.hasOwnProperty('falsePos') && result.hasOwnProperty('trueNeg') && result.hasOwnProperty('truePos');\n          if (isBinary) {\n            Object.assign(stats, binaryStats);\n          }\n        }\n\n        for (stat in avgs) {\n          if (stat in avgs) {\n            avgs[stat] += result[stat];\n          }\n        }\n\n        for (stat in stats) {\n          if (stat in stats) {\n            stats[stat] += result[stat];\n          }\n        }\n\n        results.push(result);\n      }\n\n      for (stat in avgs) {\n        if (stat in avgs) {\n          avgs[stat] /= k;\n        }\n      }\n\n      if (isBinary) {\n        stats.precision = stats.truePos / (stats.truePos + stats.falsePos);\n        stats.recall = stats.truePos / (stats.truePos + stats.falseNeg);\n        stats.accuracy = (stats.trueNeg + stats.truePos) / stats.total;\n      }\n\n      stats.testSize = size;\n      stats.trainSize = data.length - size;\n\n      return this.json = {\n        avgs: avgs,\n        stats: stats,\n        sets: results\n      };\n    }\n  }, {\n    key: 'toNeuralNetwork',\n    value: function toNeuralNetwork() {\n      return this.fromJSON(this.json);\n    }\n  }, {\n    key: 'toJSON',\n    value: function toJSON() {\n      return this.json;\n    }\n  }, {\n    key: 'fromJSON',\n    value: function fromJSON(crossValidateJson) {\n      var Classifier = this.Classifier;\n      var json = crossValidateJson.sets.reduce(function (prev, cur) {\n        return prev.error < cur.error ? prev : cur;\n      }, { error: Infinity }).network;\n      if (Classifier.fromJSON) {\n        return Classifier.fromJSON(json);\n      }\n      var instance = new Classifier();\n      instance.fromJSON(json);\n      return instance;\n    }\n  }]);\n\n  return CrossValidate;\n}();\n\nexports.default = CrossValidate;\n//# sourceMappingURL=cross-validate.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.arraysToFloat32Arrays = arraysToFloat32Arrays;\nexports.arrayToFloat32Arrays = arrayToFloat32Arrays;\nexports.arrayToFloat32Array = arrayToFloat32Array;\nexports.objectsToFloat32Arrays = objectsToFloat32Arrays;\nexports.objectToFloat32Arrays = objectToFloat32Arrays;\nexports.objectToFloat32Array = objectToFloat32Array;\nfunction arraysToFloat32Arrays(arrays) {\n  var result = [];\n  for (var i = 0; i < arrays.length; i++) {\n    result.push(Float32Array.from(arrays[i]));\n  }\n  return result;\n}\nfunction arrayToFloat32Arrays(array) {\n  var result = [];\n  for (var i = 0; i < array.length; i++) {\n    result.push(Float32Array.from([array[i]]));\n  }\n  return result;\n}\nfunction arrayToFloat32Array(array) {\n  return Float32Array.from(array);\n}\nfunction objectsToFloat32Arrays(objects, table, length) {\n  var results = [];\n  for (var i = 0; i < objects.length; i++) {\n    var object = objects[i];\n    var result = new Float32Array(length);\n    for (var p in object) {\n      if (object.hasOwnProperty(p)) {\n        result[table[p]] = object[p];\n      }\n    }\n    results.push(result);\n  }\n  return results;\n}\nfunction objectToFloat32Arrays(object) {\n  var result = [];\n  for (var p in object) {\n    result.push(Float32Array.from([object[p]]));\n  }\n  return result;\n}\nfunction objectToFloat32Array(object, table, length) {\n  var result = new Float32Array(length);\n  for (var p in object) {\n    if (object.hasOwnProperty(p)) {\n      result[table[p]] = object[p];\n    }\n  }\n  return result;\n}\n//# sourceMappingURL=cast.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLKernel = require('./kernel');\nvar utils = require('../../core/utils');\n\n/**\n * @class WebGLValidatorKernel\n *\n * @desc Helper class for WebGLKernel to validate texture size and dimensions.\n *\n */\nmodule.exports = function (_WebGLKernel) {\n\t_inherits(WebGL2ValidatorKernel, _WebGLKernel);\n\n\tfunction WebGL2ValidatorKernel() {\n\t\t_classCallCheck(this, WebGL2ValidatorKernel);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2ValidatorKernel.__proto__ || Object.getPrototypeOf(WebGL2ValidatorKernel)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2ValidatorKernel, [{\n\t\tkey: 'validateOptions',\n\n\n\t\t/** \n   * @memberOf WebGLValidatorKernel#\n   * @function\n   * @name validateOptions\n   *\n   */\n\t\tvalue: function validateOptions() {\n\t\t\tthis._webGl.getExtension('EXT_color_buffer_float');\n\t\t\tthis.texSize = utils.dimToTexSize({\n\t\t\t\tfloatTextures: this.floatTextures,\n\t\t\t\tfloatOutput: this.floatOutput\n\t\t\t}, this.output, true);\n\t\t}\n\t}]);\n\n\treturn WebGL2ValidatorKernel;\n}(WebGLKernel);","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = softmax;\n\nvar _ = require('./');\n\nvar _2 = _interopRequireDefault(_);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * @param {Matrix} m\n * @returns {Matrix}\n */\nfunction softmax(m) {\n  var result = new _2.default(m.rows, m.columns); // probability volume\n  var maxVal = -999999;\n  for (var i = 0; i < m.weights.length; i++) {\n    if (m.weights[i] > maxVal) {\n      maxVal = m.weights[i];\n    }\n  }\n\n  var s = 0;\n  for (var _i = 0; _i < m.weights.length; _i++) {\n    result.weights[_i] = Math.exp(m.weights[_i] - maxVal);\n    s += result.weights[_i];\n  }\n\n  for (var _i2 = 0; _i2 < m.weights.length; _i2++) {\n    result.weights[_i2] /= s;\n  }\n\n  // no backward pass here needed\n  // since we will use the computed probabilities outside\n  // to set gradients directly on m\n  return result;\n}\n//# sourceMappingURL=softmax.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = addB;\n/**\n * adds {from} deltas to {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction addB(product, left, right) {\n  for (var i = 0; i < product.deltas.length; i++) {\n    left.deltas[i] = product.deltas[i];\n    right.deltas[i] = product.deltas[i];\n  }\n}\n//# sourceMappingURL=add-b.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Block = undefined;\n\nvar _thaw = require('./thaw');\n\nvar _thaw2 = _interopRequireDefault(_thaw);\n\nvar _block = require('./block');\n\nvar _block2 = _interopRequireDefault(_block);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _thaw2.default;\nexports.Block = _block2.default;\n\n\nif (typeof window !== 'undefined') {\n  window.Thaw = _thaw2.default;\n  window.Thaw.Block = _block2.default;\n}\n//# sourceMappingURL=index.js.map","module.exports = require('./readable').Transform\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _matrix = require('./matrix');\n\nvar _matrix2 = _interopRequireDefault(_matrix);\n\nvar _randomMatrix = require('./matrix/random-matrix');\n\nvar _randomMatrix2 = _interopRequireDefault(_randomMatrix);\n\nvar _rnn = require('./rnn');\n\nvar _rnn2 = _interopRequireDefault(_rnn);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar LSTM = function (_RNN) {\n  _inherits(LSTM, _RNN);\n\n  function LSTM() {\n    _classCallCheck(this, LSTM);\n\n    return _possibleConstructorReturn(this, (LSTM.__proto__ || Object.getPrototypeOf(LSTM)).apply(this, arguments));\n  }\n\n  _createClass(LSTM, [{\n    key: 'getModel',\n    value: function getModel(hiddenSize, prevSize) {\n      return {\n        // gates parameters\n        //wix\n        inputMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wih\n        inputHidden: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bi\n        inputBias: new _matrix2.default(hiddenSize, 1),\n\n        //wfx\n        forgetMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wfh\n        forgetHidden: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bf\n        forgetBias: new _matrix2.default(hiddenSize, 1),\n\n        //wox\n        outputMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //woh\n        outputHidden: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bo\n        outputBias: new _matrix2.default(hiddenSize, 1),\n\n        // cell write params\n        //wcx\n        cellActivationMatrix: new _randomMatrix2.default(hiddenSize, prevSize, 0.08),\n        //wch\n        cellActivationHidden: new _randomMatrix2.default(hiddenSize, hiddenSize, 0.08),\n        //bc\n        cellActivationBias: new _matrix2.default(hiddenSize, 1)\n      };\n    }\n\n    /**\n     *\n     * @param {Equation} equation\n     * @param {Matrix} inputMatrix\n     * @param {Matrix} previousResult\n     * @param {Object} hiddenLayer\n     * @returns {Matrix}\n     */\n\n  }, {\n    key: 'getEquation',\n    value: function getEquation(equation, inputMatrix, previousResult, hiddenLayer) {\n      var sigmoid = equation.sigmoid.bind(equation);\n      var add = equation.add.bind(equation);\n      var multiply = equation.multiply.bind(equation);\n      var multiplyElement = equation.multiplyElement.bind(equation);\n      var tanh = equation.tanh.bind(equation);\n\n      var inputGate = sigmoid(add(add(multiply(hiddenLayer.inputMatrix, inputMatrix), multiply(hiddenLayer.inputHidden, previousResult)), hiddenLayer.inputBias));\n\n      var forgetGate = sigmoid(add(add(multiply(hiddenLayer.forgetMatrix, inputMatrix), multiply(hiddenLayer.forgetHidden, previousResult)), hiddenLayer.forgetBias));\n\n      // output gate\n      var outputGate = sigmoid(add(add(multiply(hiddenLayer.outputMatrix, inputMatrix), multiply(hiddenLayer.outputHidden, previousResult)), hiddenLayer.outputBias));\n\n      // write operation on cells\n      var cellWrite = tanh(add(add(multiply(hiddenLayer.cellActivationMatrix, inputMatrix), multiply(hiddenLayer.cellActivationHidden, previousResult)), hiddenLayer.cellActivationBias));\n\n      // compute new cell activation\n      var retainCell = multiplyElement(forgetGate, previousResult); // what do we keep from cell\n      var writeCell = multiplyElement(inputGate, cellWrite); // what do we write to cell\n      var cell = add(retainCell, writeCell); // new cell contents\n\n      // compute hidden state as gated, saturated cell activations\n      return multiplyElement(outputGate, tanh(cell));\n    }\n  }]);\n\n  return LSTM;\n}(_rnn2.default);\n\nexports.default = LSTM;\n//# sourceMappingURL=lstm.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nmodule.exports = Stream;\n\nvar EE = require('events').EventEmitter;\nvar inherits = require('inherits');\n\ninherits(Stream, EE);\nStream.Readable = require('readable-stream/readable.js');\nStream.Writable = require('readable-stream/writable.js');\nStream.Duplex = require('readable-stream/duplex.js');\nStream.Transform = require('readable-stream/transform.js');\nStream.PassThrough = require('readable-stream/passthrough.js');\n\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\n\n\n// old-style streams.  Note that the pipe method (the only relevant\n// part of this class) is overridden in the Readable class.\n\nfunction Stream() {\n  EE.call(this);\n}\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    if (typeof dest.destroy === 'function') dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (EE.listenerCount(this, 'error') === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multiplyElementB;\n/**\n * multiplies {left} and {right} weight by {from} deltas into {left} and {right} deltas\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction multiplyElementB(product, left, right) {\n  for (var i = 0; i < left.weights.length; i++) {\n    left.deltas[i] = right.weights[i] * product.deltas[i];\n    right.deltas[i] = left.weights[i] * product.deltas[i];\n  }\n}\n//# sourceMappingURL=multiply-element-b.js.map","'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FunctionBuilderBase = require('../function-builder-base');\nvar CPUFunctionNode = require('./function-node');\n\n/**\n * @class CPUFunctionBuilder\n *\n * @extends FunctionBuilderBase\n *\n * @desc Builds functions to execute on CPU from JavaScript function Strings\n *\n */\nmodule.exports = function (_FunctionBuilderBase) {\n  _inherits(CPUFunctionBuilder, _FunctionBuilderBase);\n\n  function CPUFunctionBuilder() {\n    _classCallCheck(this, CPUFunctionBuilder);\n\n    var _this = _possibleConstructorReturn(this, (CPUFunctionBuilder.__proto__ || Object.getPrototypeOf(CPUFunctionBuilder)).call(this));\n\n    _this.Node = CPUFunctionNode;\n    return _this;\n  }\n\n  return CPUFunctionBuilder;\n}(FunctionBuilderBase);","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// A bit simpler than readable streams.\n// Implement an async ._write(chunk, encoding, cb), and it'll handle all\n// the drain event emission and buffering.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Writable;\n\n/* <replacement> */\nfunction WriteReq(chunk, encoding, cb) {\n  this.chunk = chunk;\n  this.encoding = encoding;\n  this.callback = cb;\n  this.next = null;\n}\n\n// It seems a linked list but it is not\n// there will be only 2 of these for each stream\nfunction CorkedRequest(state) {\n  var _this = this;\n\n  this.next = null;\n  this.entry = null;\n  this.finish = function () {\n    onCorkedFinish(_this, state);\n  };\n}\n/* </replacement> */\n\n/*<replacement>*/\nvar asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nWritable.WritableState = WritableState;\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar internalUtil = {\n  deprecate: require('util-deprecate')\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\nvar destroyImpl = require('./internal/streams/destroy');\n\nutil.inherits(Writable, Stream);\n\nfunction nop() {}\n\nfunction WritableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag to indicate whether or not this stream\n  // contains buffers or objects.\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;\n\n  // the point at which write() starts returning false\n  // Note: 0 is a valid value, means that we always return false if\n  // the entire buffer is not flushed immediately on write()\n  var hwm = options.highWaterMark;\n  var writableHwm = options.writableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // if _final has been called\n  this.finalCalled = false;\n\n  // drain event flag.\n  this.needDrain = false;\n  // at the start of calling end()\n  this.ending = false;\n  // when end() has been called, and returned\n  this.ended = false;\n  // when 'finish' is emitted\n  this.finished = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // should we decode strings into buffers before passing to _write?\n  // this is here so that some node-core streams can optimize string\n  // handling at a lower level.\n  var noDecode = options.decodeStrings === false;\n  this.decodeStrings = !noDecode;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // not an actual buffer we keep track of, but a measurement\n  // of how much we're waiting to get pushed to some underlying\n  // socket or file.\n  this.length = 0;\n\n  // a flag to see when we're in the middle of a write.\n  this.writing = false;\n\n  // when true all writes will be buffered until .uncork() call\n  this.corked = 0;\n\n  // a flag to be able to tell if the onwrite cb is called immediately,\n  // or on a later tick.  We set this to true at first, because any\n  // actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first write call.\n  this.sync = true;\n\n  // a flag to know if we're processing previously buffered items, which\n  // may call the _write() callback in the same tick, so that we don't\n  // end up in an overlapped onwrite situation.\n  this.bufferProcessing = false;\n\n  // the callback that's passed to _write(chunk,cb)\n  this.onwrite = function (er) {\n    onwrite(stream, er);\n  };\n\n  // the callback that the user supplies to write(chunk,encoding,cb)\n  this.writecb = null;\n\n  // the amount that is being written when _write is called.\n  this.writelen = 0;\n\n  this.bufferedRequest = null;\n  this.lastBufferedRequest = null;\n\n  // number of pending user-supplied write callbacks\n  // this must be 0 before 'finish' can be emitted\n  this.pendingcb = 0;\n\n  // emit prefinish if the only thing we're waiting for is _write cbs\n  // This is relevant for synchronous Transform streams\n  this.prefinished = false;\n\n  // True if the error was already emitted and should not be thrown again\n  this.errorEmitted = false;\n\n  // count buffered requests\n  this.bufferedRequestCount = 0;\n\n  // allocate the first CorkedRequest, there is always\n  // one allocated and free to use, and we maintain at most two\n  this.corkedRequestsFree = new CorkedRequest(this);\n}\n\nWritableState.prototype.getBuffer = function getBuffer() {\n  var current = this.bufferedRequest;\n  var out = [];\n  while (current) {\n    out.push(current);\n    current = current.next;\n  }\n  return out;\n};\n\n(function () {\n  try {\n    Object.defineProperty(WritableState.prototype, 'buffer', {\n      get: internalUtil.deprecate(function () {\n        return this.getBuffer();\n      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')\n    });\n  } catch (_) {}\n})();\n\n// Test _writableState for inheritance to account for Duplex streams,\n// whose prototype chain only points to Readable.\nvar realHasInstance;\nif (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {\n  realHasInstance = Function.prototype[Symbol.hasInstance];\n  Object.defineProperty(Writable, Symbol.hasInstance, {\n    value: function (object) {\n      if (realHasInstance.call(this, object)) return true;\n      if (this !== Writable) return false;\n\n      return object && object._writableState instanceof WritableState;\n    }\n  });\n} else {\n  realHasInstance = function (object) {\n    return object instanceof this;\n  };\n}\n\nfunction Writable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  // Writable ctor is applied to Duplexes, too.\n  // `realHasInstance` is necessary because using plain `instanceof`\n  // would return false, as no `_writableState` property is attached.\n\n  // Trying to use the custom `instanceof` for Writable here will also break the\n  // Node.js LazyTransform implementation, which has a non-trivial getter for\n  // `_writableState` that would lead to infinite recursion.\n  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {\n    return new Writable(options);\n  }\n\n  this._writableState = new WritableState(options, this);\n\n  // legacy.\n  this.writable = true;\n\n  if (options) {\n    if (typeof options.write === 'function') this._write = options.write;\n\n    if (typeof options.writev === 'function') this._writev = options.writev;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n\n    if (typeof options.final === 'function') this._final = options.final;\n  }\n\n  Stream.call(this);\n}\n\n// Otherwise people can pipe Writable streams, which is just wrong.\nWritable.prototype.pipe = function () {\n  this.emit('error', new Error('Cannot pipe, not readable'));\n};\n\nfunction writeAfterEnd(stream, cb) {\n  var er = new Error('write after end');\n  // TODO: defer error events consistently everywhere, not just the cb\n  stream.emit('error', er);\n  pna.nextTick(cb, er);\n}\n\n// Checks that a user-supplied chunk is valid, especially for the particular\n// mode the stream is in. Currently this means that `null` is never accepted\n// and undefined/non-string values are only allowed in object mode.\nfunction validChunk(stream, state, chunk, cb) {\n  var valid = true;\n  var er = false;\n\n  if (chunk === null) {\n    er = new TypeError('May not write null values to stream');\n  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  if (er) {\n    stream.emit('error', er);\n    pna.nextTick(cb, er);\n    valid = false;\n  }\n  return valid;\n}\n\nWritable.prototype.write = function (chunk, encoding, cb) {\n  var state = this._writableState;\n  var ret = false;\n  var isBuf = !state.objectMode && _isUint8Array(chunk);\n\n  if (isBuf && !Buffer.isBuffer(chunk)) {\n    chunk = _uint8ArrayToBuffer(chunk);\n  }\n\n  if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;\n\n  if (typeof cb !== 'function') cb = nop;\n\n  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {\n    state.pendingcb++;\n    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);\n  }\n\n  return ret;\n};\n\nWritable.prototype.cork = function () {\n  var state = this._writableState;\n\n  state.corked++;\n};\n\nWritable.prototype.uncork = function () {\n  var state = this._writableState;\n\n  if (state.corked) {\n    state.corked--;\n\n    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);\n  }\n};\n\nWritable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {\n  // node::ParseEncoding() requires lower case.\n  if (typeof encoding === 'string') encoding = encoding.toLowerCase();\n  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);\n  this._writableState.defaultEncoding = encoding;\n  return this;\n};\n\nfunction decodeChunk(state, chunk, encoding) {\n  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {\n    chunk = Buffer.from(chunk, encoding);\n  }\n  return chunk;\n}\n\nObject.defineProperty(Writable.prototype, 'writableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._writableState.highWaterMark;\n  }\n});\n\n// if we're already writing something, then just put this\n// in the queue, and wait our turn.  Otherwise, call _write\n// If we return false, then we need a drain event, so set that flag.\nfunction writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {\n  if (!isBuf) {\n    var newChunk = decodeChunk(state, chunk, encoding);\n    if (chunk !== newChunk) {\n      isBuf = true;\n      encoding = 'buffer';\n      chunk = newChunk;\n    }\n  }\n  var len = state.objectMode ? 1 : chunk.length;\n\n  state.length += len;\n\n  var ret = state.length < state.highWaterMark;\n  // we must ensure that previous needDrain will not be reset to false.\n  if (!ret) state.needDrain = true;\n\n  if (state.writing || state.corked) {\n    var last = state.lastBufferedRequest;\n    state.lastBufferedRequest = {\n      chunk: chunk,\n      encoding: encoding,\n      isBuf: isBuf,\n      callback: cb,\n      next: null\n    };\n    if (last) {\n      last.next = state.lastBufferedRequest;\n    } else {\n      state.bufferedRequest = state.lastBufferedRequest;\n    }\n    state.bufferedRequestCount += 1;\n  } else {\n    doWrite(stream, state, false, len, chunk, encoding, cb);\n  }\n\n  return ret;\n}\n\nfunction doWrite(stream, state, writev, len, chunk, encoding, cb) {\n  state.writelen = len;\n  state.writecb = cb;\n  state.writing = true;\n  state.sync = true;\n  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);\n  state.sync = false;\n}\n\nfunction onwriteError(stream, state, sync, er, cb) {\n  --state.pendingcb;\n\n  if (sync) {\n    // defer the callback if we are being called synchronously\n    // to avoid piling up things on the stack\n    pna.nextTick(cb, er);\n    // this can emit finish, and it will always happen\n    // after error\n    pna.nextTick(finishMaybe, stream, state);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n  } else {\n    // the caller expect this to happen before if\n    // it is async\n    cb(er);\n    stream._writableState.errorEmitted = true;\n    stream.emit('error', er);\n    // this can emit finish, but finish must\n    // always follow error\n    finishMaybe(stream, state);\n  }\n}\n\nfunction onwriteStateUpdate(state) {\n  state.writing = false;\n  state.writecb = null;\n  state.length -= state.writelen;\n  state.writelen = 0;\n}\n\nfunction onwrite(stream, er) {\n  var state = stream._writableState;\n  var sync = state.sync;\n  var cb = state.writecb;\n\n  onwriteStateUpdate(state);\n\n  if (er) onwriteError(stream, state, sync, er, cb);else {\n    // Check if we're actually ready to finish, but don't emit yet\n    var finished = needFinish(state);\n\n    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {\n      clearBuffer(stream, state);\n    }\n\n    if (sync) {\n      /*<replacement>*/\n      asyncWrite(afterWrite, stream, state, finished, cb);\n      /*</replacement>*/\n    } else {\n      afterWrite(stream, state, finished, cb);\n    }\n  }\n}\n\nfunction afterWrite(stream, state, finished, cb) {\n  if (!finished) onwriteDrain(stream, state);\n  state.pendingcb--;\n  cb();\n  finishMaybe(stream, state);\n}\n\n// Must force callback to be called on nextTick, so that we don't\n// emit 'drain' before the write() consumer gets the 'false' return\n// value, and has a chance to attach a 'drain' listener.\nfunction onwriteDrain(stream, state) {\n  if (state.length === 0 && state.needDrain) {\n    state.needDrain = false;\n    stream.emit('drain');\n  }\n}\n\n// if there's something in the buffer waiting, then process it\nfunction clearBuffer(stream, state) {\n  state.bufferProcessing = true;\n  var entry = state.bufferedRequest;\n\n  if (stream._writev && entry && entry.next) {\n    // Fast case, write everything using _writev()\n    var l = state.bufferedRequestCount;\n    var buffer = new Array(l);\n    var holder = state.corkedRequestsFree;\n    holder.entry = entry;\n\n    var count = 0;\n    var allBuffers = true;\n    while (entry) {\n      buffer[count] = entry;\n      if (!entry.isBuf) allBuffers = false;\n      entry = entry.next;\n      count += 1;\n    }\n    buffer.allBuffers = allBuffers;\n\n    doWrite(stream, state, true, state.length, buffer, '', holder.finish);\n\n    // doWrite is almost always async, defer these to save a bit of time\n    // as the hot path ends with doWrite\n    state.pendingcb++;\n    state.lastBufferedRequest = null;\n    if (holder.next) {\n      state.corkedRequestsFree = holder.next;\n      holder.next = null;\n    } else {\n      state.corkedRequestsFree = new CorkedRequest(state);\n    }\n    state.bufferedRequestCount = 0;\n  } else {\n    // Slow case, write chunks one-by-one\n    while (entry) {\n      var chunk = entry.chunk;\n      var encoding = entry.encoding;\n      var cb = entry.callback;\n      var len = state.objectMode ? 1 : chunk.length;\n\n      doWrite(stream, state, false, len, chunk, encoding, cb);\n      entry = entry.next;\n      state.bufferedRequestCount--;\n      // if we didn't call the onwrite immediately, then\n      // it means that we need to wait until it does.\n      // also, that means that the chunk and cb are currently\n      // being processed, so move the buffer counter past them.\n      if (state.writing) {\n        break;\n      }\n    }\n\n    if (entry === null) state.lastBufferedRequest = null;\n  }\n\n  state.bufferedRequest = entry;\n  state.bufferProcessing = false;\n}\n\nWritable.prototype._write = function (chunk, encoding, cb) {\n  cb(new Error('_write() is not implemented'));\n};\n\nWritable.prototype._writev = null;\n\nWritable.prototype.end = function (chunk, encoding, cb) {\n  var state = this._writableState;\n\n  if (typeof chunk === 'function') {\n    cb = chunk;\n    chunk = null;\n    encoding = null;\n  } else if (typeof encoding === 'function') {\n    cb = encoding;\n    encoding = null;\n  }\n\n  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);\n\n  // .end() fully uncorks\n  if (state.corked) {\n    state.corked = 1;\n    this.uncork();\n  }\n\n  // ignore unnecessary end() calls.\n  if (!state.ending && !state.finished) endWritable(this, state, cb);\n};\n\nfunction needFinish(state) {\n  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;\n}\nfunction callFinal(stream, state) {\n  stream._final(function (err) {\n    state.pendingcb--;\n    if (err) {\n      stream.emit('error', err);\n    }\n    state.prefinished = true;\n    stream.emit('prefinish');\n    finishMaybe(stream, state);\n  });\n}\nfunction prefinish(stream, state) {\n  if (!state.prefinished && !state.finalCalled) {\n    if (typeof stream._final === 'function') {\n      state.pendingcb++;\n      state.finalCalled = true;\n      pna.nextTick(callFinal, stream, state);\n    } else {\n      state.prefinished = true;\n      stream.emit('prefinish');\n    }\n  }\n}\n\nfunction finishMaybe(stream, state) {\n  var need = needFinish(state);\n  if (need) {\n    prefinish(stream, state);\n    if (state.pendingcb === 0) {\n      state.finished = true;\n      stream.emit('finish');\n    }\n  }\n  return need;\n}\n\nfunction endWritable(stream, state, cb) {\n  state.ending = true;\n  finishMaybe(stream, state);\n  if (cb) {\n    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);\n  }\n  state.ended = true;\n  stream.writable = false;\n}\n\nfunction onCorkedFinish(corkReq, state, err) {\n  var entry = corkReq.entry;\n  corkReq.entry = null;\n  while (entry) {\n    var cb = entry.callback;\n    state.pendingcb--;\n    cb(err);\n    entry = entry.next;\n  }\n  if (state.corkedRequestsFree) {\n    state.corkedRequestsFree.next = corkReq;\n  } else {\n    state.corkedRequestsFree = corkReq;\n  }\n}\n\nObject.defineProperty(Writable.prototype, 'destroyed', {\n  get: function () {\n    if (this._writableState === undefined) {\n      return false;\n    }\n    return this._writableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._writableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._writableState.destroyed = value;\n  }\n});\n\nWritable.prototype.destroy = destroyImpl.destroy;\nWritable.prototype._undestroy = destroyImpl.undestroy;\nWritable.prototype._destroy = function (err, cb) {\n  this.end();\n  cb(err);\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = likely;\n/**\n *\n * @param {*} input\n * @param {brain.NeuralNetwork} net\n * @returns {*}\n */\nfunction likely(input, net) {\n  var output = net.run(input);\n  var maxProp = null;\n  var maxValue = -1;\n  for (var prop in output) {\n    var value = output[prop];\n    if (value > maxValue) {\n      maxProp = prop;\n      maxValue = value;\n    }\n  }\n  return maxProp;\n}\n//# sourceMappingURL=likely.js.map","exports = module.exports = require('./lib/_stream_readable.js');\nexports.Stream = exports;\nexports.Readable = exports;\nexports.Writable = require('./lib/_stream_writable.js');\nexports.Duplex = require('./lib/_stream_duplex.js');\nexports.Transform = require('./lib/_stream_transform.js');\nexports.PassThrough = require('./lib/_stream_passthrough.js');\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","// Reserved word lists for various dialects of the language\n\nvar reservedWords = {\n  3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n  5: \"class enum extends super const export import\",\n  6: \"enum\",\n  strict: \"implements interface let package private protected public static yield\",\n  strictBind: \"eval arguments\"\n};\n\n// And the keywords\n\nvar ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\nvar keywords = {\n  5: ecma5AndLessKeywords,\n  6: ecma5AndLessKeywords + \" const class extends export import super\"\n};\n\nvar keywordRelationalOperator = /^in(stanceof)?$/;\n\n// ## Character categories\n\n// Big ugly regular expressions that match characters in the\n// whitespace, identifier, and identifier-start categories. These\n// are only applied when a character is found to actually have a\n// code point above 128.\n// Generated by `bin/generate-identifier-regex.js`.\n\nvar nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08bd\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d05-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e87\\u0e88\\u0e8a\\u0e8d\\u0e94-\\u0e97\\u0e99-\\u0e9f\\u0ea1-\\u0ea3\\u0ea5\\u0ea7\\u0eaa\\u0eab\\u0ead-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf1\\u1cf5\\u1cf6\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31ba\\u31f0-\\u31ff\\u3400-\\u4db5\\u4e00-\\u9fef\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7b9\\ua7f7-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab65\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\nvar nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b56\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d82\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0eb9\\u0ebb\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf2-\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\nvar nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\nvar nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\nnonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n// These are a run-length and offset encoded representation of the\n// >0xffff code points that are a valid part of identifiers. The\n// offset starts at 0x10000, and each pair of numbers represents an\n// offset to the next range, and then a size of the range. They were\n// generated by bin/generate-identifier-regex.js\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,477,28,11,0,9,21,190,52,76,44,33,24,27,35,30,0,12,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,54,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,86,26,230,43,117,63,32,0,257,0,11,39,8,0,22,0,12,39,3,3,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,270,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,68,12,0,67,12,65,1,31,6129,15,754,9486,286,82,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,4149,196,60,67,1213,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42710,42,4148,12,221,3,5761,15,7472,3104,541];\n\n// eslint-disable-next-line comma-spacing\nvar astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,525,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,4,9,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,280,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1016,45,17,3,19723,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,2214,6,110,6,6,9,792487,239];\n\n// This has a complexity linear to the value of the code. The\n// assumption is that looking up astral identifier characters is\n// rare.\nfunction isInAstralSet(code, set) {\n  var pos = 0x10000;\n  for (var i = 0; i < set.length; i += 2) {\n    pos += set[i];\n    if (pos > code) { return false }\n    pos += set[i + 1];\n    if (pos >= code) { return true }\n  }\n}\n\n// Test whether a given character code starts an identifier.\n\nfunction isIdentifierStart(code, astral) {\n  if (code < 65) { return code === 36 }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes)\n}\n\n// Test whether a given character is part of an identifier.\n\nfunction isIdentifierChar(code, astral) {\n  if (code < 48) { return code === 36 }\n  if (code < 58) { return true }\n  if (code < 65) { return false }\n  if (code < 91) { return true }\n  if (code < 97) { return code === 95 }\n  if (code < 123) { return true }\n  if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n  if (astral === false) { return false }\n  return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n}\n\n// ## Token types\n\n// The assignment of fine-grained, information-carrying type objects\n// allows the tokenizer to store the information it has about a\n// token in a way that is very cheap for the parser to look up.\n\n// All token type variables start with an underscore, to make them\n// easy to recognize.\n\n// The `beforeExpr` property is used to disambiguate between regular\n// expressions and divisions. It is set on all token types that can\n// be followed by an expression (thus, a slash after them would be a\n// regular expression).\n//\n// The `startsExpr` property is used to check if the token ends a\n// `yield` expression. It is set on all token types that either can\n// directly start an expression (like a quotation mark) or can\n// continue an expression (like the body of a string).\n//\n// `isLoop` marks a keyword as starting a loop, which is important\n// to know when parsing a label, in order to allow or disallow\n// continue jumps to that label.\n\nvar TokenType = function TokenType(label, conf) {\n  if ( conf === void 0 ) conf = {};\n\n  this.label = label;\n  this.keyword = conf.keyword;\n  this.beforeExpr = !!conf.beforeExpr;\n  this.startsExpr = !!conf.startsExpr;\n  this.isLoop = !!conf.isLoop;\n  this.isAssign = !!conf.isAssign;\n  this.prefix = !!conf.prefix;\n  this.postfix = !!conf.postfix;\n  this.binop = conf.binop || null;\n  this.updateContext = null;\n};\n\nfunction binop(name, prec) {\n  return new TokenType(name, {beforeExpr: true, binop: prec})\n}\nvar beforeExpr = {beforeExpr: true};\nvar startsExpr = {startsExpr: true};\n\n// Map keyword names to token types.\n\nvar keywords$1 = {};\n\n// Succinct definitions of keyword token types\nfunction kw(name, options) {\n  if ( options === void 0 ) options = {};\n\n  options.keyword = name;\n  return keywords$1[name] = new TokenType(name, options)\n}\n\nvar types = {\n  num: new TokenType(\"num\", startsExpr),\n  regexp: new TokenType(\"regexp\", startsExpr),\n  string: new TokenType(\"string\", startsExpr),\n  name: new TokenType(\"name\", startsExpr),\n  eof: new TokenType(\"eof\"),\n\n  // Punctuation token types.\n  bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n  bracketR: new TokenType(\"]\"),\n  braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n  braceR: new TokenType(\"}\"),\n  parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n  parenR: new TokenType(\")\"),\n  comma: new TokenType(\",\", beforeExpr),\n  semi: new TokenType(\";\", beforeExpr),\n  colon: new TokenType(\":\", beforeExpr),\n  dot: new TokenType(\".\"),\n  question: new TokenType(\"?\", beforeExpr),\n  arrow: new TokenType(\"=>\", beforeExpr),\n  template: new TokenType(\"template\"),\n  invalidTemplate: new TokenType(\"invalidTemplate\"),\n  ellipsis: new TokenType(\"...\", beforeExpr),\n  backQuote: new TokenType(\"`\", startsExpr),\n  dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n  // Operators. These carry several kinds of properties to help the\n  // parser use them properly (the presence of these properties is\n  // what categorizes them as operators).\n  //\n  // `binop`, when present, specifies that this operator is a binary\n  // operator, and will refer to its precedence.\n  //\n  // `prefix` and `postfix` mark the operator as a prefix or postfix\n  // unary operator.\n  //\n  // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n  // binary operators with a very low precedence, that should result\n  // in AssignmentExpression nodes.\n\n  eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n  assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n  incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n  prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  logicalOR: binop(\"||\", 1),\n  logicalAND: binop(\"&&\", 2),\n  bitwiseOR: binop(\"|\", 3),\n  bitwiseXOR: binop(\"^\", 4),\n  bitwiseAND: binop(\"&\", 5),\n  equality: binop(\"==/!=/===/!==\", 6),\n  relational: binop(\"</>/<=/>=\", 7),\n  bitShift: binop(\"<</>>/>>>\", 8),\n  plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n  modulo: binop(\"%\", 10),\n  star: binop(\"*\", 10),\n  slash: binop(\"/\", 10),\n  starstar: new TokenType(\"**\", {beforeExpr: true}),\n\n  // Keyword token types.\n  _break: kw(\"break\"),\n  _case: kw(\"case\", beforeExpr),\n  _catch: kw(\"catch\"),\n  _continue: kw(\"continue\"),\n  _debugger: kw(\"debugger\"),\n  _default: kw(\"default\", beforeExpr),\n  _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n  _else: kw(\"else\", beforeExpr),\n  _finally: kw(\"finally\"),\n  _for: kw(\"for\", {isLoop: true}),\n  _function: kw(\"function\", startsExpr),\n  _if: kw(\"if\"),\n  _return: kw(\"return\", beforeExpr),\n  _switch: kw(\"switch\"),\n  _throw: kw(\"throw\", beforeExpr),\n  _try: kw(\"try\"),\n  _var: kw(\"var\"),\n  _const: kw(\"const\"),\n  _while: kw(\"while\", {isLoop: true}),\n  _with: kw(\"with\"),\n  _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n  _this: kw(\"this\", startsExpr),\n  _super: kw(\"super\", startsExpr),\n  _class: kw(\"class\", startsExpr),\n  _extends: kw(\"extends\", beforeExpr),\n  _export: kw(\"export\"),\n  _import: kw(\"import\"),\n  _null: kw(\"null\", startsExpr),\n  _true: kw(\"true\", startsExpr),\n  _false: kw(\"false\", startsExpr),\n  _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n  _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n  _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n  _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n};\n\n// Matches a whole line break (where CRLF is considered a single\n// line break). Used to count lines.\n\nvar lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\nvar lineBreakG = new RegExp(lineBreak.source, \"g\");\n\nfunction isNewLine(code, ecma2019String) {\n  return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n}\n\nvar nonASCIIwhitespace = /[\\u1680\\u180e\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\nvar skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\nvar ref = Object.prototype;\nvar hasOwnProperty = ref.hasOwnProperty;\nvar toString = ref.toString;\n\n// Checks if an object has a property.\n\nfunction has(obj, propName) {\n  return hasOwnProperty.call(obj, propName)\n}\n\nvar isArray = Array.isArray || (function (obj) { return (\n  toString.call(obj) === \"[object Array]\"\n); });\n\n// These are used when `options.locations` is on, for the\n// `startLoc` and `endLoc` properties.\n\nvar Position = function Position(line, col) {\n  this.line = line;\n  this.column = col;\n};\n\nPosition.prototype.offset = function offset (n) {\n  return new Position(this.line, this.column + n)\n};\n\nvar SourceLocation = function SourceLocation(p, start, end) {\n  this.start = start;\n  this.end = end;\n  if (p.sourceFile !== null) { this.source = p.sourceFile; }\n};\n\n// The `getLineInfo` function is mostly useful when the\n// `locations` option is off (for performance reasons) and you\n// want to find the line/column position for a given character\n// offset. `input` should be the code string that the offset refers\n// into.\n\nfunction getLineInfo(input, offset) {\n  for (var line = 1, cur = 0;;) {\n    lineBreakG.lastIndex = cur;\n    var match = lineBreakG.exec(input);\n    if (match && match.index < offset) {\n      ++line;\n      cur = match.index + match[0].length;\n    } else {\n      return new Position(line, offset - cur)\n    }\n  }\n}\n\n// A second optional argument can be given to further configure\n// the parser process. These options are recognized:\n\nvar defaultOptions = {\n  // `ecmaVersion` indicates the ECMAScript version to parse. Must\n  // be either 3, 5, 6 (2015), 7 (2016), or 8 (2017). This influences support\n  // for strict mode, the set of reserved words, and support for\n  // new syntax features. The default is 7.\n  ecmaVersion: 7,\n  // `sourceType` indicates the mode the code should be parsed in.\n  // Can be either `\"script\"` or `\"module\"`. This influences global\n  // strict mode and parsing of `import` and `export` declarations.\n  sourceType: \"script\",\n  // `onInsertedSemicolon` can be a callback that will be called\n  // when a semicolon is automatically inserted. It will be passed\n  // th position of the comma as an offset, and if `locations` is\n  // enabled, it is given the location as a `{line, column}` object\n  // as second argument.\n  onInsertedSemicolon: null,\n  // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n  // trailing commas.\n  onTrailingComma: null,\n  // By default, reserved words are only enforced if ecmaVersion >= 5.\n  // Set `allowReserved` to a boolean value to explicitly turn this on\n  // an off. When this option has the value \"never\", reserved words\n  // and keywords can also not be used as property names.\n  allowReserved: null,\n  // When enabled, a return at the top level is not considered an\n  // error.\n  allowReturnOutsideFunction: false,\n  // When enabled, import/export statements are not constrained to\n  // appearing at the top of the program.\n  allowImportExportEverywhere: false,\n  // When enabled, await identifiers are allowed to appear at the top-level scope,\n  // but they are still not allowed in non-async functions.\n  allowAwaitOutsideFunction: false,\n  // When enabled, hashbang directive in the beginning of file\n  // is allowed and treated as a line comment.\n  allowHashBang: false,\n  // When `locations` is on, `loc` properties holding objects with\n  // `start` and `end` properties in `{line, column}` form (with\n  // line being 1-based and column 0-based) will be attached to the\n  // nodes.\n  locations: false,\n  // A function can be passed as `onToken` option, which will\n  // cause Acorn to call that function with object in the same\n  // format as tokens returned from `tokenizer().getToken()`. Note\n  // that you are not allowed to call the parser from the\n  // callback—that will corrupt its internal state.\n  onToken: null,\n  // A function can be passed as `onComment` option, which will\n  // cause Acorn to call that function with `(block, text, start,\n  // end)` parameters whenever a comment is skipped. `block` is a\n  // boolean indicating whether this is a block (`/* */`) comment,\n  // `text` is the content of the comment, and `start` and `end` are\n  // character offsets that denote the start and end of the comment.\n  // When the `locations` option is on, two more parameters are\n  // passed, the full `{line, column}` locations of the start and\n  // end of the comments. Note that you are not allowed to call the\n  // parser from the callback—that will corrupt its internal state.\n  onComment: null,\n  // Nodes have their start and end characters offsets recorded in\n  // `start` and `end` properties (directly on the node, rather than\n  // the `loc` object, which holds line/column data. To also add a\n  // [semi-standardized][range] `range` property holding a `[start,\n  // end]` array with the same numbers, set the `ranges` option to\n  // `true`.\n  //\n  // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n  ranges: false,\n  // It is possible to parse multiple files into a single AST by\n  // passing the tree produced by parsing the first file as\n  // `program` option in subsequent parses. This will add the\n  // toplevel forms of the parsed file to the `Program` (top) node\n  // of an existing parse tree.\n  program: null,\n  // When `locations` is on, you can pass this to record the source\n  // file in every node's `loc` object.\n  sourceFile: null,\n  // This value, if given, is stored in every node, whether\n  // `locations` is on or off.\n  directSourceFile: null,\n  // When enabled, parenthesized expressions are represented by\n  // (non-standard) ParenthesizedExpression nodes\n  preserveParens: false,\n  plugins: {}\n};\n\n// Interpret and default an options object\n\nfunction getOptions(opts) {\n  var options = {};\n\n  for (var opt in defaultOptions)\n    { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n  if (options.ecmaVersion >= 2015)\n    { options.ecmaVersion -= 2009; }\n\n  if (options.allowReserved == null)\n    { options.allowReserved = options.ecmaVersion < 5; }\n\n  if (isArray(options.onToken)) {\n    var tokens = options.onToken;\n    options.onToken = function (token) { return tokens.push(token); };\n  }\n  if (isArray(options.onComment))\n    { options.onComment = pushComment(options, options.onComment); }\n\n  return options\n}\n\nfunction pushComment(options, array) {\n  return function(block, text, start, end, startLoc, endLoc) {\n    var comment = {\n      type: block ? \"Block\" : \"Line\",\n      value: text,\n      start: start,\n      end: end\n    };\n    if (options.locations)\n      { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n    if (options.ranges)\n      { comment.range = [start, end]; }\n    array.push(comment);\n  }\n}\n\n// Registered plugins\nvar plugins = {};\n\nfunction keywordRegexp(words) {\n  return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n}\n\nvar Parser = function Parser(options, input, startPos) {\n  this.options = options = getOptions(options);\n  this.sourceFile = options.sourceFile;\n  this.keywords = keywordRegexp(keywords[options.ecmaVersion >= 6 ? 6 : 5]);\n  var reserved = \"\";\n  if (!options.allowReserved) {\n    for (var v = options.ecmaVersion;; v--)\n      { if (reserved = reservedWords[v]) { break } }\n    if (options.sourceType === \"module\") { reserved += \" await\"; }\n  }\n  this.reservedWords = keywordRegexp(reserved);\n  var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n  this.reservedWordsStrict = keywordRegexp(reservedStrict);\n  this.reservedWordsStrictBind = keywordRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n  this.input = String(input);\n\n  // Used to signal to callers of `readWord1` whether the word\n  // contained any escape sequences. This is needed because words with\n  // escape sequences must not be interpreted as keywords.\n  this.containsEsc = false;\n\n  // Load plugins\n  this.loadPlugins(options.plugins);\n\n  // Set up token state\n\n  // The current position of the tokenizer in the input.\n  if (startPos) {\n    this.pos = startPos;\n    this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n    this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n  } else {\n    this.pos = this.lineStart = 0;\n    this.curLine = 1;\n  }\n\n  // Properties of the current token:\n  // Its type\n  this.type = types.eof;\n  // For tokens that include more information than their type, the value\n  this.value = null;\n  // Its start and end offset\n  this.start = this.end = this.pos;\n  // And, if locations are used, the {line, column} object\n  // corresponding to those offsets\n  this.startLoc = this.endLoc = this.curPosition();\n\n  // Position information for the previous token\n  this.lastTokEndLoc = this.lastTokStartLoc = null;\n  this.lastTokStart = this.lastTokEnd = this.pos;\n\n  // The context stack is used to superficially track syntactic\n  // context to predict whether a regular expression is allowed in a\n  // given position.\n  this.context = this.initialContext();\n  this.exprAllowed = true;\n\n  // Figure out if it's a module code.\n  this.inModule = options.sourceType === \"module\";\n  this.strict = this.inModule || this.strictDirective(this.pos);\n\n  // Used to signify the start of a potential arrow function\n  this.potentialArrowAt = -1;\n\n  // Flags to track whether we are in a function, a generator, an async function.\n  this.inFunction = this.inGenerator = this.inAsync = false;\n  // Positions to delayed-check that yield/await does not exist in default parameters.\n  this.yieldPos = this.awaitPos = 0;\n  // Labels in scope.\n  this.labels = [];\n\n  // If enabled, skip leading hashbang line.\n  if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n    { this.skipLineComment(2); }\n\n  // Scope tracking for duplicate variable names (see scope.js)\n  this.scopeStack = [];\n  this.enterFunctionScope();\n\n  // For RegExp validation\n  this.regexpState = null;\n};\n\n// DEPRECATED Kept for backwards compatibility until 3.0 in case a plugin uses them\nParser.prototype.isKeyword = function isKeyword (word) { return this.keywords.test(word) };\nParser.prototype.isReservedWord = function isReservedWord (word) { return this.reservedWords.test(word) };\n\nParser.prototype.extend = function extend (name, f) {\n  this[name] = f(this[name]);\n};\n\nParser.prototype.loadPlugins = function loadPlugins (pluginConfigs) {\n    var this$1 = this;\n\n  for (var name in pluginConfigs) {\n    var plugin = plugins[name];\n    if (!plugin) { throw new Error(\"Plugin '\" + name + \"' not found\") }\n    plugin(this$1, pluginConfigs[name]);\n  }\n};\n\nParser.prototype.parse = function parse () {\n  var node = this.options.program || this.startNode();\n  this.nextToken();\n  return this.parseTopLevel(node)\n};\n\nvar pp = Parser.prototype;\n\n// ## Parser utilities\n\nvar literal = /^(?:'((?:\\\\.|[^'])*?)'|\"((?:\\\\.|[^\"])*?)\"|;)/;\npp.strictDirective = function(start) {\n  var this$1 = this;\n\n  for (;;) {\n    skipWhiteSpace.lastIndex = start;\n    start += skipWhiteSpace.exec(this$1.input)[0].length;\n    var match = literal.exec(this$1.input.slice(start));\n    if (!match) { return false }\n    if ((match[1] || match[2]) === \"use strict\") { return true }\n    start += match[0].length;\n  }\n};\n\n// Predicate that tests whether the next token is of the given\n// type, and if yes, consumes it as a side effect.\n\npp.eat = function(type) {\n  if (this.type === type) {\n    this.next();\n    return true\n  } else {\n    return false\n  }\n};\n\n// Tests whether parsed token is a contextual keyword.\n\npp.isContextual = function(name) {\n  return this.type === types.name && this.value === name && !this.containsEsc\n};\n\n// Consumes contextual keyword if possible.\n\npp.eatContextual = function(name) {\n  if (!this.isContextual(name)) { return false }\n  this.next();\n  return true\n};\n\n// Asserts that following token is given contextual keyword.\n\npp.expectContextual = function(name) {\n  if (!this.eatContextual(name)) { this.unexpected(); }\n};\n\n// Test whether a semicolon can be inserted at the current position.\n\npp.canInsertSemicolon = function() {\n  return this.type === types.eof ||\n    this.type === types.braceR ||\n    lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\npp.insertSemicolon = function() {\n  if (this.canInsertSemicolon()) {\n    if (this.options.onInsertedSemicolon)\n      { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n    return true\n  }\n};\n\n// Consume a semicolon, or, failing that, see if we are allowed to\n// pretend that there is a semicolon at this position.\n\npp.semicolon = function() {\n  if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n};\n\npp.afterTrailingComma = function(tokType, notNext) {\n  if (this.type === tokType) {\n    if (this.options.onTrailingComma)\n      { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n    if (!notNext)\n      { this.next(); }\n    return true\n  }\n};\n\n// Expect a token of a given type. If found, consume it, otherwise,\n// raise an unexpected token error.\n\npp.expect = function(type) {\n  this.eat(type) || this.unexpected();\n};\n\n// Raise an unexpected token error.\n\npp.unexpected = function(pos) {\n  this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n};\n\nfunction DestructuringErrors() {\n  this.shorthandAssign =\n  this.trailingComma =\n  this.parenthesizedAssign =\n  this.parenthesizedBind =\n  this.doubleProto =\n    -1;\n}\n\npp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n  if (!refDestructuringErrors) { return }\n  if (refDestructuringErrors.trailingComma > -1)\n    { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n  var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n  if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n};\n\npp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n  if (!refDestructuringErrors) { return false }\n  var shorthandAssign = refDestructuringErrors.shorthandAssign;\n  var doubleProto = refDestructuringErrors.doubleProto;\n  if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n  if (shorthandAssign >= 0)\n    { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n  if (doubleProto >= 0)\n    { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n};\n\npp.checkYieldAwaitInDefaultParams = function() {\n  if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n    { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n  if (this.awaitPos)\n    { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n};\n\npp.isSimpleAssignTarget = function(expr) {\n  if (expr.type === \"ParenthesizedExpression\")\n    { return this.isSimpleAssignTarget(expr.expression) }\n  return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n};\n\nvar pp$1 = Parser.prototype;\n\n// ### Statement parsing\n\n// Parse a program. Initializes the parser, reads any number of\n// statements, and wraps them in a Program node.  Optionally takes a\n// `program` argument.  If present, the statements will be appended\n// to its body instead of creating a new node.\n\npp$1.parseTopLevel = function(node) {\n  var this$1 = this;\n\n  var exports = {};\n  if (!node.body) { node.body = []; }\n  while (this.type !== types.eof) {\n    var stmt = this$1.parseStatement(true, true, exports);\n    node.body.push(stmt);\n  }\n  this.adaptDirectivePrologue(node.body);\n  this.next();\n  if (this.options.ecmaVersion >= 6) {\n    node.sourceType = this.options.sourceType;\n  }\n  return this.finishNode(node, \"Program\")\n};\n\nvar loopLabel = {kind: \"loop\"};\nvar switchLabel = {kind: \"switch\"};\n\npp$1.isLet = function() {\n  if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n  if (nextCh === 91 || nextCh === 123) { return true } // '{' and '['\n  if (isIdentifierStart(nextCh, true)) {\n    var pos = next + 1;\n    while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n    var ident = this.input.slice(next, pos);\n    if (!keywordRelationalOperator.test(ident)) { return true }\n  }\n  return false\n};\n\n// check 'async [no LineTerminator here] function'\n// - 'async /*foo*/ function' is OK.\n// - 'async /*\\n*/ function' is invalid.\npp$1.isAsyncFunction = function() {\n  if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n    { return false }\n\n  skipWhiteSpace.lastIndex = this.pos;\n  var skip = skipWhiteSpace.exec(this.input);\n  var next = this.pos + skip[0].length;\n  return !lineBreak.test(this.input.slice(this.pos, next)) &&\n    this.input.slice(next, next + 8) === \"function\" &&\n    (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n};\n\n// Parse a single statement.\n//\n// If expecting a statement and finding a slash operator, parse a\n// regular expression literal. This is to handle cases like\n// `if (foo) /blah/.exec(foo)`, where looking at the previous token\n// does not help.\n\npp$1.parseStatement = function(declaration, topLevel, exports) {\n  var starttype = this.type, node = this.startNode(), kind;\n\n  if (this.isLet()) {\n    starttype = types._var;\n    kind = \"let\";\n  }\n\n  // Most types of statements are recognized by the keyword they\n  // start with. Many are trivial to parse, some require a bit of\n  // complexity.\n\n  switch (starttype) {\n  case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n  case types._debugger: return this.parseDebuggerStatement(node)\n  case types._do: return this.parseDoStatement(node)\n  case types._for: return this.parseForStatement(node)\n  case types._function:\n    if (!declaration && this.options.ecmaVersion >= 6) { this.unexpected(); }\n    return this.parseFunctionStatement(node, false)\n  case types._class:\n    if (!declaration) { this.unexpected(); }\n    return this.parseClass(node, true)\n  case types._if: return this.parseIfStatement(node)\n  case types._return: return this.parseReturnStatement(node)\n  case types._switch: return this.parseSwitchStatement(node)\n  case types._throw: return this.parseThrowStatement(node)\n  case types._try: return this.parseTryStatement(node)\n  case types._const: case types._var:\n    kind = kind || this.value;\n    if (!declaration && kind !== \"var\") { this.unexpected(); }\n    return this.parseVarStatement(node, kind)\n  case types._while: return this.parseWhileStatement(node)\n  case types._with: return this.parseWithStatement(node)\n  case types.braceL: return this.parseBlock()\n  case types.semi: return this.parseEmptyStatement(node)\n  case types._export:\n  case types._import:\n    if (!this.options.allowImportExportEverywhere) {\n      if (!topLevel)\n        { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n      if (!this.inModule)\n        { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n    }\n    return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n    // If the statement does not start with a statement keyword or a\n    // brace, it's an ExpressionStatement or LabeledStatement. We\n    // simply start parsing an expression, and afterwards, if the\n    // next token is a colon and the expression was a simple\n    // Identifier node, we switch to interpreting it as a label.\n  default:\n    if (this.isAsyncFunction()) {\n      if (!declaration) { this.unexpected(); }\n      this.next();\n      return this.parseFunctionStatement(node, true)\n    }\n\n    var maybeName = this.value, expr = this.parseExpression();\n    if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n      { return this.parseLabeledStatement(node, maybeName, expr) }\n    else { return this.parseExpressionStatement(node, expr) }\n  }\n};\n\npp$1.parseBreakContinueStatement = function(node, keyword) {\n  var this$1 = this;\n\n  var isBreak = keyword === \"break\";\n  this.next();\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n  else if (this.type !== types.name) { this.unexpected(); }\n  else {\n    node.label = this.parseIdent();\n    this.semicolon();\n  }\n\n  // Verify that there is an actual destination to break or\n  // continue to.\n  var i = 0;\n  for (; i < this.labels.length; ++i) {\n    var lab = this$1.labels[i];\n    if (node.label == null || lab.name === node.label.name) {\n      if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n      if (node.label && isBreak) { break }\n    }\n  }\n  if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n  return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n};\n\npp$1.parseDebuggerStatement = function(node) {\n  this.next();\n  this.semicolon();\n  return this.finishNode(node, \"DebuggerStatement\")\n};\n\npp$1.parseDoStatement = function(node) {\n  this.next();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  this.expect(types._while);\n  node.test = this.parseParenExpression();\n  if (this.options.ecmaVersion >= 6)\n    { this.eat(types.semi); }\n  else\n    { this.semicolon(); }\n  return this.finishNode(node, \"DoWhileStatement\")\n};\n\n// Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n// loop is non-trivial. Basically, we have to parse the init `var`\n// statement or expression, disallowing the `in` operator (see\n// the second parameter to `parseExpression`), and then check\n// whether the next token is `in` or `of`. When there is no init\n// part (semicolon immediately after the opening parenthesis), it\n// is a regular `for` loop.\n\npp$1.parseForStatement = function(node) {\n  this.next();\n  var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n  this.labels.push(loopLabel);\n  this.enterLexicalScope();\n  this.expect(types.parenL);\n  if (this.type === types.semi) {\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, null)\n  }\n  var isLet = this.isLet();\n  if (this.type === types._var || this.type === types._const || isLet) {\n    var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n    this.next();\n    this.parseVar(init$1, true, kind);\n    this.finishNode(init$1, \"VariableDeclaration\");\n    if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1 &&\n        !(kind !== \"var\" && init$1.declarations[0].init)) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      return this.parseForIn(node, init$1)\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init$1)\n  }\n  var refDestructuringErrors = new DestructuringErrors;\n  var init = this.parseExpression(true, refDestructuringErrors);\n  if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n    if (this.options.ecmaVersion >= 9) {\n      if (this.type === types._in) {\n        if (awaitAt > -1) { this.unexpected(awaitAt); }\n      } else { node.await = awaitAt > -1; }\n    }\n    this.toAssignable(init, false, refDestructuringErrors);\n    this.checkLVal(init);\n    return this.parseForIn(node, init)\n  } else {\n    this.checkExpressionErrors(refDestructuringErrors, true);\n  }\n  if (awaitAt > -1) { this.unexpected(awaitAt); }\n  return this.parseFor(node, init)\n};\n\npp$1.parseFunctionStatement = function(node, isAsync) {\n  this.next();\n  return this.parseFunction(node, true, false, isAsync)\n};\n\npp$1.parseIfStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  // allow function declarations in branches, but only in non-strict mode\n  node.consequent = this.parseStatement(!this.strict && this.type === types._function);\n  node.alternate = this.eat(types._else) ? this.parseStatement(!this.strict && this.type === types._function) : null;\n  return this.finishNode(node, \"IfStatement\")\n};\n\npp$1.parseReturnStatement = function(node) {\n  if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n    { this.raise(this.start, \"'return' outside of function\"); }\n  this.next();\n\n  // In `return` (and `break`/`continue`), the keywords with\n  // optional arguments, we eagerly look for a semicolon or the\n  // possibility to insert one.\n\n  if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n  else { node.argument = this.parseExpression(); this.semicolon(); }\n  return this.finishNode(node, \"ReturnStatement\")\n};\n\npp$1.parseSwitchStatement = function(node) {\n  var this$1 = this;\n\n  this.next();\n  node.discriminant = this.parseParenExpression();\n  node.cases = [];\n  this.expect(types.braceL);\n  this.labels.push(switchLabel);\n  this.enterLexicalScope();\n\n  // Statements under must be grouped (by label) in SwitchCase\n  // nodes. `cur` is used to keep the node that we are currently\n  // adding statements to.\n\n  var cur;\n  for (var sawDefault = false; this.type !== types.braceR;) {\n    if (this$1.type === types._case || this$1.type === types._default) {\n      var isCase = this$1.type === types._case;\n      if (cur) { this$1.finishNode(cur, \"SwitchCase\"); }\n      node.cases.push(cur = this$1.startNode());\n      cur.consequent = [];\n      this$1.next();\n      if (isCase) {\n        cur.test = this$1.parseExpression();\n      } else {\n        if (sawDefault) { this$1.raiseRecoverable(this$1.lastTokStart, \"Multiple default clauses\"); }\n        sawDefault = true;\n        cur.test = null;\n      }\n      this$1.expect(types.colon);\n    } else {\n      if (!cur) { this$1.unexpected(); }\n      cur.consequent.push(this$1.parseStatement(true));\n    }\n  }\n  this.exitLexicalScope();\n  if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n  this.next(); // Closing brace\n  this.labels.pop();\n  return this.finishNode(node, \"SwitchStatement\")\n};\n\npp$1.parseThrowStatement = function(node) {\n  this.next();\n  if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n    { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n  node.argument = this.parseExpression();\n  this.semicolon();\n  return this.finishNode(node, \"ThrowStatement\")\n};\n\n// Reused empty array added for node fields that are always empty.\n\nvar empty = [];\n\npp$1.parseTryStatement = function(node) {\n  this.next();\n  node.block = this.parseBlock();\n  node.handler = null;\n  if (this.type === types._catch) {\n    var clause = this.startNode();\n    this.next();\n    if (this.eat(types.parenL)) {\n      clause.param = this.parseBindingAtom();\n      this.enterLexicalScope();\n      this.checkLVal(clause.param, \"let\");\n      this.expect(types.parenR);\n    } else {\n      if (this.options.ecmaVersion < 10) { this.unexpected(); }\n      clause.param = null;\n      this.enterLexicalScope();\n    }\n    clause.body = this.parseBlock(false);\n    this.exitLexicalScope();\n    node.handler = this.finishNode(clause, \"CatchClause\");\n  }\n  node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n  if (!node.handler && !node.finalizer)\n    { this.raise(node.start, \"Missing catch or finally clause\"); }\n  return this.finishNode(node, \"TryStatement\")\n};\n\npp$1.parseVarStatement = function(node, kind) {\n  this.next();\n  this.parseVar(node, false, kind);\n  this.semicolon();\n  return this.finishNode(node, \"VariableDeclaration\")\n};\n\npp$1.parseWhileStatement = function(node) {\n  this.next();\n  node.test = this.parseParenExpression();\n  this.labels.push(loopLabel);\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"WhileStatement\")\n};\n\npp$1.parseWithStatement = function(node) {\n  if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n  this.next();\n  node.object = this.parseParenExpression();\n  node.body = this.parseStatement(false);\n  return this.finishNode(node, \"WithStatement\")\n};\n\npp$1.parseEmptyStatement = function(node) {\n  this.next();\n  return this.finishNode(node, \"EmptyStatement\")\n};\n\npp$1.parseLabeledStatement = function(node, maybeName, expr) {\n  var this$1 = this;\n\n  for (var i$1 = 0, list = this$1.labels; i$1 < list.length; i$1 += 1)\n    {\n    var label = list[i$1];\n\n    if (label.name === maybeName)\n      { this$1.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n  } }\n  var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n  for (var i = this.labels.length - 1; i >= 0; i--) {\n    var label$1 = this$1.labels[i];\n    if (label$1.statementStart === node.start) {\n      // Update information about previous labels on this node\n      label$1.statementStart = this$1.start;\n      label$1.kind = kind;\n    } else { break }\n  }\n  this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n  node.body = this.parseStatement(true);\n  if (node.body.type === \"ClassDeclaration\" ||\n      node.body.type === \"VariableDeclaration\" && node.body.kind !== \"var\" ||\n      node.body.type === \"FunctionDeclaration\" && (this.strict || node.body.generator || node.body.async))\n    { this.raiseRecoverable(node.body.start, \"Invalid labeled declaration\"); }\n  this.labels.pop();\n  node.label = expr;\n  return this.finishNode(node, \"LabeledStatement\")\n};\n\npp$1.parseExpressionStatement = function(node, expr) {\n  node.expression = expr;\n  this.semicolon();\n  return this.finishNode(node, \"ExpressionStatement\")\n};\n\n// Parse a semicolon-enclosed block of statements, handling `\"use\n// strict\"` declarations when `allowStrict` is true (used for\n// function bodies).\n\npp$1.parseBlock = function(createNewLexicalScope) {\n  var this$1 = this;\n  if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n\n  var node = this.startNode();\n  node.body = [];\n  this.expect(types.braceL);\n  if (createNewLexicalScope) {\n    this.enterLexicalScope();\n  }\n  while (!this.eat(types.braceR)) {\n    var stmt = this$1.parseStatement(true);\n    node.body.push(stmt);\n  }\n  if (createNewLexicalScope) {\n    this.exitLexicalScope();\n  }\n  return this.finishNode(node, \"BlockStatement\")\n};\n\n// Parse a regular `for` loop. The disambiguation code in\n// `parseStatement` will already have parsed the init statement or\n// expression.\n\npp$1.parseFor = function(node, init) {\n  node.init = init;\n  this.expect(types.semi);\n  node.test = this.type === types.semi ? null : this.parseExpression();\n  this.expect(types.semi);\n  node.update = this.type === types.parenR ? null : this.parseExpression();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, \"ForStatement\")\n};\n\n// Parse a `for`/`in` and `for`/`of` loop, which are almost\n// same from parser's perspective.\n\npp$1.parseForIn = function(node, init) {\n  var type = this.type === types._in ? \"ForInStatement\" : \"ForOfStatement\";\n  this.next();\n  if (type === \"ForInStatement\") {\n    if (init.type === \"AssignmentPattern\" ||\n      (init.type === \"VariableDeclaration\" && init.declarations[0].init != null &&\n       (this.strict || init.declarations[0].id.type !== \"Identifier\")))\n      { this.raise(init.start, \"Invalid assignment in for-in loop head\"); }\n  }\n  node.left = init;\n  node.right = type === \"ForInStatement\" ? this.parseExpression() : this.parseMaybeAssign();\n  this.expect(types.parenR);\n  this.exitLexicalScope();\n  node.body = this.parseStatement(false);\n  this.labels.pop();\n  return this.finishNode(node, type)\n};\n\n// Parse a list of variable declarations.\n\npp$1.parseVar = function(node, isFor, kind) {\n  var this$1 = this;\n\n  node.declarations = [];\n  node.kind = kind;\n  for (;;) {\n    var decl = this$1.startNode();\n    this$1.parseVarId(decl, kind);\n    if (this$1.eat(types.eq)) {\n      decl.init = this$1.parseMaybeAssign(isFor);\n    } else if (kind === \"const\" && !(this$1.type === types._in || (this$1.options.ecmaVersion >= 6 && this$1.isContextual(\"of\")))) {\n      this$1.unexpected();\n    } else if (decl.id.type !== \"Identifier\" && !(isFor && (this$1.type === types._in || this$1.isContextual(\"of\")))) {\n      this$1.raise(this$1.lastTokEnd, \"Complex binding patterns require an initialization value\");\n    } else {\n      decl.init = null;\n    }\n    node.declarations.push(this$1.finishNode(decl, \"VariableDeclarator\"));\n    if (!this$1.eat(types.comma)) { break }\n  }\n  return node\n};\n\npp$1.parseVarId = function(decl, kind) {\n  decl.id = this.parseBindingAtom(kind);\n  this.checkLVal(decl.id, kind, false);\n};\n\n// Parse a function declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseFunction = function(node, isStatement, allowExpressionBody, isAsync) {\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync)\n    { node.generator = this.eat(types.star); }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  if (isStatement) {\n    node.id = isStatement === \"nullableID\" && this.type !== types.name ? null : this.parseIdent();\n    if (node.id) {\n      this.checkLVal(node.id, this.inModule && !this.inFunction ? \"let\" : \"var\");\n    }\n  }\n\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  if (!isStatement)\n    { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n  this.parseFunctionParams(node);\n  this.parseFunctionBody(node, allowExpressionBody);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, isStatement ? \"FunctionDeclaration\" : \"FunctionExpression\")\n};\n\npp$1.parseFunctionParams = function(node) {\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n};\n\n// Parse a class declaration or literal (depending on the\n// `isStatement` parameter).\n\npp$1.parseClass = function(node, isStatement) {\n  var this$1 = this;\n\n  this.next();\n\n  this.parseClassId(node, isStatement);\n  this.parseClassSuper(node);\n  var classBody = this.startNode();\n  var hadConstructor = false;\n  classBody.body = [];\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    var member = this$1.parseClassMember(classBody);\n    if (member && member.type === \"MethodDefinition\" && member.kind === \"constructor\") {\n      if (hadConstructor) { this$1.raise(member.start, \"Duplicate constructor in the same class\"); }\n      hadConstructor = true;\n    }\n  }\n  node.body = this.finishNode(classBody, \"ClassBody\");\n  return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n};\n\npp$1.parseClassMember = function(classBody) {\n  var this$1 = this;\n\n  if (this.eat(types.semi)) { return null }\n\n  var method = this.startNode();\n  var tryContextual = function (k, noLineBreak) {\n    if ( noLineBreak === void 0 ) noLineBreak = false;\n\n    var start = this$1.start, startLoc = this$1.startLoc;\n    if (!this$1.eatContextual(k)) { return false }\n    if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n    if (method.key) { this$1.unexpected(); }\n    method.computed = false;\n    method.key = this$1.startNodeAt(start, startLoc);\n    method.key.name = k;\n    this$1.finishNode(method.key, \"Identifier\");\n    return false\n  };\n\n  method.kind = \"method\";\n  method.static = tryContextual(\"static\");\n  var isGenerator = this.eat(types.star);\n  var isAsync = false;\n  if (!isGenerator) {\n    if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    } else if (tryContextual(\"get\")) {\n      method.kind = \"get\";\n    } else if (tryContextual(\"set\")) {\n      method.kind = \"set\";\n    }\n  }\n  if (!method.key) { this.parsePropertyName(method); }\n  var key = method.key;\n  if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n      key.type === \"Literal\" && key.value === \"constructor\")) {\n    if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n    if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n    if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n    method.kind = \"constructor\";\n  } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n    this.raise(key.start, \"Classes may not have a static property named prototype\");\n  }\n  this.parseClassMethod(classBody, method, isGenerator, isAsync);\n  if (method.kind === \"get\" && method.value.params.length !== 0)\n    { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n  if (method.kind === \"set\" && method.value.params.length !== 1)\n    { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n  if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n    { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n  return method\n};\n\npp$1.parseClassMethod = function(classBody, method, isGenerator, isAsync) {\n  method.value = this.parseMethod(isGenerator, isAsync);\n  classBody.body.push(this.finishNode(method, \"MethodDefinition\"));\n};\n\npp$1.parseClassId = function(node, isStatement) {\n  node.id = this.type === types.name ? this.parseIdent() : isStatement === true ? this.unexpected() : null;\n};\n\npp$1.parseClassSuper = function(node) {\n  node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n};\n\n// Parses module export declaration.\n\npp$1.parseExport = function(node, exports) {\n  var this$1 = this;\n\n  this.next();\n  // export * from '...'\n  if (this.eat(types.star)) {\n    this.expectContextual(\"from\");\n    if (this.type !== types.string) { this.unexpected(); }\n    node.source = this.parseExprAtom();\n    this.semicolon();\n    return this.finishNode(node, \"ExportAllDeclaration\")\n  }\n  if (this.eat(types._default)) { // export default ...\n    this.checkExport(exports, \"default\", this.lastTokStart);\n    var isAsync;\n    if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n      var fNode = this.startNode();\n      this.next();\n      if (isAsync) { this.next(); }\n      node.declaration = this.parseFunction(fNode, \"nullableID\", false, isAsync);\n    } else if (this.type === types._class) {\n      var cNode = this.startNode();\n      node.declaration = this.parseClass(cNode, \"nullableID\");\n    } else {\n      node.declaration = this.parseMaybeAssign();\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportDefaultDeclaration\")\n  }\n  // export var|const|let|function|class ...\n  if (this.shouldParseExportStatement()) {\n    node.declaration = this.parseStatement(true);\n    if (node.declaration.type === \"VariableDeclaration\")\n      { this.checkVariableExport(exports, node.declaration.declarations); }\n    else\n      { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n    node.specifiers = [];\n    node.source = null;\n  } else { // export { x, y as z } [from '...']\n    node.declaration = null;\n    node.specifiers = this.parseExportSpecifiers(exports);\n    if (this.eatContextual(\"from\")) {\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n    } else {\n      // check for keywords used as local names\n      for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n        var spec = list[i];\n\n        this$1.checkUnreserved(spec.local);\n      }\n\n      node.source = null;\n    }\n    this.semicolon();\n  }\n  return this.finishNode(node, \"ExportNamedDeclaration\")\n};\n\npp$1.checkExport = function(exports, name, pos) {\n  if (!exports) { return }\n  if (has(exports, name))\n    { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n  exports[name] = true;\n};\n\npp$1.checkPatternExport = function(exports, pat) {\n  var this$1 = this;\n\n  var type = pat.type;\n  if (type === \"Identifier\")\n    { this.checkExport(exports, pat.name, pat.start); }\n  else if (type === \"ObjectPattern\")\n    { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n      {\n        var prop = list[i];\n\n        this$1.checkPatternExport(exports, prop);\n      } }\n  else if (type === \"ArrayPattern\")\n    { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n      var elt = list$1[i$1];\n\n        if (elt) { this$1.checkPatternExport(exports, elt); }\n    } }\n  else if (type === \"Property\")\n    { this.checkPatternExport(exports, pat.value); }\n  else if (type === \"AssignmentPattern\")\n    { this.checkPatternExport(exports, pat.left); }\n  else if (type === \"RestElement\")\n    { this.checkPatternExport(exports, pat.argument); }\n  else if (type === \"ParenthesizedExpression\")\n    { this.checkPatternExport(exports, pat.expression); }\n};\n\npp$1.checkVariableExport = function(exports, decls) {\n  var this$1 = this;\n\n  if (!exports) { return }\n  for (var i = 0, list = decls; i < list.length; i += 1)\n    {\n    var decl = list[i];\n\n    this$1.checkPatternExport(exports, decl.id);\n  }\n};\n\npp$1.shouldParseExportStatement = function() {\n  return this.type.keyword === \"var\" ||\n    this.type.keyword === \"const\" ||\n    this.type.keyword === \"class\" ||\n    this.type.keyword === \"function\" ||\n    this.isLet() ||\n    this.isAsyncFunction()\n};\n\n// Parses a comma-separated list of module exports.\n\npp$1.parseExportSpecifiers = function(exports) {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  // export { x, y as z } [from '...']\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node = this$1.startNode();\n    node.local = this$1.parseIdent(true);\n    node.exported = this$1.eatContextual(\"as\") ? this$1.parseIdent(true) : node.local;\n    this$1.checkExport(exports, node.exported.name, node.exported.start);\n    nodes.push(this$1.finishNode(node, \"ExportSpecifier\"));\n  }\n  return nodes\n};\n\n// Parses import declaration.\n\npp$1.parseImport = function(node) {\n  this.next();\n  // import '...'\n  if (this.type === types.string) {\n    node.specifiers = empty;\n    node.source = this.parseExprAtom();\n  } else {\n    node.specifiers = this.parseImportSpecifiers();\n    this.expectContextual(\"from\");\n    node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n  }\n  this.semicolon();\n  return this.finishNode(node, \"ImportDeclaration\")\n};\n\n// Parses a comma-separated list of module imports.\n\npp$1.parseImportSpecifiers = function() {\n  var this$1 = this;\n\n  var nodes = [], first = true;\n  if (this.type === types.name) {\n    // import defaultObj, { x, y as z } from '...'\n    var node = this.startNode();\n    node.local = this.parseIdent();\n    this.checkLVal(node.local, \"let\");\n    nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n    if (!this.eat(types.comma)) { return nodes }\n  }\n  if (this.type === types.star) {\n    var node$1 = this.startNode();\n    this.next();\n    this.expectContextual(\"as\");\n    node$1.local = this.parseIdent();\n    this.checkLVal(node$1.local, \"let\");\n    nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n    return nodes\n  }\n  this.expect(types.braceL);\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var node$2 = this$1.startNode();\n    node$2.imported = this$1.parseIdent(true);\n    if (this$1.eatContextual(\"as\")) {\n      node$2.local = this$1.parseIdent();\n    } else {\n      this$1.checkUnreserved(node$2.imported);\n      node$2.local = node$2.imported;\n    }\n    this$1.checkLVal(node$2.local, \"let\");\n    nodes.push(this$1.finishNode(node$2, \"ImportSpecifier\"));\n  }\n  return nodes\n};\n\n// Set `ExpressionStatement#directive` property for directive prologues.\npp$1.adaptDirectivePrologue = function(statements) {\n  for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n    statements[i].directive = statements[i].expression.raw.slice(1, -1);\n  }\n};\npp$1.isDirectiveCandidate = function(statement) {\n  return (\n    statement.type === \"ExpressionStatement\" &&\n    statement.expression.type === \"Literal\" &&\n    typeof statement.expression.value === \"string\" &&\n    // Reject parenthesized strings.\n    (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n  )\n};\n\nvar pp$2 = Parser.prototype;\n\n// Convert existing expression atom to assignable pattern\n// if possible.\n\npp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n  var this$1 = this;\n\n  if (this.options.ecmaVersion >= 6 && node) {\n    switch (node.type) {\n    case \"Identifier\":\n      if (this.inAsync && node.name === \"await\")\n        { this.raise(node.start, \"Can not use 'await' as identifier inside an async function\"); }\n      break\n\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n    case \"RestElement\":\n      break\n\n    case \"ObjectExpression\":\n      node.type = \"ObjectPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      for (var i = 0, list = node.properties; i < list.length; i += 1) {\n        var prop = list[i];\n\n      this$1.toAssignable(prop, isBinding);\n        // Early error:\n        //   AssignmentRestProperty[Yield, Await] :\n        //     `...` DestructuringAssignmentTarget[Yield, Await]\n        //\n        //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n        if (\n          prop.type === \"RestElement\" &&\n          (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n        ) {\n          this$1.raise(prop.argument.start, \"Unexpected token\");\n        }\n      }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n      this.toAssignable(node.value, isBinding);\n      break\n\n    case \"ArrayExpression\":\n      node.type = \"ArrayPattern\";\n      if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n      this.toAssignableList(node.elements, isBinding);\n      break\n\n    case \"SpreadElement\":\n      node.type = \"RestElement\";\n      this.toAssignable(node.argument, isBinding);\n      if (node.argument.type === \"AssignmentPattern\")\n        { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n      break\n\n    case \"AssignmentExpression\":\n      if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n      node.type = \"AssignmentPattern\";\n      delete node.operator;\n      this.toAssignable(node.left, isBinding);\n      // falls through to AssignmentPattern\n\n    case \"AssignmentPattern\":\n      break\n\n    case \"ParenthesizedExpression\":\n      this.toAssignable(node.expression, isBinding);\n      break\n\n    case \"MemberExpression\":\n      if (!isBinding) { break }\n\n    default:\n      this.raise(node.start, \"Assigning to rvalue\");\n    }\n  } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n  return node\n};\n\n// Convert list of expression atoms to binding list.\n\npp$2.toAssignableList = function(exprList, isBinding) {\n  var this$1 = this;\n\n  var end = exprList.length;\n  for (var i = 0; i < end; i++) {\n    var elt = exprList[i];\n    if (elt) { this$1.toAssignable(elt, isBinding); }\n  }\n  if (end) {\n    var last = exprList[end - 1];\n    if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n      { this.unexpected(last.argument.start); }\n  }\n  return exprList\n};\n\n// Parses spread element.\n\npp$2.parseSpread = function(refDestructuringErrors) {\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n  return this.finishNode(node, \"SpreadElement\")\n};\n\npp$2.parseRestBinding = function() {\n  var node = this.startNode();\n  this.next();\n\n  // RestElement inside of a function parameter must be an identifier\n  if (this.options.ecmaVersion === 6 && this.type !== types.name)\n    { this.unexpected(); }\n\n  node.argument = this.parseBindingAtom();\n\n  return this.finishNode(node, \"RestElement\")\n};\n\n// Parses lvalue (assignable) atom.\n\npp$2.parseBindingAtom = function() {\n  if (this.options.ecmaVersion >= 6) {\n    switch (this.type) {\n    case types.bracketL:\n      var node = this.startNode();\n      this.next();\n      node.elements = this.parseBindingList(types.bracketR, true, true);\n      return this.finishNode(node, \"ArrayPattern\")\n\n    case types.braceL:\n      return this.parseObj(true)\n    }\n  }\n  return this.parseIdent()\n};\n\npp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (first) { first = false; }\n    else { this$1.expect(types.comma); }\n    if (allowEmpty && this$1.type === types.comma) {\n      elts.push(null);\n    } else if (allowTrailingComma && this$1.afterTrailingComma(close)) {\n      break\n    } else if (this$1.type === types.ellipsis) {\n      var rest = this$1.parseRestBinding();\n      this$1.parseBindingListItem(rest);\n      elts.push(rest);\n      if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n      this$1.expect(close);\n      break\n    } else {\n      var elem = this$1.parseMaybeDefault(this$1.start, this$1.startLoc);\n      this$1.parseBindingListItem(elem);\n      elts.push(elem);\n    }\n  }\n  return elts\n};\n\npp$2.parseBindingListItem = function(param) {\n  return param\n};\n\n// Parses assignment pattern around given atom if possible.\n\npp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n  left = left || this.parseBindingAtom();\n  if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.right = this.parseMaybeAssign();\n  return this.finishNode(node, \"AssignmentPattern\")\n};\n\n// Verify that a node is an lval — something that can be assigned\n// to.\n// bindingType can be either:\n// 'var' indicating that the lval creates a 'var' binding\n// 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n// 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\npp$2.checkLVal = function(expr, bindingType, checkClashes) {\n  var this$1 = this;\n\n  switch (expr.type) {\n  case \"Identifier\":\n    if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n      { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n    if (checkClashes) {\n      if (has(checkClashes, expr.name))\n        { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n      checkClashes[expr.name] = true;\n    }\n    if (bindingType && bindingType !== \"none\") {\n      if (\n        bindingType === \"var\" && !this.canDeclareVarName(expr.name) ||\n        bindingType !== \"var\" && !this.canDeclareLexicalName(expr.name)\n      ) {\n        this.raiseRecoverable(expr.start, (\"Identifier '\" + (expr.name) + \"' has already been declared\"));\n      }\n      if (bindingType === \"var\") {\n        this.declareVarName(expr.name);\n      } else {\n        this.declareLexicalName(expr.name);\n      }\n    }\n    break\n\n  case \"MemberExpression\":\n    if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n    break\n\n  case \"ObjectPattern\":\n    for (var i = 0, list = expr.properties; i < list.length; i += 1)\n      {\n    var prop = list[i];\n\n    this$1.checkLVal(prop, bindingType, checkClashes);\n  }\n    break\n\n  case \"Property\":\n    // AssignmentProperty has type === \"Property\"\n    this.checkLVal(expr.value, bindingType, checkClashes);\n    break\n\n  case \"ArrayPattern\":\n    for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n      var elem = list$1[i$1];\n\n    if (elem) { this$1.checkLVal(elem, bindingType, checkClashes); }\n    }\n    break\n\n  case \"AssignmentPattern\":\n    this.checkLVal(expr.left, bindingType, checkClashes);\n    break\n\n  case \"RestElement\":\n    this.checkLVal(expr.argument, bindingType, checkClashes);\n    break\n\n  case \"ParenthesizedExpression\":\n    this.checkLVal(expr.expression, bindingType, checkClashes);\n    break\n\n  default:\n    this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n  }\n};\n\n// A recursive descent parser operates by defining functions for all\n// syntactic elements, and recursively calling those, each function\n// advancing the input stream and returning an AST node. Precedence\n// of constructs (for example, the fact that `!x[1]` means `!(x[1])`\n// instead of `(!x)[1]` is handled by the fact that the parser\n// function that parses unary prefix operators is called first, and\n// in turn calls the function that parses `[]` subscripts — that\n// way, it'll receive the node for `x[1]` already parsed, and wraps\n// *that* in the unary operator node.\n//\n// Acorn uses an [operator precedence parser][opp] to handle binary\n// operator precedence, because it is much more compact than using\n// the technique outlined above, which uses different, nesting\n// functions to specify precedence, for all of the ten binary\n// precedence levels that JavaScript defines.\n//\n// [opp]: http://en.wikipedia.org/wiki/Operator-precedence_parser\n\nvar pp$3 = Parser.prototype;\n\n// Check if property name clashes with already added.\n// Object/class getters and setters are not allowed to clash —\n// either with each other or with an init property — and in\n// strict mode, init properties are also not allowed to be repeated.\n\npp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n  if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n    { return }\n  if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n    { return }\n  var key = prop.key;\n  var name;\n  switch (key.type) {\n  case \"Identifier\": name = key.name; break\n  case \"Literal\": name = String(key.value); break\n  default: return\n  }\n  var kind = prop.kind;\n  if (this.options.ecmaVersion >= 6) {\n    if (name === \"__proto__\" && kind === \"init\") {\n      if (propHash.proto) {\n        if (refDestructuringErrors && refDestructuringErrors.doubleProto < 0) { refDestructuringErrors.doubleProto = key.start; }\n        // Backwards-compat kludge. Can be removed in version 6.0\n        else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n      }\n      propHash.proto = true;\n    }\n    return\n  }\n  name = \"$\" + name;\n  var other = propHash[name];\n  if (other) {\n    var redefinition;\n    if (kind === \"init\") {\n      redefinition = this.strict && other.init || other.get || other.set;\n    } else {\n      redefinition = other.init || other[kind];\n    }\n    if (redefinition)\n      { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n  } else {\n    other = propHash[name] = {\n      init: false,\n      get: false,\n      set: false\n    };\n  }\n  other[kind] = true;\n};\n\n// ### Expression parsing\n\n// These nest, from the most general expression type at the top to\n// 'atomic', nondivisible expression types at the bottom. Most of\n// the functions will simply let the function(s) below them parse,\n// and, *if* the syntactic construct they handle is present, wrap\n// the AST node that the inner parser gave them in another node.\n\n// Parse a full expression. The optional arguments are used to\n// forbid the `in` operator (in for loops initalization expressions)\n// and provide reference for storing '=' operator inside shorthand\n// property assignment in contexts where both object expression\n// and object pattern might appear (so it's possible to raise\n// delayed syntax error at correct position).\n\npp$3.parseExpression = function(noIn, refDestructuringErrors) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n  if (this.type === types.comma) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.expressions = [expr];\n    while (this.eat(types.comma)) { node.expressions.push(this$1.parseMaybeAssign(noIn, refDestructuringErrors)); }\n    return this.finishNode(node, \"SequenceExpression\")\n  }\n  return expr\n};\n\n// Parse an assignment expression. This includes applications of\n// operators like `+=`.\n\npp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n  if (this.inGenerator && this.isContextual(\"yield\")) { return this.parseYield() }\n\n  var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n  if (refDestructuringErrors) {\n    oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n    oldTrailingComma = refDestructuringErrors.trailingComma;\n    refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n  } else {\n    refDestructuringErrors = new DestructuringErrors;\n    ownDestructuringErrors = true;\n  }\n\n  var startPos = this.start, startLoc = this.startLoc;\n  if (this.type === types.parenL || this.type === types.name)\n    { this.potentialArrowAt = this.start; }\n  var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n  if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n  if (this.type.isAssign) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.operator = this.value;\n    node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n    if (!ownDestructuringErrors) { DestructuringErrors.call(refDestructuringErrors); }\n    refDestructuringErrors.shorthandAssign = -1; // reset because shorthand default was used correctly\n    this.checkLVal(left);\n    this.next();\n    node.right = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"AssignmentExpression\")\n  } else {\n    if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n  }\n  if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n  if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n  return left\n};\n\n// Parse a ternary conditional (`?:`) operator.\n\npp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprOps(noIn, refDestructuringErrors);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  if (this.eat(types.question)) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.test = expr;\n    node.consequent = this.parseMaybeAssign();\n    this.expect(types.colon);\n    node.alternate = this.parseMaybeAssign(noIn);\n    return this.finishNode(node, \"ConditionalExpression\")\n  }\n  return expr\n};\n\n// Start the precedence parser.\n\npp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n  if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n  return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n};\n\n// Parse binary operators with the operator precedence parsing\n// algorithm. `left` is the left-hand side of the operator.\n// `minPrec` provides context that allows the function to stop and\n// defer further parser to one of its callers when it encounters an\n// operator that has a lower precedence than the set it is parsing.\n\npp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n  var prec = this.type.binop;\n  if (prec != null && (!noIn || this.type !== types._in)) {\n    if (prec > minPrec) {\n      var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n      var op = this.value;\n      this.next();\n      var startPos = this.start, startLoc = this.startLoc;\n      var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n      var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical);\n      return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n    }\n  }\n  return left\n};\n\npp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n  var node = this.startNodeAt(startPos, startLoc);\n  node.left = left;\n  node.operator = op;\n  node.right = right;\n  return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n};\n\n// Parse unary operators, both prefix and postfix.\n\npp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, expr;\n  if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n    expr = this.parseAwait();\n    sawUnary = true;\n  } else if (this.type.prefix) {\n    var node = this.startNode(), update = this.type === types.incDec;\n    node.operator = this.value;\n    node.prefix = true;\n    this.next();\n    node.argument = this.parseMaybeUnary(null, true);\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    if (update) { this.checkLVal(node.argument); }\n    else if (this.strict && node.operator === \"delete\" &&\n             node.argument.type === \"Identifier\")\n      { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n    else { sawUnary = true; }\n    expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n  } else {\n    expr = this.parseExprSubscripts(refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    while (this.type.postfix && !this.canInsertSemicolon()) {\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.operator = this$1.value;\n      node$1.prefix = false;\n      node$1.argument = expr;\n      this$1.checkLVal(expr);\n      this$1.next();\n      expr = this$1.finishNode(node$1, \"UpdateExpression\");\n    }\n  }\n\n  if (!sawUnary && this.eat(types.starstar))\n    { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n  else\n    { return expr }\n};\n\n// Parse call, dot, and `[]`-subscript expressions.\n\npp$3.parseExprSubscripts = function(refDestructuringErrors) {\n  var startPos = this.start, startLoc = this.startLoc;\n  var expr = this.parseExprAtom(refDestructuringErrors);\n  var skipArrowSubscripts = expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\";\n  if (this.checkExpressionErrors(refDestructuringErrors) || skipArrowSubscripts) { return expr }\n  var result = this.parseSubscripts(expr, startPos, startLoc);\n  if (refDestructuringErrors && result.type === \"MemberExpression\") {\n    if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n    if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n  }\n  return result\n};\n\npp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n  var this$1 = this;\n\n  var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n      this.lastTokEnd === base.end && !this.canInsertSemicolon() && this.input.slice(base.start, base.end) === \"async\";\n  for (var computed = (void 0);;) {\n    if ((computed = this$1.eat(types.bracketL)) || this$1.eat(types.dot)) {\n      var node = this$1.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this$1.parseExpression() : this$1.parseIdent(true);\n      node.computed = !!computed;\n      if (computed) { this$1.expect(types.bracketR); }\n      base = this$1.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this$1.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this$1.yieldPos, oldAwaitPos = this$1.awaitPos;\n      this$1.yieldPos = 0;\n      this$1.awaitPos = 0;\n      var exprList = this$1.parseExprList(types.parenR, this$1.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !this$1.canInsertSemicolon() && this$1.eat(types.arrow)) {\n        this$1.checkPatternErrors(refDestructuringErrors, false);\n        this$1.checkYieldAwaitInDefaultParams();\n        this$1.yieldPos = oldYieldPos;\n        this$1.awaitPos = oldAwaitPos;\n        return this$1.parseArrowExpression(this$1.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this$1.checkExpressionErrors(refDestructuringErrors, true);\n      this$1.yieldPos = oldYieldPos || this$1.yieldPos;\n      this$1.awaitPos = oldAwaitPos || this$1.awaitPos;\n      var node$1 = this$1.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      base = this$1.finishNode(node$1, \"CallExpression\");\n    } else if (this$1.type === types.backQuote) {\n      var node$2 = this$1.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this$1.parseTemplate({isTagged: true});\n      base = this$1.finishNode(node$2, \"TaggedTemplateExpression\");\n    } else {\n      return base\n    }\n  }\n};\n\n// Parse an atomic expression — either a single token that is an\n// expression, an expression started by a keyword like `function` or\n// `new`, or an expression wrapped in punctuation like `()`, `[]`,\n// or `{}`.\n\npp$3.parseExprAtom = function(refDestructuringErrors) {\n  var node, canBeArrow = this.potentialArrowAt === this.start;\n  switch (this.type) {\n  case types._super:\n    if (!this.inFunction)\n      { this.raise(this.start, \"'super' outside of function or class\"); }\n    node = this.startNode();\n    this.next();\n    // The `super` keyword can appear at below:\n    // SuperProperty:\n    //     super [ Expression ]\n    //     super . IdentifierName\n    // SuperCall:\n    //     super Arguments\n    if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n      { this.unexpected(); }\n    return this.finishNode(node, \"Super\")\n\n  case types._this:\n    node = this.startNode();\n    this.next();\n    return this.finishNode(node, \"ThisExpression\")\n\n  case types.name:\n    var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n    var id = this.parseIdent(this.type !== types.name);\n    if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n      { return this.parseFunction(this.startNodeAt(startPos, startLoc), false, false, true) }\n    if (canBeArrow && !this.canInsertSemicolon()) {\n      if (this.eat(types.arrow))\n        { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n      if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n        id = this.parseIdent();\n        if (this.canInsertSemicolon() || !this.eat(types.arrow))\n          { this.unexpected(); }\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n      }\n    }\n    return id\n\n  case types.regexp:\n    var value = this.value;\n    node = this.parseLiteral(value.value);\n    node.regex = {pattern: value.pattern, flags: value.flags};\n    return node\n\n  case types.num: case types.string:\n    return this.parseLiteral(this.value)\n\n  case types._null: case types._true: case types._false:\n    node = this.startNode();\n    node.value = this.type === types._null ? null : this.type === types._true;\n    node.raw = this.type.keyword;\n    this.next();\n    return this.finishNode(node, \"Literal\")\n\n  case types.parenL:\n    var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n    if (refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n        { refDestructuringErrors.parenthesizedAssign = start; }\n      if (refDestructuringErrors.parenthesizedBind < 0)\n        { refDestructuringErrors.parenthesizedBind = start; }\n    }\n    return expr\n\n  case types.bracketL:\n    node = this.startNode();\n    this.next();\n    node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n    return this.finishNode(node, \"ArrayExpression\")\n\n  case types.braceL:\n    return this.parseObj(false, refDestructuringErrors)\n\n  case types._function:\n    node = this.startNode();\n    this.next();\n    return this.parseFunction(node, false)\n\n  case types._class:\n    return this.parseClass(this.startNode(), false)\n\n  case types._new:\n    return this.parseNew()\n\n  case types.backQuote:\n    return this.parseTemplate()\n\n  default:\n    this.unexpected();\n  }\n};\n\npp$3.parseLiteral = function(value) {\n  var node = this.startNode();\n  node.value = value;\n  node.raw = this.input.slice(this.start, this.end);\n  this.next();\n  return this.finishNode(node, \"Literal\")\n};\n\npp$3.parseParenExpression = function() {\n  this.expect(types.parenL);\n  var val = this.parseExpression();\n  this.expect(types.parenR);\n  return val\n};\n\npp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n  var this$1 = this;\n\n  var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n  if (this.options.ecmaVersion >= 6) {\n    this.next();\n\n    var innerStartPos = this.start, innerStartLoc = this.startLoc;\n    var exprList = [], first = true, lastIsComma = false;\n    var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    while (this.type !== types.parenR) {\n      first ? first = false : this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(types.parenR, true)) {\n        lastIsComma = true;\n        break\n      } else if (this$1.type === types.ellipsis) {\n        spreadStart = this$1.start;\n        exprList.push(this$1.parseParenItem(this$1.parseRestBinding()));\n        if (this$1.type === types.comma) { this$1.raise(this$1.start, \"Comma is not permitted after the rest element\"); }\n        break\n      } else {\n        exprList.push(this$1.parseMaybeAssign(false, refDestructuringErrors, this$1.parseParenItem));\n      }\n    }\n    var innerEndPos = this.start, innerEndLoc = this.startLoc;\n    this.expect(types.parenR);\n\n    if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n      this.checkPatternErrors(refDestructuringErrors, false);\n      this.checkYieldAwaitInDefaultParams();\n      this.yieldPos = oldYieldPos;\n      this.awaitPos = oldAwaitPos;\n      return this.parseParenArrowList(startPos, startLoc, exprList)\n    }\n\n    if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n    if (spreadStart) { this.unexpected(spreadStart); }\n    this.checkExpressionErrors(refDestructuringErrors, true);\n    this.yieldPos = oldYieldPos || this.yieldPos;\n    this.awaitPos = oldAwaitPos || this.awaitPos;\n\n    if (exprList.length > 1) {\n      val = this.startNodeAt(innerStartPos, innerStartLoc);\n      val.expressions = exprList;\n      this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n    } else {\n      val = exprList[0];\n    }\n  } else {\n    val = this.parseParenExpression();\n  }\n\n  if (this.options.preserveParens) {\n    var par = this.startNodeAt(startPos, startLoc);\n    par.expression = val;\n    return this.finishNode(par, \"ParenthesizedExpression\")\n  } else {\n    return val\n  }\n};\n\npp$3.parseParenItem = function(item) {\n  return item\n};\n\npp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n  return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n};\n\n// New's precedence is slightly tricky. It must allow its argument to\n// be a `[]` or dot subscript expression, but not a call — at least,\n// not without wrapping it in parentheses. Thus, it uses the noCalls\n// argument to parseSubscripts to prevent it from consuming the\n// argument list.\n\nvar empty$1 = [];\n\npp$3.parseNew = function() {\n  var node = this.startNode();\n  var meta = this.parseIdent(true);\n  if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n    node.meta = meta;\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n    if (node.property.name !== \"target\" || containsEsc)\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is new.target\"); }\n    if (!this.inFunction)\n      { this.raiseRecoverable(node.start, \"new.target can only be used in functions\"); }\n    return this.finishNode(node, \"MetaProperty\")\n  }\n  var startPos = this.start, startLoc = this.startLoc;\n  node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n  if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n  else { node.arguments = empty$1; }\n  return this.finishNode(node, \"NewExpression\")\n};\n\n// Parse template expression.\n\npp$3.parseTemplateElement = function(ref) {\n  var isTagged = ref.isTagged;\n\n  var elem = this.startNode();\n  if (this.type === types.invalidTemplate) {\n    if (!isTagged) {\n      this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n    }\n    elem.value = {\n      raw: this.value,\n      cooked: null\n    };\n  } else {\n    elem.value = {\n      raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n      cooked: this.value\n    };\n  }\n  this.next();\n  elem.tail = this.type === types.backQuote;\n  return this.finishNode(elem, \"TemplateElement\")\n};\n\npp$3.parseTemplate = function(ref) {\n  var this$1 = this;\n  if ( ref === void 0 ) ref = {};\n  var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n  var node = this.startNode();\n  this.next();\n  node.expressions = [];\n  var curElt = this.parseTemplateElement({isTagged: isTagged});\n  node.quasis = [curElt];\n  while (!curElt.tail) {\n    if (this$1.type === types.eof) { this$1.raise(this$1.pos, \"Unterminated template literal\"); }\n    this$1.expect(types.dollarBraceL);\n    node.expressions.push(this$1.parseExpression());\n    this$1.expect(types.braceR);\n    node.quasis.push(curElt = this$1.parseTemplateElement({isTagged: isTagged}));\n  }\n  this.next();\n  return this.finishNode(node, \"TemplateLiteral\")\n};\n\npp$3.isAsyncProp = function(prop) {\n  return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n    (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n    !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n};\n\n// Parse an object literal or binding pattern.\n\npp$3.parseObj = function(isPattern, refDestructuringErrors) {\n  var this$1 = this;\n\n  var node = this.startNode(), first = true, propHash = {};\n  node.properties = [];\n  this.next();\n  while (!this.eat(types.braceR)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (this$1.afterTrailingComma(types.braceR)) { break }\n    } else { first = false; }\n\n    var prop = this$1.parseProperty(isPattern, refDestructuringErrors);\n    if (!isPattern) { this$1.checkPropClash(prop, propHash, refDestructuringErrors); }\n    node.properties.push(prop);\n  }\n  return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n};\n\npp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n  var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n  if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n    if (isPattern) {\n      prop.argument = this.parseIdent(false);\n      if (this.type === types.comma) {\n        this.raise(this.start, \"Comma is not permitted after the rest element\");\n      }\n      return this.finishNode(prop, \"RestElement\")\n    }\n    // To disallow parenthesized identifier via `this.toAssignable()`.\n    if (this.type === types.parenL && refDestructuringErrors) {\n      if (refDestructuringErrors.parenthesizedAssign < 0) {\n        refDestructuringErrors.parenthesizedAssign = this.start;\n      }\n      if (refDestructuringErrors.parenthesizedBind < 0) {\n        refDestructuringErrors.parenthesizedBind = this.start;\n      }\n    }\n    // Parse argument.\n    prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    // To disallow trailing comma via `this.toAssignable()`.\n    if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n      refDestructuringErrors.trailingComma = this.start;\n    }\n    // Finish\n    return this.finishNode(prop, \"SpreadElement\")\n  }\n  if (this.options.ecmaVersion >= 6) {\n    prop.method = false;\n    prop.shorthand = false;\n    if (isPattern || refDestructuringErrors) {\n      startPos = this.start;\n      startLoc = this.startLoc;\n    }\n    if (!isPattern)\n      { isGenerator = this.eat(types.star); }\n  }\n  var containsEsc = this.containsEsc;\n  this.parsePropertyName(prop);\n  if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n    isAsync = true;\n    isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n    this.parsePropertyName(prop, refDestructuringErrors);\n  } else {\n    isAsync = false;\n  }\n  this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n  return this.finishNode(prop, \"Property\")\n};\n\npp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n  if ((isGenerator || isAsync) && this.type === types.colon)\n    { this.unexpected(); }\n\n  if (this.eat(types.colon)) {\n    prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n    prop.kind = \"init\";\n  } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n    if (isPattern) { this.unexpected(); }\n    prop.kind = \"init\";\n    prop.method = true;\n    prop.value = this.parseMethod(isGenerator, isAsync);\n  } else if (!isPattern && !containsEsc &&\n             this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n             (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n             (this.type !== types.comma && this.type !== types.braceR)) {\n    if (isGenerator || isAsync) { this.unexpected(); }\n    prop.kind = prop.key.name;\n    this.parsePropertyName(prop);\n    prop.value = this.parseMethod(false);\n    var paramCount = prop.kind === \"get\" ? 0 : 1;\n    if (prop.value.params.length !== paramCount) {\n      var start = prop.value.start;\n      if (prop.kind === \"get\")\n        { this.raiseRecoverable(start, \"getter should have no params\"); }\n      else\n        { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n    } else {\n      if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n        { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n    }\n  } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n    this.checkUnreserved(prop.key);\n    prop.kind = \"init\";\n    if (isPattern) {\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else if (this.type === types.eq && refDestructuringErrors) {\n      if (refDestructuringErrors.shorthandAssign < 0)\n        { refDestructuringErrors.shorthandAssign = this.start; }\n      prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n    } else {\n      prop.value = prop.key;\n    }\n    prop.shorthand = true;\n  } else { this.unexpected(); }\n};\n\npp$3.parsePropertyName = function(prop) {\n  if (this.options.ecmaVersion >= 6) {\n    if (this.eat(types.bracketL)) {\n      prop.computed = true;\n      prop.key = this.parseMaybeAssign();\n      this.expect(types.bracketR);\n      return prop.key\n    } else {\n      prop.computed = false;\n    }\n  }\n  return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(true)\n};\n\n// Initialize empty function node.\n\npp$3.initFunction = function(node) {\n  node.id = null;\n  if (this.options.ecmaVersion >= 6) {\n    node.generator = false;\n    node.expression = false;\n  }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = false; }\n};\n\n// Parse object or class method.\n\npp$3.parseMethod = function(isGenerator, isAsync) {\n  var node = this.startNode(), oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 6)\n    { node.generator = isGenerator; }\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = node.generator;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n  this.enterFunctionScope();\n\n  this.expect(types.parenL);\n  node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n  this.checkYieldAwaitInDefaultParams();\n  this.parseFunctionBody(node, false);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"FunctionExpression\")\n};\n\n// Parse arrow function expression with given parameters.\n\npp$3.parseArrowExpression = function(node, params, isAsync) {\n  var oldInGen = this.inGenerator, oldInAsync = this.inAsync,\n      oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldInFunc = this.inFunction;\n\n  this.enterFunctionScope();\n  this.initFunction(node);\n  if (this.options.ecmaVersion >= 8)\n    { node.async = !!isAsync; }\n\n  this.inGenerator = false;\n  this.inAsync = node.async;\n  this.yieldPos = 0;\n  this.awaitPos = 0;\n  this.inFunction = true;\n\n  node.params = this.toAssignableList(params, true);\n  this.parseFunctionBody(node, true);\n\n  this.inGenerator = oldInGen;\n  this.inAsync = oldInAsync;\n  this.yieldPos = oldYieldPos;\n  this.awaitPos = oldAwaitPos;\n  this.inFunction = oldInFunc;\n  return this.finishNode(node, \"ArrowFunctionExpression\")\n};\n\n// Parse function body and check parameters.\n\npp$3.parseFunctionBody = function(node, isArrowFunction) {\n  var isExpression = isArrowFunction && this.type !== types.braceL;\n  var oldStrict = this.strict, useStrict = false;\n\n  if (isExpression) {\n    node.body = this.parseMaybeAssign();\n    node.expression = true;\n    this.checkParams(node, false);\n  } else {\n    var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n    if (!oldStrict || nonSimple) {\n      useStrict = this.strictDirective(this.end);\n      // If this is a strict mode function, verify that argument names\n      // are not repeated, and it does not try to bind the words `eval`\n      // or `arguments`.\n      if (useStrict && nonSimple)\n        { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n    }\n    // Start a new scope with regard to labels and the `inFunction`\n    // flag (restore them to their old value afterwards).\n    var oldLabels = this.labels;\n    this.labels = [];\n    if (useStrict) { this.strict = true; }\n\n    // Add the params to varDeclaredNames to ensure that an error is thrown\n    // if a let/const declaration in the function clashes with one of the params.\n    this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && this.isSimpleParamList(node.params));\n    node.body = this.parseBlock(false);\n    node.expression = false;\n    this.adaptDirectivePrologue(node.body.body);\n    this.labels = oldLabels;\n  }\n  this.exitFunctionScope();\n\n  if (this.strict && node.id) {\n    // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n    this.checkLVal(node.id, \"none\");\n  }\n  this.strict = oldStrict;\n};\n\npp$3.isSimpleParamList = function(params) {\n  for (var i = 0, list = params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    if (param.type !== \"Identifier\") { return false\n  } }\n  return true\n};\n\n// Checks function params for various disallowed patterns such as using \"eval\"\n// or \"arguments\" and duplicate parameters.\n\npp$3.checkParams = function(node, allowDuplicates) {\n  var this$1 = this;\n\n  var nameHash = {};\n  for (var i = 0, list = node.params; i < list.length; i += 1)\n    {\n    var param = list[i];\n\n    this$1.checkLVal(param, \"var\", allowDuplicates ? null : nameHash);\n  }\n};\n\n// Parses a comma-separated list of expressions, and returns them as\n// an array. `close` is the token type that ends the list, and\n// `allowEmpty` can be turned on to allow subsequent commas with\n// nothing in between them to be parsed as `null` (which is needed\n// for array literals).\n\npp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n  var this$1 = this;\n\n  var elts = [], first = true;\n  while (!this.eat(close)) {\n    if (!first) {\n      this$1.expect(types.comma);\n      if (allowTrailingComma && this$1.afterTrailingComma(close)) { break }\n    } else { first = false; }\n\n    var elt = (void 0);\n    if (allowEmpty && this$1.type === types.comma)\n      { elt = null; }\n    else if (this$1.type === types.ellipsis) {\n      elt = this$1.parseSpread(refDestructuringErrors);\n      if (refDestructuringErrors && this$1.type === types.comma && refDestructuringErrors.trailingComma < 0)\n        { refDestructuringErrors.trailingComma = this$1.start; }\n    } else {\n      elt = this$1.parseMaybeAssign(false, refDestructuringErrors);\n    }\n    elts.push(elt);\n  }\n  return elts\n};\n\npp$3.checkUnreserved = function(ref) {\n  var start = ref.start;\n  var end = ref.end;\n  var name = ref.name;\n\n  if (this.inGenerator && name === \"yield\")\n    { this.raiseRecoverable(start, \"Can not use 'yield' as identifier inside a generator\"); }\n  if (this.inAsync && name === \"await\")\n    { this.raiseRecoverable(start, \"Can not use 'await' as identifier inside an async function\"); }\n  if (this.isKeyword(name))\n    { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n  if (this.options.ecmaVersion < 6 &&\n    this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n  var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n  if (re.test(name)) {\n    if (!this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Can not use keyword 'await' outside an async function\"); }\n    this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n  }\n};\n\n// Parse the next token as an identifier. If `liberal` is true (used\n// when parsing properties), it will also convert keywords into\n// identifiers.\n\npp$3.parseIdent = function(liberal, isBinding) {\n  var node = this.startNode();\n  if (liberal && this.options.allowReserved === \"never\") { liberal = false; }\n  if (this.type === types.name) {\n    node.name = this.value;\n  } else if (this.type.keyword) {\n    node.name = this.type.keyword;\n\n    // To fix https://github.com/acornjs/acorn/issues/575\n    // `class` and `function` keywords push new context into this.context.\n    // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n    // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n    if ((node.name === \"class\" || node.name === \"function\") &&\n        (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n      this.context.pop();\n    }\n  } else {\n    this.unexpected();\n  }\n  this.next();\n  this.finishNode(node, \"Identifier\");\n  if (!liberal) { this.checkUnreserved(node); }\n  return node\n};\n\n// Parses yield expression inside generator.\n\npp$3.parseYield = function() {\n  if (!this.yieldPos) { this.yieldPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n    node.delegate = false;\n    node.argument = null;\n  } else {\n    node.delegate = this.eat(types.star);\n    node.argument = this.parseMaybeAssign();\n  }\n  return this.finishNode(node, \"YieldExpression\")\n};\n\npp$3.parseAwait = function() {\n  if (!this.awaitPos) { this.awaitPos = this.start; }\n\n  var node = this.startNode();\n  this.next();\n  node.argument = this.parseMaybeUnary(null, true);\n  return this.finishNode(node, \"AwaitExpression\")\n};\n\nvar pp$4 = Parser.prototype;\n\n// This function is used to raise exceptions on parse errors. It\n// takes an offset integer (into the current `input`) to indicate\n// the location of the error, attaches the position to the end\n// of the error message, and then raises a `SyntaxError` with that\n// message.\n\npp$4.raise = function(pos, message) {\n  var loc = getLineInfo(this.input, pos);\n  message += \" (\" + loc.line + \":\" + loc.column + \")\";\n  var err = new SyntaxError(message);\n  err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n  throw err\n};\n\npp$4.raiseRecoverable = pp$4.raise;\n\npp$4.curPosition = function() {\n  if (this.options.locations) {\n    return new Position(this.curLine, this.pos - this.lineStart)\n  }\n};\n\nvar pp$5 = Parser.prototype;\n\n// Object.assign polyfill\nvar assign = Object.assign || function(target) {\n  var sources = [], len = arguments.length - 1;\n  while ( len-- > 0 ) sources[ len ] = arguments[ len + 1 ];\n\n  for (var i = 0, list = sources; i < list.length; i += 1) {\n    var source = list[i];\n\n    for (var key in source) {\n      if (has(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target\n};\n\n// The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\npp$5.enterFunctionScope = function() {\n  // var: a hash of var-declared names in the current lexical scope\n  // lexical: a hash of lexically-declared names in the current lexical scope\n  // childVar: a hash of var-declared names in all child lexical scopes of the current lexical scope (within the current function scope)\n  // parentLexical: a hash of lexically-declared names in all parent lexical scopes of the current lexical scope (within the current function scope)\n  this.scopeStack.push({var: {}, lexical: {}, childVar: {}, parentLexical: {}});\n};\n\npp$5.exitFunctionScope = function() {\n  this.scopeStack.pop();\n};\n\npp$5.enterLexicalScope = function() {\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n  var childScope = {var: {}, lexical: {}, childVar: {}, parentLexical: {}};\n\n  this.scopeStack.push(childScope);\n  assign(childScope.parentLexical, parentScope.lexical, parentScope.parentLexical);\n};\n\npp$5.exitLexicalScope = function() {\n  var childScope = this.scopeStack.pop();\n  var parentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  assign(parentScope.childVar, childScope.var, childScope.childVar);\n};\n\n/**\n * A name can be declared with `var` if there are no variables with the same name declared with `let`/`const`\n * in the current lexical scope or any of the parent lexical scopes in this function.\n */\npp$5.canDeclareVarName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.parentLexical, name)\n};\n\n/**\n * A name can be declared with `let`/`const` if there are no variables with the same name declared with `let`/`const`\n * in the current scope, and there are no variables with the same name declared with `var` in the current scope or in\n * any child lexical scopes in this function.\n */\npp$5.canDeclareLexicalName = function(name) {\n  var currentScope = this.scopeStack[this.scopeStack.length - 1];\n\n  return !has(currentScope.lexical, name) && !has(currentScope.var, name) && !has(currentScope.childVar, name)\n};\n\npp$5.declareVarName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].var[name] = true;\n};\n\npp$5.declareLexicalName = function(name) {\n  this.scopeStack[this.scopeStack.length - 1].lexical[name] = true;\n};\n\nvar Node = function Node(parser, pos, loc) {\n  this.type = \"\";\n  this.start = pos;\n  this.end = 0;\n  if (parser.options.locations)\n    { this.loc = new SourceLocation(parser, loc); }\n  if (parser.options.directSourceFile)\n    { this.sourceFile = parser.options.directSourceFile; }\n  if (parser.options.ranges)\n    { this.range = [pos, 0]; }\n};\n\n// Start an AST node, attaching a start offset.\n\nvar pp$6 = Parser.prototype;\n\npp$6.startNode = function() {\n  return new Node(this, this.start, this.startLoc)\n};\n\npp$6.startNodeAt = function(pos, loc) {\n  return new Node(this, pos, loc)\n};\n\n// Finish an AST node, adding `type` and `end` properties.\n\nfunction finishNodeAt(node, type, pos, loc) {\n  node.type = type;\n  node.end = pos;\n  if (this.options.locations)\n    { node.loc.end = loc; }\n  if (this.options.ranges)\n    { node.range[1] = pos; }\n  return node\n}\n\npp$6.finishNode = function(node, type) {\n  return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n};\n\n// Finish node at given position\n\npp$6.finishNodeAt = function(node, type, pos, loc) {\n  return finishNodeAt.call(this, node, type, pos, loc)\n};\n\n// The algorithm used to determine whether a regexp can appear at a\n// given point in the program is loosely based on sweet.js' approach.\n// See https://github.com/mozilla/sweet.js/wiki/design\n\nvar TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n  this.token = token;\n  this.isExpr = !!isExpr;\n  this.preserveSpace = !!preserveSpace;\n  this.override = override;\n  this.generator = !!generator;\n};\n\nvar types$1 = {\n  b_stat: new TokContext(\"{\", false),\n  b_expr: new TokContext(\"{\", true),\n  b_tmpl: new TokContext(\"${\", false),\n  p_stat: new TokContext(\"(\", false),\n  p_expr: new TokContext(\"(\", true),\n  q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n  f_stat: new TokContext(\"function\", false),\n  f_expr: new TokContext(\"function\", true),\n  f_expr_gen: new TokContext(\"function\", true, false, null, true),\n  f_gen: new TokContext(\"function\", false, false, null, true)\n};\n\nvar pp$7 = Parser.prototype;\n\npp$7.initialContext = function() {\n  return [types$1.b_stat]\n};\n\npp$7.braceIsBlock = function(prevType) {\n  var parent = this.curContext();\n  if (parent === types$1.f_expr || parent === types$1.f_stat)\n    { return true }\n  if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n    { return !parent.isExpr }\n\n  // The check for `tt.name && exprAllowed` detects whether we are\n  // after a `yield` or `of` construct. See the `updateContext` for\n  // `tt.name`.\n  if (prevType === types._return || prevType === types.name && this.exprAllowed)\n    { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n  if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n    { return true }\n  if (prevType === types.braceL)\n    { return parent === types$1.b_stat }\n  if (prevType === types._var || prevType === types.name)\n    { return false }\n  return !this.exprAllowed\n};\n\npp$7.inGeneratorContext = function() {\n  var this$1 = this;\n\n  for (var i = this.context.length - 1; i >= 1; i--) {\n    var context = this$1.context[i];\n    if (context.token === \"function\")\n      { return context.generator }\n  }\n  return false\n};\n\npp$7.updateContext = function(prevType) {\n  var update, type = this.type;\n  if (type.keyword && prevType === types.dot)\n    { this.exprAllowed = false; }\n  else if (update = type.updateContext)\n    { update.call(this, prevType); }\n  else\n    { this.exprAllowed = type.beforeExpr; }\n};\n\n// Token-specific context update code\n\ntypes.parenR.updateContext = types.braceR.updateContext = function() {\n  if (this.context.length === 1) {\n    this.exprAllowed = true;\n    return\n  }\n  var out = this.context.pop();\n  if (out === types$1.b_stat && this.curContext().token === \"function\") {\n    out = this.context.pop();\n  }\n  this.exprAllowed = !out.isExpr;\n};\n\ntypes.braceL.updateContext = function(prevType) {\n  this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n  this.exprAllowed = true;\n};\n\ntypes.dollarBraceL.updateContext = function() {\n  this.context.push(types$1.b_tmpl);\n  this.exprAllowed = true;\n};\n\ntypes.parenL.updateContext = function(prevType) {\n  var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n  this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n  this.exprAllowed = true;\n};\n\ntypes.incDec.updateContext = function() {\n  // tokExprAllowed stays unchanged\n};\n\ntypes._function.updateContext = types._class.updateContext = function(prevType) {\n  if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n      !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n    { this.context.push(types$1.f_expr); }\n  else\n    { this.context.push(types$1.f_stat); }\n  this.exprAllowed = false;\n};\n\ntypes.backQuote.updateContext = function() {\n  if (this.curContext() === types$1.q_tmpl)\n    { this.context.pop(); }\n  else\n    { this.context.push(types$1.q_tmpl); }\n  this.exprAllowed = false;\n};\n\ntypes.star.updateContext = function(prevType) {\n  if (prevType === types._function) {\n    var index = this.context.length - 1;\n    if (this.context[index] === types$1.f_expr)\n      { this.context[index] = types$1.f_expr_gen; }\n    else\n      { this.context[index] = types$1.f_gen; }\n  }\n  this.exprAllowed = true;\n};\n\ntypes.name.updateContext = function(prevType) {\n  var allowed = false;\n  if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n    if (this.value === \"of\" && !this.exprAllowed ||\n        this.value === \"yield\" && this.inGeneratorContext())\n      { allowed = true; }\n  }\n  this.exprAllowed = allowed;\n};\n\nvar data = {\n  \"$LONE\": [\n    \"ASCII\",\n    \"ASCII_Hex_Digit\",\n    \"AHex\",\n    \"Alphabetic\",\n    \"Alpha\",\n    \"Any\",\n    \"Assigned\",\n    \"Bidi_Control\",\n    \"Bidi_C\",\n    \"Bidi_Mirrored\",\n    \"Bidi_M\",\n    \"Case_Ignorable\",\n    \"CI\",\n    \"Cased\",\n    \"Changes_When_Casefolded\",\n    \"CWCF\",\n    \"Changes_When_Casemapped\",\n    \"CWCM\",\n    \"Changes_When_Lowercased\",\n    \"CWL\",\n    \"Changes_When_NFKC_Casefolded\",\n    \"CWKCF\",\n    \"Changes_When_Titlecased\",\n    \"CWT\",\n    \"Changes_When_Uppercased\",\n    \"CWU\",\n    \"Dash\",\n    \"Default_Ignorable_Code_Point\",\n    \"DI\",\n    \"Deprecated\",\n    \"Dep\",\n    \"Diacritic\",\n    \"Dia\",\n    \"Emoji\",\n    \"Emoji_Component\",\n    \"Emoji_Modifier\",\n    \"Emoji_Modifier_Base\",\n    \"Emoji_Presentation\",\n    \"Extender\",\n    \"Ext\",\n    \"Grapheme_Base\",\n    \"Gr_Base\",\n    \"Grapheme_Extend\",\n    \"Gr_Ext\",\n    \"Hex_Digit\",\n    \"Hex\",\n    \"IDS_Binary_Operator\",\n    \"IDSB\",\n    \"IDS_Trinary_Operator\",\n    \"IDST\",\n    \"ID_Continue\",\n    \"IDC\",\n    \"ID_Start\",\n    \"IDS\",\n    \"Ideographic\",\n    \"Ideo\",\n    \"Join_Control\",\n    \"Join_C\",\n    \"Logical_Order_Exception\",\n    \"LOE\",\n    \"Lowercase\",\n    \"Lower\",\n    \"Math\",\n    \"Noncharacter_Code_Point\",\n    \"NChar\",\n    \"Pattern_Syntax\",\n    \"Pat_Syn\",\n    \"Pattern_White_Space\",\n    \"Pat_WS\",\n    \"Quotation_Mark\",\n    \"QMark\",\n    \"Radical\",\n    \"Regional_Indicator\",\n    \"RI\",\n    \"Sentence_Terminal\",\n    \"STerm\",\n    \"Soft_Dotted\",\n    \"SD\",\n    \"Terminal_Punctuation\",\n    \"Term\",\n    \"Unified_Ideograph\",\n    \"UIdeo\",\n    \"Uppercase\",\n    \"Upper\",\n    \"Variation_Selector\",\n    \"VS\",\n    \"White_Space\",\n    \"space\",\n    \"XID_Continue\",\n    \"XIDC\",\n    \"XID_Start\",\n    \"XIDS\"\n  ],\n  \"General_Category\": [\n    \"Cased_Letter\",\n    \"LC\",\n    \"Close_Punctuation\",\n    \"Pe\",\n    \"Connector_Punctuation\",\n    \"Pc\",\n    \"Control\",\n    \"Cc\",\n    \"cntrl\",\n    \"Currency_Symbol\",\n    \"Sc\",\n    \"Dash_Punctuation\",\n    \"Pd\",\n    \"Decimal_Number\",\n    \"Nd\",\n    \"digit\",\n    \"Enclosing_Mark\",\n    \"Me\",\n    \"Final_Punctuation\",\n    \"Pf\",\n    \"Format\",\n    \"Cf\",\n    \"Initial_Punctuation\",\n    \"Pi\",\n    \"Letter\",\n    \"L\",\n    \"Letter_Number\",\n    \"Nl\",\n    \"Line_Separator\",\n    \"Zl\",\n    \"Lowercase_Letter\",\n    \"Ll\",\n    \"Mark\",\n    \"M\",\n    \"Combining_Mark\",\n    \"Math_Symbol\",\n    \"Sm\",\n    \"Modifier_Letter\",\n    \"Lm\",\n    \"Modifier_Symbol\",\n    \"Sk\",\n    \"Nonspacing_Mark\",\n    \"Mn\",\n    \"Number\",\n    \"N\",\n    \"Open_Punctuation\",\n    \"Ps\",\n    \"Other\",\n    \"C\",\n    \"Other_Letter\",\n    \"Lo\",\n    \"Other_Number\",\n    \"No\",\n    \"Other_Punctuation\",\n    \"Po\",\n    \"Other_Symbol\",\n    \"So\",\n    \"Paragraph_Separator\",\n    \"Zp\",\n    \"Private_Use\",\n    \"Co\",\n    \"Punctuation\",\n    \"P\",\n    \"punct\",\n    \"Separator\",\n    \"Z\",\n    \"Space_Separator\",\n    \"Zs\",\n    \"Spacing_Mark\",\n    \"Mc\",\n    \"Surrogate\",\n    \"Cs\",\n    \"Symbol\",\n    \"S\",\n    \"Titlecase_Letter\",\n    \"Lt\",\n    \"Unassigned\",\n    \"Cn\",\n    \"Uppercase_Letter\",\n    \"Lu\"\n  ],\n  \"Script\": [\n    \"Adlam\",\n    \"Adlm\",\n    \"Ahom\",\n    \"Anatolian_Hieroglyphs\",\n    \"Hluw\",\n    \"Arabic\",\n    \"Arab\",\n    \"Armenian\",\n    \"Armn\",\n    \"Avestan\",\n    \"Avst\",\n    \"Balinese\",\n    \"Bali\",\n    \"Bamum\",\n    \"Bamu\",\n    \"Bassa_Vah\",\n    \"Bass\",\n    \"Batak\",\n    \"Batk\",\n    \"Bengali\",\n    \"Beng\",\n    \"Bhaiksuki\",\n    \"Bhks\",\n    \"Bopomofo\",\n    \"Bopo\",\n    \"Brahmi\",\n    \"Brah\",\n    \"Braille\",\n    \"Brai\",\n    \"Buginese\",\n    \"Bugi\",\n    \"Buhid\",\n    \"Buhd\",\n    \"Canadian_Aboriginal\",\n    \"Cans\",\n    \"Carian\",\n    \"Cari\",\n    \"Caucasian_Albanian\",\n    \"Aghb\",\n    \"Chakma\",\n    \"Cakm\",\n    \"Cham\",\n    \"Cherokee\",\n    \"Cher\",\n    \"Common\",\n    \"Zyyy\",\n    \"Coptic\",\n    \"Copt\",\n    \"Qaac\",\n    \"Cuneiform\",\n    \"Xsux\",\n    \"Cypriot\",\n    \"Cprt\",\n    \"Cyrillic\",\n    \"Cyrl\",\n    \"Deseret\",\n    \"Dsrt\",\n    \"Devanagari\",\n    \"Deva\",\n    \"Duployan\",\n    \"Dupl\",\n    \"Egyptian_Hieroglyphs\",\n    \"Egyp\",\n    \"Elbasan\",\n    \"Elba\",\n    \"Ethiopic\",\n    \"Ethi\",\n    \"Georgian\",\n    \"Geor\",\n    \"Glagolitic\",\n    \"Glag\",\n    \"Gothic\",\n    \"Goth\",\n    \"Grantha\",\n    \"Gran\",\n    \"Greek\",\n    \"Grek\",\n    \"Gujarati\",\n    \"Gujr\",\n    \"Gurmukhi\",\n    \"Guru\",\n    \"Han\",\n    \"Hani\",\n    \"Hangul\",\n    \"Hang\",\n    \"Hanunoo\",\n    \"Hano\",\n    \"Hatran\",\n    \"Hatr\",\n    \"Hebrew\",\n    \"Hebr\",\n    \"Hiragana\",\n    \"Hira\",\n    \"Imperial_Aramaic\",\n    \"Armi\",\n    \"Inherited\",\n    \"Zinh\",\n    \"Qaai\",\n    \"Inscriptional_Pahlavi\",\n    \"Phli\",\n    \"Inscriptional_Parthian\",\n    \"Prti\",\n    \"Javanese\",\n    \"Java\",\n    \"Kaithi\",\n    \"Kthi\",\n    \"Kannada\",\n    \"Knda\",\n    \"Katakana\",\n    \"Kana\",\n    \"Kayah_Li\",\n    \"Kali\",\n    \"Kharoshthi\",\n    \"Khar\",\n    \"Khmer\",\n    \"Khmr\",\n    \"Khojki\",\n    \"Khoj\",\n    \"Khudawadi\",\n    \"Sind\",\n    \"Lao\",\n    \"Laoo\",\n    \"Latin\",\n    \"Latn\",\n    \"Lepcha\",\n    \"Lepc\",\n    \"Limbu\",\n    \"Limb\",\n    \"Linear_A\",\n    \"Lina\",\n    \"Linear_B\",\n    \"Linb\",\n    \"Lisu\",\n    \"Lycian\",\n    \"Lyci\",\n    \"Lydian\",\n    \"Lydi\",\n    \"Mahajani\",\n    \"Mahj\",\n    \"Malayalam\",\n    \"Mlym\",\n    \"Mandaic\",\n    \"Mand\",\n    \"Manichaean\",\n    \"Mani\",\n    \"Marchen\",\n    \"Marc\",\n    \"Masaram_Gondi\",\n    \"Gonm\",\n    \"Meetei_Mayek\",\n    \"Mtei\",\n    \"Mende_Kikakui\",\n    \"Mend\",\n    \"Meroitic_Cursive\",\n    \"Merc\",\n    \"Meroitic_Hieroglyphs\",\n    \"Mero\",\n    \"Miao\",\n    \"Plrd\",\n    \"Modi\",\n    \"Mongolian\",\n    \"Mong\",\n    \"Mro\",\n    \"Mroo\",\n    \"Multani\",\n    \"Mult\",\n    \"Myanmar\",\n    \"Mymr\",\n    \"Nabataean\",\n    \"Nbat\",\n    \"New_Tai_Lue\",\n    \"Talu\",\n    \"Newa\",\n    \"Nko\",\n    \"Nkoo\",\n    \"Nushu\",\n    \"Nshu\",\n    \"Ogham\",\n    \"Ogam\",\n    \"Ol_Chiki\",\n    \"Olck\",\n    \"Old_Hungarian\",\n    \"Hung\",\n    \"Old_Italic\",\n    \"Ital\",\n    \"Old_North_Arabian\",\n    \"Narb\",\n    \"Old_Permic\",\n    \"Perm\",\n    \"Old_Persian\",\n    \"Xpeo\",\n    \"Old_South_Arabian\",\n    \"Sarb\",\n    \"Old_Turkic\",\n    \"Orkh\",\n    \"Oriya\",\n    \"Orya\",\n    \"Osage\",\n    \"Osge\",\n    \"Osmanya\",\n    \"Osma\",\n    \"Pahawh_Hmong\",\n    \"Hmng\",\n    \"Palmyrene\",\n    \"Palm\",\n    \"Pau_Cin_Hau\",\n    \"Pauc\",\n    \"Phags_Pa\",\n    \"Phag\",\n    \"Phoenician\",\n    \"Phnx\",\n    \"Psalter_Pahlavi\",\n    \"Phlp\",\n    \"Rejang\",\n    \"Rjng\",\n    \"Runic\",\n    \"Runr\",\n    \"Samaritan\",\n    \"Samr\",\n    \"Saurashtra\",\n    \"Saur\",\n    \"Sharada\",\n    \"Shrd\",\n    \"Shavian\",\n    \"Shaw\",\n    \"Siddham\",\n    \"Sidd\",\n    \"SignWriting\",\n    \"Sgnw\",\n    \"Sinhala\",\n    \"Sinh\",\n    \"Sora_Sompeng\",\n    \"Sora\",\n    \"Soyombo\",\n    \"Soyo\",\n    \"Sundanese\",\n    \"Sund\",\n    \"Syloti_Nagri\",\n    \"Sylo\",\n    \"Syriac\",\n    \"Syrc\",\n    \"Tagalog\",\n    \"Tglg\",\n    \"Tagbanwa\",\n    \"Tagb\",\n    \"Tai_Le\",\n    \"Tale\",\n    \"Tai_Tham\",\n    \"Lana\",\n    \"Tai_Viet\",\n    \"Tavt\",\n    \"Takri\",\n    \"Takr\",\n    \"Tamil\",\n    \"Taml\",\n    \"Tangut\",\n    \"Tang\",\n    \"Telugu\",\n    \"Telu\",\n    \"Thaana\",\n    \"Thaa\",\n    \"Thai\",\n    \"Tibetan\",\n    \"Tibt\",\n    \"Tifinagh\",\n    \"Tfng\",\n    \"Tirhuta\",\n    \"Tirh\",\n    \"Ugaritic\",\n    \"Ugar\",\n    \"Vai\",\n    \"Vaii\",\n    \"Warang_Citi\",\n    \"Wara\",\n    \"Yi\",\n    \"Yiii\",\n    \"Zanabazar_Square\",\n    \"Zanb\"\n  ]\n};\nArray.prototype.push.apply(data.$LONE, data.General_Category);\ndata.gc = data.General_Category;\ndata.sc = data.Script_Extensions = data.scx = data.Script;\n\nvar pp$9 = Parser.prototype;\n\nvar RegExpValidationState = function RegExpValidationState(parser) {\n  this.parser = parser;\n  this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n  this.source = \"\";\n  this.flags = \"\";\n  this.start = 0;\n  this.switchU = false;\n  this.switchN = false;\n  this.pos = 0;\n  this.lastIntValue = 0;\n  this.lastStringValue = \"\";\n  this.lastAssertionIsQuantifiable = false;\n  this.numCapturingParens = 0;\n  this.maxBackReference = 0;\n  this.groupNames = [];\n  this.backReferenceNames = [];\n};\n\nRegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n  var unicode = flags.indexOf(\"u\") !== -1;\n  this.start = start | 0;\n  this.source = pattern + \"\";\n  this.flags = flags;\n  this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n  this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n};\n\nRegExpValidationState.prototype.raise = function raise (message) {\n  this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n};\n\n// If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n// Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\nRegExpValidationState.prototype.at = function at (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return -1\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return c\n  }\n  return (c << 10) + s.charCodeAt(i + 1) - 0x35FDC00\n};\n\nRegExpValidationState.prototype.nextIndex = function nextIndex (i) {\n  var s = this.source;\n  var l = s.length;\n  if (i >= l) {\n    return l\n  }\n  var c = s.charCodeAt(i);\n  if (!this.switchU || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n    return i + 1\n  }\n  return i + 2\n};\n\nRegExpValidationState.prototype.current = function current () {\n  return this.at(this.pos)\n};\n\nRegExpValidationState.prototype.lookahead = function lookahead () {\n  return this.at(this.nextIndex(this.pos))\n};\n\nRegExpValidationState.prototype.advance = function advance () {\n  this.pos = this.nextIndex(this.pos);\n};\n\nRegExpValidationState.prototype.eat = function eat (ch) {\n  if (this.current() === ch) {\n    this.advance();\n    return true\n  }\n  return false\n};\n\nfunction codePointToString$1(ch) {\n  if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n  ch -= 0x10000;\n  return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n}\n\n/**\n * Validate the flags part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpFlags = function(state) {\n  var this$1 = this;\n\n  var validFlags = state.validFlags;\n  var flags = state.flags;\n\n  for (var i = 0; i < flags.length; i++) {\n    var flag = flags.charAt(i);\n    if (validFlags.indexOf(flag) === -1) {\n      this$1.raise(state.start, \"Invalid regular expression flag\");\n    }\n    if (flags.indexOf(flag, i + 1) > -1) {\n      this$1.raise(state.start, \"Duplicate regular expression flag\");\n    }\n  }\n};\n\n/**\n * Validate the pattern part of a given RegExpLiteral.\n *\n * @param {RegExpValidationState} state The state to validate RegExp.\n * @returns {void}\n */\npp$9.validateRegExpPattern = function(state) {\n  this.regexp_pattern(state);\n\n  // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n  // parsing contains a |GroupName|, reparse with the goal symbol\n  // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n  // exception if _P_ did not conform to the grammar, if any elements of _P_\n  // were not matched by the parse, or if any Early Error conditions exist.\n  if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n    state.switchN = true;\n    this.regexp_pattern(state);\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\npp$9.regexp_pattern = function(state) {\n  state.pos = 0;\n  state.lastIntValue = 0;\n  state.lastStringValue = \"\";\n  state.lastAssertionIsQuantifiable = false;\n  state.numCapturingParens = 0;\n  state.maxBackReference = 0;\n  state.groupNames.length = 0;\n  state.backReferenceNames.length = 0;\n\n  this.regexp_disjunction(state);\n\n  if (state.pos !== state.source.length) {\n    // Make the same messages as V8.\n    if (state.eat(0x29 /* ) */)) {\n      state.raise(\"Unmatched ')'\");\n    }\n    if (state.eat(0x5D /* [ */) || state.eat(0x7D /* } */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  }\n  if (state.maxBackReference > state.numCapturingParens) {\n    state.raise(\"Invalid escape\");\n  }\n  for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n    var name = list[i];\n\n    if (state.groupNames.indexOf(name) === -1) {\n      state.raise(\"Invalid named capture referenced\");\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\npp$9.regexp_disjunction = function(state) {\n  var this$1 = this;\n\n  this.regexp_alternative(state);\n  while (state.eat(0x7C /* | */)) {\n    this$1.regexp_alternative(state);\n  }\n\n  // Make the same message as V8.\n  if (this.regexp_eatQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  if (state.eat(0x7B /* { */)) {\n    state.raise(\"Lone quantifier brackets\");\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\npp$9.regexp_alternative = function(state) {\n  while (state.pos < state.source.length && this.regexp_eatTerm(state))\n    {  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\npp$9.regexp_eatTerm = function(state) {\n  if (this.regexp_eatAssertion(state)) {\n    // Handle `QuantifiableAssertion Quantifier` alternative.\n    // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n    // is a QuantifiableAssertion.\n    if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n      // Make the same message as V8.\n      if (state.switchU) {\n        state.raise(\"Invalid quantifier\");\n      }\n    }\n    return true\n  }\n\n  if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n    this.regexp_eatQuantifier(state);\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\npp$9.regexp_eatAssertion = function(state) {\n  var start = state.pos;\n  state.lastAssertionIsQuantifiable = false;\n\n  // ^, $\n  if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n    return true\n  }\n\n  // \\b \\B\n  if (state.eat(0x5C /* \\ */)) {\n    if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  // Lookahead / Lookbehind\n  if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n    var lookbehind = false;\n    if (this.options.ecmaVersion >= 9) {\n      lookbehind = state.eat(0x3C /* < */);\n    }\n    if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n      this.regexp_disjunction(state);\n      if (!state.eat(0x29 /* ) */)) {\n        state.raise(\"Unterminated group\");\n      }\n      state.lastAssertionIsQuantifiable = !lookbehind;\n      return true\n    }\n  }\n\n  state.pos = start;\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\npp$9.regexp_eatQuantifier = function(state, noError) {\n  if ( noError === void 0 ) noError = false;\n\n  if (this.regexp_eatQuantifierPrefix(state, noError)) {\n    state.eat(0x3F /* ? */);\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\npp$9.regexp_eatQuantifierPrefix = function(state, noError) {\n  return (\n    state.eat(0x2A /* * */) ||\n    state.eat(0x2B /* + */) ||\n    state.eat(0x3F /* ? */) ||\n    this.regexp_eatBracedQuantifier(state, noError)\n  )\n};\npp$9.regexp_eatBracedQuantifier = function(state, noError) {\n  var start = state.pos;\n  if (state.eat(0x7B /* { */)) {\n    var min = 0, max = -1;\n    if (this.regexp_eatDecimalDigits(state)) {\n      min = state.lastIntValue;\n      if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n        max = state.lastIntValue;\n      }\n      if (state.eat(0x7D /* } */)) {\n        // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n        if (max !== -1 && max < min && !noError) {\n          state.raise(\"numbers out of order in {} quantifier\");\n        }\n        return true\n      }\n    }\n    if (state.switchU && !noError) {\n      state.raise(\"Incomplete quantifier\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\npp$9.regexp_eatAtom = function(state) {\n  return (\n    this.regexp_eatPatternCharacters(state) ||\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state)\n  )\n};\npp$9.regexp_eatReverseSolidusAtomEscape = function(state) {\n  var start = state.pos;\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatAtomEscape(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatUncapturingGroup = function(state) {\n  var start = state.pos;\n  if (state.eat(0x28 /* ( */)) {\n    if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatCapturingGroup = function(state) {\n  if (state.eat(0x28 /* ( */)) {\n    if (this.options.ecmaVersion >= 9) {\n      this.regexp_groupSpecifier(state);\n    } else if (state.current() === 0x3F /* ? */) {\n      state.raise(\"Invalid group\");\n    }\n    this.regexp_disjunction(state);\n    if (state.eat(0x29 /* ) */)) {\n      state.numCapturingParens += 1;\n      return true\n    }\n    state.raise(\"Unterminated group\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\npp$9.regexp_eatExtendedAtom = function(state) {\n  return (\n    state.eat(0x2E /* . */) ||\n    this.regexp_eatReverseSolidusAtomEscape(state) ||\n    this.regexp_eatCharacterClass(state) ||\n    this.regexp_eatUncapturingGroup(state) ||\n    this.regexp_eatCapturingGroup(state) ||\n    this.regexp_eatInvalidBracedQuantifier(state) ||\n    this.regexp_eatExtendedPatternCharacter(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\npp$9.regexp_eatInvalidBracedQuantifier = function(state) {\n  if (this.regexp_eatBracedQuantifier(state, true)) {\n    state.raise(\"Nothing to repeat\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\npp$9.regexp_eatSyntaxCharacter = function(state) {\n  var ch = state.current();\n  if (isSyntaxCharacter(ch)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isSyntaxCharacter(ch) {\n  return (\n    ch === 0x24 /* $ */ ||\n    ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n    ch === 0x2E /* . */ ||\n    ch === 0x3F /* ? */ ||\n    ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n    ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n// But eat eager.\npp$9.regexp_eatPatternCharacters = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n    state.advance();\n  }\n  return state.pos !== start\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\npp$9.regexp_eatExtendedPatternCharacter = function(state) {\n  var ch = state.current();\n  if (\n    ch !== -1 &&\n    ch !== 0x24 /* $ */ &&\n    !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n    ch !== 0x2E /* . */ &&\n    ch !== 0x3F /* ? */ &&\n    ch !== 0x5B /* [ */ &&\n    ch !== 0x5E /* ^ */ &&\n    ch !== 0x7C /* | */\n  ) {\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// GroupSpecifier[U] ::\n//   [empty]\n//   `?` GroupName[?U]\npp$9.regexp_groupSpecifier = function(state) {\n  if (state.eat(0x3F /* ? */)) {\n    if (this.regexp_eatGroupName(state)) {\n      if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n        state.raise(\"Duplicate capture group name\");\n      }\n      state.groupNames.push(state.lastStringValue);\n      return\n    }\n    state.raise(\"Invalid group\");\n  }\n};\n\n// GroupName[U] ::\n//   `<` RegExpIdentifierName[?U] `>`\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatGroupName = function(state) {\n  state.lastStringValue = \"\";\n  if (state.eat(0x3C /* < */)) {\n    if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n      return true\n    }\n    state.raise(\"Invalid capture group name\");\n  }\n  return false\n};\n\n// RegExpIdentifierName[U] ::\n//   RegExpIdentifierStart[?U]\n//   RegExpIdentifierName[?U] RegExpIdentifierPart[?U]\n// Note: this updates `state.lastStringValue` property with the eaten name.\npp$9.regexp_eatRegExpIdentifierName = function(state) {\n  state.lastStringValue = \"\";\n  if (this.regexp_eatRegExpIdentifierStart(state)) {\n    state.lastStringValue += codePointToString$1(state.lastIntValue);\n    while (this.regexp_eatRegExpIdentifierPart(state)) {\n      state.lastStringValue += codePointToString$1(state.lastIntValue);\n    }\n    return true\n  }\n  return false\n};\n\n// RegExpIdentifierStart[U] ::\n//   UnicodeIDStart\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\npp$9.regexp_eatRegExpIdentifierStart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierStart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierStart(ch) {\n  return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n}\n\n// RegExpIdentifierPart[U] ::\n//   UnicodeIDContinue\n//   `$`\n//   `_`\n//   `\\` RegExpUnicodeEscapeSequence[?U]\n//   <ZWNJ>\n//   <ZWJ>\npp$9.regexp_eatRegExpIdentifierPart = function(state) {\n  var start = state.pos;\n  var ch = state.current();\n  state.advance();\n\n  if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state)) {\n    ch = state.lastIntValue;\n  }\n  if (isRegExpIdentifierPart(ch)) {\n    state.lastIntValue = ch;\n    return true\n  }\n\n  state.pos = start;\n  return false\n};\nfunction isRegExpIdentifierPart(ch) {\n  return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\npp$9.regexp_eatAtomEscape = function(state) {\n  if (\n    this.regexp_eatBackReference(state) ||\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state) ||\n    (state.switchN && this.regexp_eatKGroupName(state))\n  ) {\n    return true\n  }\n  if (state.switchU) {\n    // Make the same message as V8.\n    if (state.current() === 0x63 /* c */) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.raise(\"Invalid escape\");\n  }\n  return false\n};\npp$9.regexp_eatBackReference = function(state) {\n  var start = state.pos;\n  if (this.regexp_eatDecimalEscape(state)) {\n    var n = state.lastIntValue;\n    if (state.switchU) {\n      // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n      if (n > state.maxBackReference) {\n        state.maxBackReference = n;\n      }\n      return true\n    }\n    if (n <= state.numCapturingParens) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatKGroupName = function(state) {\n  if (state.eat(0x6B /* k */)) {\n    if (this.regexp_eatGroupName(state)) {\n      state.backReferenceNames.push(state.lastStringValue);\n      return true\n    }\n    state.raise(\"Invalid named reference\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\npp$9.regexp_eatCharacterEscape = function(state) {\n  return (\n    this.regexp_eatControlEscape(state) ||\n    this.regexp_eatCControlLetter(state) ||\n    this.regexp_eatZero(state) ||\n    this.regexp_eatHexEscapeSequence(state) ||\n    this.regexp_eatRegExpUnicodeEscapeSequence(state) ||\n    (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n    this.regexp_eatIdentityEscape(state)\n  )\n};\npp$9.regexp_eatCControlLetter = function(state) {\n  var start = state.pos;\n  if (state.eat(0x63 /* c */)) {\n    if (this.regexp_eatControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n  return false\n};\npp$9.regexp_eatZero = function(state) {\n  if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n    state.lastIntValue = 0;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\npp$9.regexp_eatControlEscape = function(state) {\n  var ch = state.current();\n  if (ch === 0x74 /* t */) {\n    state.lastIntValue = 0x09; /* \\t */\n    state.advance();\n    return true\n  }\n  if (ch === 0x6E /* n */) {\n    state.lastIntValue = 0x0A; /* \\n */\n    state.advance();\n    return true\n  }\n  if (ch === 0x76 /* v */) {\n    state.lastIntValue = 0x0B; /* \\v */\n    state.advance();\n    return true\n  }\n  if (ch === 0x66 /* f */) {\n    state.lastIntValue = 0x0C; /* \\f */\n    state.advance();\n    return true\n  }\n  if (ch === 0x72 /* r */) {\n    state.lastIntValue = 0x0D; /* \\r */\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\npp$9.regexp_eatControlLetter = function(state) {\n  var ch = state.current();\n  if (isControlLetter(ch)) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\nfunction isControlLetter(ch) {\n  return (\n    (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n  )\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\npp$9.regexp_eatRegExpUnicodeEscapeSequence = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x75 /* u */)) {\n    if (this.regexp_eatFixedHexDigits(state, 4)) {\n      var lead = state.lastIntValue;\n      if (state.switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n        var leadSurrogateEnd = state.pos;\n        if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n          var trail = state.lastIntValue;\n          if (trail >= 0xDC00 && trail <= 0xDFFF) {\n            state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n            return true\n          }\n        }\n        state.pos = leadSurrogateEnd;\n        state.lastIntValue = lead;\n      }\n      return true\n    }\n    if (\n      state.switchU &&\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatHexDigits(state) &&\n      state.eat(0x7D /* } */) &&\n      isValidUnicode(state.lastIntValue)\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid unicode escape\");\n    }\n    state.pos = start;\n  }\n\n  return false\n};\nfunction isValidUnicode(ch) {\n  return ch >= 0 && ch <= 0x10FFFF\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\npp$9.regexp_eatIdentityEscape = function(state) {\n  if (state.switchU) {\n    if (this.regexp_eatSyntaxCharacter(state)) {\n      return true\n    }\n    if (state.eat(0x2F /* / */)) {\n      state.lastIntValue = 0x2F; /* / */\n      return true\n    }\n    return false\n  }\n\n  var ch = state.current();\n  if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\npp$9.regexp_eatDecimalEscape = function(state) {\n  state.lastIntValue = 0;\n  var ch = state.current();\n  if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n    do {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\npp$9.regexp_eatCharacterClassEscape = function(state) {\n  var ch = state.current();\n\n  if (isCharacterClassEscape(ch)) {\n    state.lastIntValue = -1;\n    state.advance();\n    return true\n  }\n\n  if (\n    state.switchU &&\n    this.options.ecmaVersion >= 9 &&\n    (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n  ) {\n    state.lastIntValue = -1;\n    state.advance();\n    if (\n      state.eat(0x7B /* { */) &&\n      this.regexp_eatUnicodePropertyValueExpression(state) &&\n      state.eat(0x7D /* } */)\n    ) {\n      return true\n    }\n    state.raise(\"Invalid property name\");\n  }\n\n  return false\n};\nfunction isCharacterClassEscape(ch) {\n  return (\n    ch === 0x64 /* d */ ||\n    ch === 0x44 /* D */ ||\n    ch === 0x73 /* s */ ||\n    ch === 0x53 /* S */ ||\n    ch === 0x77 /* w */ ||\n    ch === 0x57 /* W */\n  )\n}\n\n// UnicodePropertyValueExpression ::\n//   UnicodePropertyName `=` UnicodePropertyValue\n//   LoneUnicodePropertyNameOrValue\npp$9.regexp_eatUnicodePropertyValueExpression = function(state) {\n  var start = state.pos;\n\n  // UnicodePropertyName `=` UnicodePropertyValue\n  if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n    var name = state.lastStringValue;\n    if (this.regexp_eatUnicodePropertyValue(state)) {\n      var value = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n      return true\n    }\n  }\n  state.pos = start;\n\n  // LoneUnicodePropertyNameOrValue\n  if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n    var nameOrValue = state.lastStringValue;\n    this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n    return true\n  }\n  return false\n};\npp$9.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n  if (!data.hasOwnProperty(name) || data[name].indexOf(value) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\npp$9.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n  if (data.$LONE.indexOf(nameOrValue) === -1) {\n    state.raise(\"Invalid property name\");\n  }\n};\n\n// UnicodePropertyName ::\n//   UnicodePropertyNameCharacters\npp$9.regexp_eatUnicodePropertyName = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyNameCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyNameCharacter(ch) {\n  return isControlLetter(ch) || ch === 0x5F /* _ */\n}\n\n// UnicodePropertyValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatUnicodePropertyValue = function(state) {\n  var ch = 0;\n  state.lastStringValue = \"\";\n  while (isUnicodePropertyValueCharacter(ch = state.current())) {\n    state.lastStringValue += codePointToString$1(ch);\n    state.advance();\n  }\n  return state.lastStringValue !== \"\"\n};\nfunction isUnicodePropertyValueCharacter(ch) {\n  return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n}\n\n// LoneUnicodePropertyNameOrValue ::\n//   UnicodePropertyValueCharacters\npp$9.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n  return this.regexp_eatUnicodePropertyValue(state)\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\npp$9.regexp_eatCharacterClass = function(state) {\n  if (state.eat(0x5B /* [ */)) {\n    state.eat(0x5E /* ^ */);\n    this.regexp_classRanges(state);\n    if (state.eat(0x5D /* [ */)) {\n      return true\n    }\n    // Unreachable since it threw \"unterminated regular expression\" error before.\n    state.raise(\"Unterminated character class\");\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n// https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\npp$9.regexp_classRanges = function(state) {\n  var this$1 = this;\n\n  while (this.regexp_eatClassAtom(state)) {\n    var left = state.lastIntValue;\n    if (state.eat(0x2D /* - */) && this$1.regexp_eatClassAtom(state)) {\n      var right = state.lastIntValue;\n      if (state.switchU && (left === -1 || right === -1)) {\n        state.raise(\"Invalid character class\");\n      }\n      if (left !== -1 && right !== -1 && left > right) {\n        state.raise(\"Range out of order in character class\");\n      }\n    }\n  }\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n// https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\npp$9.regexp_eatClassAtom = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x5C /* \\ */)) {\n    if (this.regexp_eatClassEscape(state)) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      var ch$1 = state.current();\n      if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n        state.raise(\"Invalid class escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n\n  var ch = state.current();\n  if (ch !== 0x5D /* [ */) {\n    state.lastIntValue = ch;\n    state.advance();\n    return true\n  }\n\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\npp$9.regexp_eatClassEscape = function(state) {\n  var start = state.pos;\n\n  if (state.eat(0x62 /* b */)) {\n    state.lastIntValue = 0x08; /* <BS> */\n    return true\n  }\n\n  if (state.switchU && state.eat(0x2D /* - */)) {\n    state.lastIntValue = 0x2D; /* - */\n    return true\n  }\n\n  if (!state.switchU && state.eat(0x63 /* c */)) {\n    if (this.regexp_eatClassControlLetter(state)) {\n      return true\n    }\n    state.pos = start;\n  }\n\n  return (\n    this.regexp_eatCharacterClassEscape(state) ||\n    this.regexp_eatCharacterEscape(state)\n  )\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\npp$9.regexp_eatClassControlLetter = function(state) {\n  var ch = state.current();\n  if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n    state.lastIntValue = ch % 0x20;\n    state.advance();\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatHexEscapeSequence = function(state) {\n  var start = state.pos;\n  if (state.eat(0x78 /* x */)) {\n    if (this.regexp_eatFixedHexDigits(state, 2)) {\n      return true\n    }\n    if (state.switchU) {\n      state.raise(\"Invalid escape\");\n    }\n    state.pos = start;\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\npp$9.regexp_eatDecimalDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isDecimalDigit(ch = state.current())) {\n    state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isDecimalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\npp$9.regexp_eatHexDigits = function(state) {\n  var start = state.pos;\n  var ch = 0;\n  state.lastIntValue = 0;\n  while (isHexDigit(ch = state.current())) {\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return state.pos !== start\n};\nfunction isHexDigit(ch) {\n  return (\n    (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n    (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n    (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n  )\n}\nfunction hexToInt(ch) {\n  if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n    return 10 + (ch - 0x41 /* A */)\n  }\n  if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n    return 10 + (ch - 0x61 /* a */)\n  }\n  return ch - 0x30 /* 0 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n// Allows only 0-377(octal) i.e. 0-255(decimal).\npp$9.regexp_eatLegacyOctalEscapeSequence = function(state) {\n  if (this.regexp_eatOctalDigit(state)) {\n    var n1 = state.lastIntValue;\n    if (this.regexp_eatOctalDigit(state)) {\n      var n2 = state.lastIntValue;\n      if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n        state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n      } else {\n        state.lastIntValue = n1 * 8 + n2;\n      }\n    } else {\n      state.lastIntValue = n1;\n    }\n    return true\n  }\n  return false\n};\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\npp$9.regexp_eatOctalDigit = function(state) {\n  var ch = state.current();\n  if (isOctalDigit(ch)) {\n    state.lastIntValue = ch - 0x30; /* 0 */\n    state.advance();\n    return true\n  }\n  state.lastIntValue = 0;\n  return false\n};\nfunction isOctalDigit(ch) {\n  return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n}\n\n// https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n// https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n// And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\npp$9.regexp_eatFixedHexDigits = function(state, length) {\n  var start = state.pos;\n  state.lastIntValue = 0;\n  for (var i = 0; i < length; ++i) {\n    var ch = state.current();\n    if (!isHexDigit(ch)) {\n      state.pos = start;\n      return false\n    }\n    state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n    state.advance();\n  }\n  return true\n};\n\n// Object type used to represent tokens. Note that normally, tokens\n// simply exist as properties on the parser object. This is only\n// used for the onToken callback and the external tokenizer.\n\nvar Token = function Token(p) {\n  this.type = p.type;\n  this.value = p.value;\n  this.start = p.start;\n  this.end = p.end;\n  if (p.options.locations)\n    { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n  if (p.options.ranges)\n    { this.range = [p.start, p.end]; }\n};\n\n// ## Tokenizer\n\nvar pp$8 = Parser.prototype;\n\n// Move to the next token\n\npp$8.next = function() {\n  if (this.options.onToken)\n    { this.options.onToken(new Token(this)); }\n\n  this.lastTokEnd = this.end;\n  this.lastTokStart = this.start;\n  this.lastTokEndLoc = this.endLoc;\n  this.lastTokStartLoc = this.startLoc;\n  this.nextToken();\n};\n\npp$8.getToken = function() {\n  this.next();\n  return new Token(this)\n};\n\n// If we're in an ES6 environment, make parsers iterable\nif (typeof Symbol !== \"undefined\")\n  { pp$8[Symbol.iterator] = function() {\n    var this$1 = this;\n\n    return {\n      next: function () {\n        var token = this$1.getToken();\n        return {\n          done: token.type === types.eof,\n          value: token\n        }\n      }\n    }\n  }; }\n\n// Toggle strict mode. Re-reads the next number or string to please\n// pedantic tests (`\"use strict\"; 010;` should fail).\n\npp$8.curContext = function() {\n  return this.context[this.context.length - 1]\n};\n\n// Read a single token, updating the parser object's token-related\n// properties.\n\npp$8.nextToken = function() {\n  var curContext = this.curContext();\n  if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n  this.start = this.pos;\n  if (this.options.locations) { this.startLoc = this.curPosition(); }\n  if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n  if (curContext.override) { return curContext.override(this) }\n  else { this.readToken(this.fullCharCodeAtPos()); }\n};\n\npp$8.readToken = function(code) {\n  // Identifier or keyword. '\\uXXXX' sequences are allowed in\n  // identifiers, so '\\' also dispatches to that.\n  if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n    { return this.readWord() }\n\n  return this.getTokenFromCode(code)\n};\n\npp$8.fullCharCodeAtPos = function() {\n  var code = this.input.charCodeAt(this.pos);\n  if (code <= 0xd7ff || code >= 0xe000) { return code }\n  var next = this.input.charCodeAt(this.pos + 1);\n  return (code << 10) + next - 0x35fdc00\n};\n\npp$8.skipBlockComment = function() {\n  var this$1 = this;\n\n  var startLoc = this.options.onComment && this.curPosition();\n  var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n  if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n  this.pos = end + 2;\n  if (this.options.locations) {\n    lineBreakG.lastIndex = start;\n    var match;\n    while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n      ++this$1.curLine;\n      this$1.lineStart = match.index + match[0].length;\n    }\n  }\n  if (this.options.onComment)\n    { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\npp$8.skipLineComment = function(startSkip) {\n  var this$1 = this;\n\n  var start = this.pos;\n  var startLoc = this.options.onComment && this.curPosition();\n  var ch = this.input.charCodeAt(this.pos += startSkip);\n  while (this.pos < this.input.length && !isNewLine(ch)) {\n    ch = this$1.input.charCodeAt(++this$1.pos);\n  }\n  if (this.options.onComment)\n    { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                           startLoc, this.curPosition()); }\n};\n\n// Called at the start of the parse and after every token. Skips\n// whitespace and comments, and.\n\npp$8.skipSpace = function() {\n  var this$1 = this;\n\n  loop: while (this.pos < this.input.length) {\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    switch (ch) {\n    case 32: case 160: // ' '\n      ++this$1.pos;\n      break\n    case 13:\n      if (this$1.input.charCodeAt(this$1.pos + 1) === 10) {\n        ++this$1.pos;\n      }\n    case 10: case 8232: case 8233:\n      ++this$1.pos;\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      break\n    case 47: // '/'\n      switch (this$1.input.charCodeAt(this$1.pos + 1)) {\n      case 42: // '*'\n        this$1.skipBlockComment();\n        break\n      case 47:\n        this$1.skipLineComment(2);\n        break\n      default:\n        break loop\n      }\n      break\n    default:\n      if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n        ++this$1.pos;\n      } else {\n        break loop\n      }\n    }\n  }\n};\n\n// Called at the end of every token. Sets `end`, `val`, and\n// maintains `context` and `exprAllowed`, and skips the space after\n// the token, so that the next one's `start` will point at the\n// right position.\n\npp$8.finishToken = function(type, val) {\n  this.end = this.pos;\n  if (this.options.locations) { this.endLoc = this.curPosition(); }\n  var prevType = this.type;\n  this.type = type;\n  this.value = val;\n\n  this.updateContext(prevType);\n};\n\n// ### Token reading\n\n// This is the function that is called to fetch the next token. It\n// is somewhat obscure, because it works in character codes rather\n// than characters, and because operator parsing has been inlined\n// into it.\n//\n// All in the name of speed.\n//\npp$8.readToken_dot = function() {\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next >= 48 && next <= 57) { return this.readNumber(true) }\n  var next2 = this.input.charCodeAt(this.pos + 2);\n  if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n    this.pos += 3;\n    return this.finishToken(types.ellipsis)\n  } else {\n    ++this.pos;\n    return this.finishToken(types.dot)\n  }\n};\n\npp$8.readToken_slash = function() { // '/'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.slash, 1)\n};\n\npp$8.readToken_mult_modulo_exp = function(code) { // '%*'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  var tokentype = code === 42 ? types.star : types.modulo;\n\n  // exponentiation operator ** and **=\n  if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n    ++size;\n    tokentype = types.starstar;\n    next = this.input.charCodeAt(this.pos + 2);\n  }\n\n  if (next === 61) { return this.finishOp(types.assign, size + 1) }\n  return this.finishOp(tokentype, size)\n};\n\npp$8.readToken_pipe_amp = function(code) { // '|&'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) { return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2) }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n};\n\npp$8.readToken_caret = function() { // '^'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.bitwiseXOR, 1)\n};\n\npp$8.readToken_plus_min = function(code) { // '+-'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === code) {\n    if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n        (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n      // A `-->` line comment\n      this.skipLineComment(3);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    return this.finishOp(types.incDec, 2)\n  }\n  if (next === 61) { return this.finishOp(types.assign, 2) }\n  return this.finishOp(types.plusMin, 1)\n};\n\npp$8.readToken_lt_gt = function(code) { // '<>'\n  var next = this.input.charCodeAt(this.pos + 1);\n  var size = 1;\n  if (next === code) {\n    size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n    if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(types.bitShift, size)\n  }\n  if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n      this.input.charCodeAt(this.pos + 3) === 45) {\n    // `<!--`, an XML-style comment that should be interpreted as a line comment\n    this.skipLineComment(4);\n    this.skipSpace();\n    return this.nextToken()\n  }\n  if (next === 61) { size = 2; }\n  return this.finishOp(types.relational, size)\n};\n\npp$8.readToken_eq_excl = function(code) { // '=!'\n  var next = this.input.charCodeAt(this.pos + 1);\n  if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n  if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n    this.pos += 2;\n    return this.finishToken(types.arrow)\n  }\n  return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n};\n\npp$8.getTokenFromCode = function(code) {\n  switch (code) {\n  // The interpretation of a dot depends on whether it is followed\n  // by a digit or another two dots.\n  case 46: // '.'\n    return this.readToken_dot()\n\n  // Punctuation tokens.\n  case 40: ++this.pos; return this.finishToken(types.parenL)\n  case 41: ++this.pos; return this.finishToken(types.parenR)\n  case 59: ++this.pos; return this.finishToken(types.semi)\n  case 44: ++this.pos; return this.finishToken(types.comma)\n  case 91: ++this.pos; return this.finishToken(types.bracketL)\n  case 93: ++this.pos; return this.finishToken(types.bracketR)\n  case 123: ++this.pos; return this.finishToken(types.braceL)\n  case 125: ++this.pos; return this.finishToken(types.braceR)\n  case 58: ++this.pos; return this.finishToken(types.colon)\n  case 63: ++this.pos; return this.finishToken(types.question)\n\n  case 96: // '`'\n    if (this.options.ecmaVersion < 6) { break }\n    ++this.pos;\n    return this.finishToken(types.backQuote)\n\n  case 48: // '0'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n    if (this.options.ecmaVersion >= 6) {\n      if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n      if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n    }\n\n  // Anything else beginning with a digit is an integer, octal\n  // number, or float.\n  case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n    return this.readNumber(false)\n\n  // Quotes produce strings.\n  case 34: case 39: // '\"', \"'\"\n    return this.readString(code)\n\n  // Operators are parsed inline in tiny state machines. '=' (61) is\n  // often referred to. `finishOp` simply skips the amount of\n  // characters it is given as second argument, and returns a token\n  // of the type given by its first argument.\n\n  case 47: // '/'\n    return this.readToken_slash()\n\n  case 37: case 42: // '%*'\n    return this.readToken_mult_modulo_exp(code)\n\n  case 124: case 38: // '|&'\n    return this.readToken_pipe_amp(code)\n\n  case 94: // '^'\n    return this.readToken_caret()\n\n  case 43: case 45: // '+-'\n    return this.readToken_plus_min(code)\n\n  case 60: case 62: // '<>'\n    return this.readToken_lt_gt(code)\n\n  case 61: case 33: // '=!'\n    return this.readToken_eq_excl(code)\n\n  case 126: // '~'\n    return this.finishOp(types.prefix, 1)\n  }\n\n  this.raise(this.pos, \"Unexpected character '\" + codePointToString(code) + \"'\");\n};\n\npp$8.finishOp = function(type, size) {\n  var str = this.input.slice(this.pos, this.pos + size);\n  this.pos += size;\n  return this.finishToken(type, str)\n};\n\npp$8.readRegexp = function() {\n  var this$1 = this;\n\n  var escaped, inClass, start = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(start, \"Unterminated regular expression\"); }\n    var ch = this$1.input.charAt(this$1.pos);\n    if (lineBreak.test(ch)) { this$1.raise(start, \"Unterminated regular expression\"); }\n    if (!escaped) {\n      if (ch === \"[\") { inClass = true; }\n      else if (ch === \"]\" && inClass) { inClass = false; }\n      else if (ch === \"/\" && !inClass) { break }\n      escaped = ch === \"\\\\\";\n    } else { escaped = false; }\n    ++this$1.pos;\n  }\n  var pattern = this.input.slice(start, this.pos);\n  ++this.pos;\n  var flagsStart = this.pos;\n  var flags = this.readWord1();\n  if (this.containsEsc) { this.unexpected(flagsStart); }\n\n  // Validate pattern\n  var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n  state.reset(start, pattern, flags);\n  this.validateRegExpFlags(state);\n  this.validateRegExpPattern(state);\n\n  // Create Literal#value property value.\n  var value = null;\n  try {\n    value = new RegExp(pattern, flags);\n  } catch (e) {\n    // ESTree requires null if it failed to instantiate RegExp object.\n    // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n  }\n\n  return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n};\n\n// Read an integer in the given radix. Return null if zero digits\n// were read, the integer value otherwise. When `len` is given, this\n// will return `null` unless the integer has exactly `len` digits.\n\npp$8.readInt = function(radix, len) {\n  var this$1 = this;\n\n  var start = this.pos, total = 0;\n  for (var i = 0, e = len == null ? Infinity : len; i < e; ++i) {\n    var code = this$1.input.charCodeAt(this$1.pos), val = (void 0);\n    if (code >= 97) { val = code - 97 + 10; } // a\n    else if (code >= 65) { val = code - 65 + 10; } // A\n    else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n    else { val = Infinity; }\n    if (val >= radix) { break }\n    ++this$1.pos;\n    total = total * radix + val;\n  }\n  if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n  return total\n};\n\npp$8.readRadixNumber = function(radix) {\n  this.pos += 2; // 0x\n  var val = this.readInt(radix);\n  if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n  return this.finishToken(types.num, val)\n};\n\n// Read an integer, octal integer, or floating-point number.\n\npp$8.readNumber = function(startsWithDot) {\n  var start = this.pos;\n  if (!startsWithDot && this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n  if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n  if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n  var next = this.input.charCodeAt(this.pos);\n  if (next === 46 && !octal) { // '.'\n    ++this.pos;\n    this.readInt(10);\n    next = this.input.charCodeAt(this.pos);\n  }\n  if ((next === 69 || next === 101) && !octal) { // 'eE'\n    next = this.input.charCodeAt(++this.pos);\n    if (next === 43 || next === 45) { ++this.pos; } // '+-'\n    if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n  }\n  if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n  var str = this.input.slice(start, this.pos);\n  var val = octal ? parseInt(str, 8) : parseFloat(str);\n  return this.finishToken(types.num, val)\n};\n\n// Read a string value, interpreting backslash-escapes.\n\npp$8.readCodePoint = function() {\n  var ch = this.input.charCodeAt(this.pos), code;\n\n  if (ch === 123) { // '{'\n    if (this.options.ecmaVersion < 6) { this.unexpected(); }\n    var codePos = ++this.pos;\n    code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n    ++this.pos;\n    if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n  } else {\n    code = this.readHexChar(4);\n  }\n  return code\n};\n\nfunction codePointToString(code) {\n  // UTF-16 Decoding\n  if (code <= 0xFFFF) { return String.fromCharCode(code) }\n  code -= 0x10000;\n  return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n}\n\npp$8.readString = function(quote) {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = ++this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === quote) { break }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(false);\n      chunkStart = this$1.pos;\n    } else {\n      if (isNewLine(ch, this$1.options.ecmaVersion >= 10)) { this$1.raise(this$1.start, \"Unterminated string constant\"); }\n      ++this$1.pos;\n    }\n  }\n  out += this.input.slice(chunkStart, this.pos++);\n  return this.finishToken(types.string, out)\n};\n\n// Reads template string tokens.\n\nvar INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\npp$8.tryReadTemplateToken = function() {\n  this.inTemplateElement = true;\n  try {\n    this.readTmplToken();\n  } catch (err) {\n    if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n      this.readInvalidTemplateToken();\n    } else {\n      throw err\n    }\n  }\n\n  this.inTemplateElement = false;\n};\n\npp$8.invalidStringToken = function(position, message) {\n  if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n    throw INVALID_TEMPLATE_ESCAPE_ERROR\n  } else {\n    this.raise(position, message);\n  }\n};\n\npp$8.readTmplToken = function() {\n  var this$1 = this;\n\n  var out = \"\", chunkStart = this.pos;\n  for (;;) {\n    if (this$1.pos >= this$1.input.length) { this$1.raise(this$1.start, \"Unterminated template\"); }\n    var ch = this$1.input.charCodeAt(this$1.pos);\n    if (ch === 96 || ch === 36 && this$1.input.charCodeAt(this$1.pos + 1) === 123) { // '`', '${'\n      if (this$1.pos === this$1.start && (this$1.type === types.template || this$1.type === types.invalidTemplate)) {\n        if (ch === 36) {\n          this$1.pos += 2;\n          return this$1.finishToken(types.dollarBraceL)\n        } else {\n          ++this$1.pos;\n          return this$1.finishToken(types.backQuote)\n        }\n      }\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      return this$1.finishToken(types.template, out)\n    }\n    if (ch === 92) { // '\\'\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      out += this$1.readEscapedChar(true);\n      chunkStart = this$1.pos;\n    } else if (isNewLine(ch)) {\n      out += this$1.input.slice(chunkStart, this$1.pos);\n      ++this$1.pos;\n      switch (ch) {\n      case 13:\n        if (this$1.input.charCodeAt(this$1.pos) === 10) { ++this$1.pos; }\n      case 10:\n        out += \"\\n\";\n        break\n      default:\n        out += String.fromCharCode(ch);\n        break\n      }\n      if (this$1.options.locations) {\n        ++this$1.curLine;\n        this$1.lineStart = this$1.pos;\n      }\n      chunkStart = this$1.pos;\n    } else {\n      ++this$1.pos;\n    }\n  }\n};\n\n// Reads a template token to search for the end, without validating any escape sequences\npp$8.readInvalidTemplateToken = function() {\n  var this$1 = this;\n\n  for (; this.pos < this.input.length; this.pos++) {\n    switch (this$1.input[this$1.pos]) {\n    case \"\\\\\":\n      ++this$1.pos;\n      break\n\n    case \"$\":\n      if (this$1.input[this$1.pos + 1] !== \"{\") {\n        break\n      }\n    // falls through\n\n    case \"`\":\n      return this$1.finishToken(types.invalidTemplate, this$1.input.slice(this$1.start, this$1.pos))\n\n    // no default\n    }\n  }\n  this.raise(this.start, \"Unterminated template\");\n};\n\n// Used to read escaped characters\n\npp$8.readEscapedChar = function(inTemplate) {\n  var ch = this.input.charCodeAt(++this.pos);\n  ++this.pos;\n  switch (ch) {\n  case 110: return \"\\n\" // 'n' -> '\\n'\n  case 114: return \"\\r\" // 'r' -> '\\r'\n  case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n  case 117: return codePointToString(this.readCodePoint()) // 'u'\n  case 116: return \"\\t\" // 't' -> '\\t'\n  case 98: return \"\\b\" // 'b' -> '\\b'\n  case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n  case 102: return \"\\f\" // 'f' -> '\\f'\n  case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n  case 10: // ' \\n'\n    if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n    return \"\"\n  default:\n    if (ch >= 48 && ch <= 55) {\n      var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n      var octal = parseInt(octalStr, 8);\n      if (octal > 255) {\n        octalStr = octalStr.slice(0, -1);\n        octal = parseInt(octalStr, 8);\n      }\n      this.pos += octalStr.length - 1;\n      ch = this.input.charCodeAt(this.pos);\n      if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n        this.invalidStringToken(\n          this.pos - 1 - octalStr.length,\n          inTemplate\n            ? \"Octal literal in template string\"\n            : \"Octal literal in strict mode\"\n        );\n      }\n      return String.fromCharCode(octal)\n    }\n    return String.fromCharCode(ch)\n  }\n};\n\n// Used to read character escape sequences ('\\x', '\\u', '\\U').\n\npp$8.readHexChar = function(len) {\n  var codePos = this.pos;\n  var n = this.readInt(16, len);\n  if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n  return n\n};\n\n// Read an identifier, and return it as a string. Sets `this.containsEsc`\n// to whether the word contained a '\\u' escape.\n//\n// Incrementally adds only escaped chars, adding other chunks as-is\n// as a micro-optimization.\n\npp$8.readWord1 = function() {\n  var this$1 = this;\n\n  this.containsEsc = false;\n  var word = \"\", first = true, chunkStart = this.pos;\n  var astral = this.options.ecmaVersion >= 6;\n  while (this.pos < this.input.length) {\n    var ch = this$1.fullCharCodeAtPos();\n    if (isIdentifierChar(ch, astral)) {\n      this$1.pos += ch <= 0xffff ? 1 : 2;\n    } else if (ch === 92) { // \"\\\"\n      this$1.containsEsc = true;\n      word += this$1.input.slice(chunkStart, this$1.pos);\n      var escStart = this$1.pos;\n      if (this$1.input.charCodeAt(++this$1.pos) !== 117) // \"u\"\n        { this$1.invalidStringToken(this$1.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n      ++this$1.pos;\n      var esc = this$1.readCodePoint();\n      if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n        { this$1.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n      word += codePointToString(esc);\n      chunkStart = this$1.pos;\n    } else {\n      break\n    }\n    first = false;\n  }\n  return word + this.input.slice(chunkStart, this.pos)\n};\n\n// Read an identifier or keyword token. Will check for reserved\n// words when necessary.\n\npp$8.readWord = function() {\n  var word = this.readWord1();\n  var type = types.name;\n  if (this.keywords.test(word)) {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + word); }\n    type = keywords$1[word];\n  }\n  return this.finishToken(type, word)\n};\n\n// Acorn is a tiny, fast JavaScript parser written in JavaScript.\n//\n// Acorn was written by Marijn Haverbeke, Ingvar Stepanyan, and\n// various contributors and released under an MIT license.\n//\n// Git repositories for Acorn are available at\n//\n//     http://marijnhaverbeke.nl/git/acorn\n//     https://github.com/acornjs/acorn.git\n//\n// Please use the [github bug tracker][ghbt] to report issues.\n//\n// [ghbt]: https://github.com/acornjs/acorn/issues\n//\n// This file defines the main parser interface. The library also comes\n// with a [error-tolerant parser][dammit] and an\n// [abstract syntax tree walker][walk], defined in other files.\n//\n// [dammit]: acorn_loose.js\n// [walk]: util/walk.js\n\nvar version = \"5.7.3\";\n\n// The main exported interface (under `self.acorn` when in the\n// browser) is a `parse` function that takes a code string and\n// returns an abstract syntax tree as specified by [Mozilla parser\n// API][api].\n//\n// [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\nfunction parse(input, options) {\n  return new Parser(options, input).parse()\n}\n\n// This function tries to parse a single expression at a given\n// offset in a string. Useful for parsing mixed-language formats\n// that embed JavaScript expressions.\n\nfunction parseExpressionAt(input, pos, options) {\n  var p = new Parser(options, input, pos);\n  p.nextToken();\n  return p.parseExpression()\n}\n\n// Acorn is organized as a tokenizer and a recursive-descent parser.\n// The `tokenizer` export provides an interface to the tokenizer.\n\nfunction tokenizer(input, options) {\n  return new Parser(options, input)\n}\n\n// This is a terrible kludge to support the existing, pre-ES6\n// interface where the loose parser module retroactively adds exports\n// to this module.\nvar parse_dammit;\nvar LooseParser;\nvar pluginsLoose; // eslint-disable-line camelcase\nfunction addLooseExports(parse, Parser$$1, plugins$$1) {\n  parse_dammit = parse; // eslint-disable-line camelcase\n  LooseParser = Parser$$1;\n  pluginsLoose = plugins$$1;\n}\n\nexport { version, parse, parseExpressionAt, tokenizer, parse_dammit, LooseParser, pluginsLoose, addLooseExports, Parser, plugins, defaultOptions, Position, SourceLocation, getLineInfo, Node, TokenType, types as tokTypes, keywords$1 as keywordTypes, TokContext, types$1 as tokContexts, isIdentifierChar, isIdentifierStart, Token, isNewLine, lineBreak, lineBreakG, nonASCIIwhitespace };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multiplyElement;\n/**\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction multiplyElement(product, left, right) {\n  var weights = left.weights;\n\n  for (var i = 0; i < weights.length; i++) {\n    product.weights[i] = left.weights[i] * right.weights[i];\n    product.deltas[i] = 0;\n  }\n}\n//# sourceMappingURL=multiply-element.js.map","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ArrayLookupTable;\nfunction ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  var table = this.table = {};\n  for (var i = 0; i < data.length; i++) {\n    var datum = data[i];\n    var input = datum[prop];\n    for (var j = 0; j < input.length; j++) {\n      for (var p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n};\n//# sourceMappingURL=array-lookup-table.js.map","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar BaseFunctionNode = require('../function-node-base');\nvar utils = require('../../core/utils');\n\n/**\n * @class CPUFunctionNode\n *\n * @extends BaseFunctionNode#\n *\n * @desc [INTERNAL] Represents a single function, inside JS\n *\n * <p>This handles all the raw state, converted state, etc. Of a single function.</p>\n *\n * @prop functionName         - {String}        Name of the function\n * @prop jsFunction           - {Function}   The JS Function the node represents\n * @prop jsFunctionString     - {String}        jsFunction.toString()\n * @prop paramNames           - {String[]}  Parameter names of the function\n * @prop paramTypes           - {String[]}  Shader land parameters type assumption\n * @prop isRootKernel         - {Boolean}       Special indicator, for kernel function\n * @prop webglFunctionString  - {String}        webgl converted function string\n * @prop openglFunctionString - {String}        opengl converted function string\n * @prop calledFunctions      - {String[]}  List of all the functions called\n * @prop initVariables        - {String[]}  List of variables initialized in the function\n * @prop readVariables        - {String[]}  List of variables read operations occur\n * @prop writeVariables       - {String[]}  List of variables write operations occur\n *\n */\nmodule.exports = function (_BaseFunctionNode) {\n\t_inherits(CPUFunctionNode, _BaseFunctionNode);\n\n\tfunction CPUFunctionNode(functionName, jsFunction, options) {\n\t\t_classCallCheck(this, CPUFunctionNode);\n\n\t\tvar _this = _possibleConstructorReturn(this, (CPUFunctionNode.__proto__ || Object.getPrototypeOf(CPUFunctionNode)).call(this, functionName, jsFunction, options));\n\n\t\t_this.paramSizes = options ? options.paramSizes : [];\n\t\t_this.memberStates = [];\n\t\treturn _this;\n\t}\n\n\t_createClass(CPUFunctionNode, [{\n\t\tkey: 'pushMemberState',\n\t\tvalue: function pushMemberState(name) {\n\t\t\tthis.memberStates.push(name);\n\t\t}\n\t}, {\n\t\tkey: 'popMemberState',\n\t\tvalue: function popMemberState(name) {\n\t\t\tif (this.memberState === name) {\n\t\t\t\tthis.memberStates.pop();\n\t\t\t} else {\n\t\t\t\tthrow new Error('Cannot popMemberState ' + name + ' when in ' + this.memberState);\n\t\t\t}\n\t\t}\n\t}, {\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\tthis.functionString = this.functionStringArray.join('').trim();\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name getFunctionPrototypeString\n   *\n   * @desc Returns the converted JS function\n   *\n   * @returns {String} function string, result is cached under this.getFunctionPrototypeString\n   *\n   */\n\n\t}, {\n\t\tkey: 'getFunctionPrototypeString',\n\t\tvalue: function getFunctionPrototypeString() {\n\t\t\tif (this.webGlFunctionPrototypeString) {\n\t\t\t\treturn this.webGlFunctionPrototypeString;\n\t\t\t}\n\t\t\treturn this.webGlFunctionPrototypeString = this.generate();\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionDeclaration\n   *\n   * @desc Parses the abstract syntax tree for to its *named function declaration*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionDeclaration',\n\t\tvalue: function astFunctionDeclaration(ast, retArr) {\n\t\t\tthis.builder.addFunction(null, utils.getAstString(this.jsFunctionString, ast));\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionPrototype\n   *\n   * @desc Parses the abstract syntax tree for to its *named function prototype*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionPrototype',\n\t\tvalue: function astFunctionPrototype(ast, retArr) {\n\t\t\t// Setup function return type and name\n\t\t\tif (this.isRootKernel || this.isSubKernel) {\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\tretArr.push(this.returnType);\n\t\t\tretArr.push(' ');\n\t\t\tretArr.push(this.functionName);\n\t\t\tretArr.push('(');\n\n\t\t\t// Arguments handling\n\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tretArr.push('user_');\n\t\t\t\tretArr.push(this.paramNames[i]);\n\t\t\t}\n\n\t\t\tretArr.push(');\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astFunctionExpression\n   *\n   * @desc Parses the abstract syntax tree for to its *named function*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astFunctionExpression',\n\t\tvalue: function astFunctionExpression(ast, retArr) {\n\n\t\t\t// Setup function return type and name\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\tretArr.push('function');\n\t\t\t\tretArr.push(' ');\n\t\t\t\tretArr.push(this.functionName);\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Arguments handling\n\t\t\t\tfor (var i = 0; i < this.paramNames.length; ++i) {\n\t\t\t\t\tvar paramName = this.paramNames[i];\n\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\tretArr.push(paramName);\n\t\t\t\t}\n\n\t\t\t\t// Function opening\n\t\t\t\tretArr.push(') {\\n');\n\t\t\t}\n\n\t\t\t// Body statement iteration\n\t\t\tfor (var _i = 0; _i < ast.body.body.length; ++_i) {\n\t\t\t\tthis.astGeneric(ast.body.body[_i], retArr);\n\t\t\t\tretArr.push('\\n');\n\t\t\t}\n\n\t\t\tif (!this.isRootKernel) {\n\t\t\t\t// Function closing\n\t\t\t\tretArr.push('}\\n');\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astReturnStatement\n   *\n   * @desc Parses the abstract syntax tree for to *return* statement\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astReturnStatement',\n\t\tvalue: function astReturnStatement(ast, retArr) {\n\t\t\tif (this.isRootKernel) {\n\t\t\t\tretArr.push('kernelResult = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t} else if (this.isSubKernel) {\n\t\t\t\tretArr.push(this.functionName + 'Result = ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t\tretArr.push('return ' + this.functionName + 'Result;');\n\t\t\t} else {\n\t\t\t\tretArr.push('return ');\n\t\t\t\tthis.astGeneric(ast.argument, retArr);\n\t\t\t\tretArr.push(';');\n\t\t\t}\n\n\t\t\t//throw this.astErrorOutput(\n\t\t\t//\t'Non main function return, is not supported : '+this.currentFunctionNamespace,\n\t\t\t//\tast\n\t\t\t//);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLiteral\n   *\n   * @desc Parses the abstract syntax tree for *literal value*\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLiteral',\n\t\tvalue: function astLiteral(ast, retArr) {\n\n\t\t\t// Reject non numeric literals\n\t\t\tif (isNaN(ast.value)) {\n\t\t\t\tthrow this.astErrorOutput('Non-numeric literal not supported : ' + ast.value, ast);\n\t\t\t}\n\n\t\t\tretArr.push(ast.value);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBinaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *binary* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBinaryExpression',\n\t\tvalue: function astBinaryExpression(ast, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(ast.left, retArr);\n\t\t\tretArr.push(ast.operator);\n\t\t\tthis.astGeneric(ast.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\tretArr.push('(');\n\t\t\t}\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('Infinity');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tif (this.constants && this.constants.hasOwnProperty(idtNode.name)) {\n\t\t\t\t\t\tretArr.push('constants_' + idtNode.name);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\t\tretArr.push('user_' + userParamName);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tretArr.push('user_' + idtNode.name);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\tswitch (this.state) {\n\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t{\n\t\t\t\t\t\tvar _size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\tretArr.push(' * ' + _size[0] * _size[1] + ')');\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astForStatement\n   *\n   * @desc Parses the abstract syntax tree forfor *for-loop* expression\n   *\n   * @param {Object} forNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed cpu string\n   */\n\n\t}, {\n\t\tkey: 'astForStatement',\n\t\tvalue: function astForStatement(forNode, retArr) {\n\t\t\tif (forNode.type !== 'ForStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t\t}\n\n\t\t\tif (forNode.test && forNode.test.type === 'BinaryExpression') {\n\t\t\t\tif ((forNode.test.right.type === 'Identifier' || forNode.test.right.type === 'Literal') && forNode.test.operator === '<' && this.isIdentifierConstant(forNode.test.right.name) === false) {\n\n\t\t\t\t\tif (!this.loopMaxIterations) {\n\t\t\t\t\t\tconsole.warn('Warning: loopMaxIterations is not set! Using default of 1000 which may result in unintended behavior.');\n\t\t\t\t\t\tconsole.warn('Set loopMaxIterations or use a for loop of fixed length to silence this message.');\n\t\t\t\t\t}\n\n\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\tif (retArr[retArr.length - 1] !== ';') {\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tretArr.push('LOOP_MAX');\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\n\t\t\t\t\tretArr.push('{\\n');\n\t\t\t\t\tretArr.push('if (');\n\t\t\t\t\tthis.astGeneric(forNode.test.left, retArr);\n\t\t\t\t\tretArr.push(forNode.test.operator);\n\t\t\t\t\tthis.astGeneric(forNode.test.right, retArr);\n\t\t\t\t\tretArr.push(') {\\n');\n\t\t\t\t\tif (forNode.body.type === 'BlockStatement') {\n\t\t\t\t\t\tfor (var i = 0; i < forNode.body.body.length; i++) {\n\t\t\t\t\t\t\tthis.astGeneric(forNode.body.body[i], retArr);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push('} else {\\n');\n\t\t\t\t\tretArr.push('break;\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\t\t\t\t\tretArr.push('}\\n');\n\n\t\t\t\t\treturn retArr;\n\t\t\t\t} else if (forNode.init.declarations) {\n\t\t\t\t\tvar declarations = JSON.parse(JSON.stringify(forNode.init.declarations));\n\t\t\t\t\tvar updateArgument = forNode.update.argument;\n\t\t\t\t\tif (!Array.isArray(declarations) || declarations.length < 1) {\n\t\t\t\t\t\tconsole.log(this.jsFunctionString);\n\t\t\t\t\t\tthrow new Error('Error: Incompatible for loop declaration');\n\t\t\t\t\t}\n\n\t\t\t\t\tif (declarations.length > 1) {\n\t\t\t\t\t\tvar initArgument = null;\n\t\t\t\t\t\tfor (var _i2 = 0; _i2 < declarations.length; _i2++) {\n\t\t\t\t\t\t\tvar declaration = declarations[_i2];\n\t\t\t\t\t\t\tif (declaration.id.name === updateArgument.name) {\n\t\t\t\t\t\t\t\tinitArgument = declaration;\n\t\t\t\t\t\t\t\tdeclarations.splice(_i2, 1);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tretArr.push('var ');\n\t\t\t\t\t\t\t\tthis.astGeneric(declaration, retArr);\n\t\t\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tretArr.push('for (let ');\n\t\t\t\t\t\tthis.astGeneric(initArgument, retArr);\n\t\t\t\t\t\tretArr.push(';');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tretArr.push('for (');\n\t\t\t\t\t\tthis.astGeneric(forNode.init, retArr);\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.astGeneric(forNode.test, retArr);\n\t\t\t\t\tretArr.push(';');\n\t\t\t\t\tthis.astGeneric(forNode.update, retArr);\n\t\t\t\t\tretArr.push(')');\n\t\t\t\t\tthis.astGeneric(forNode.body, retArr);\n\t\t\t\t\treturn retArr;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthrow this.astErrorOutput('Invalid for statement', forNode);\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *while* loop\n   *\n   *\n   * @param {Object} whileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed openclgl string\n   */\n\n\t}, {\n\t\tkey: 'astWhileStatement',\n\t\tvalue: function astWhileStatement(whileNode, retArr) {\n\t\t\tif (whileNode.type !== 'WhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', whileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(whileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tthis.astGeneric(whileNode.body, retArr);\n\t\t\tretArr.push('} else {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astWhileStatement\n   *\n   * @desc Parses the abstract syntax tree for *do while* loop\n   *\n   *\n   * @param {Object} doWhileNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the parsed webgl string\n   */\n\n\t}, {\n\t\tkey: 'astDoWhileStatement',\n\t\tvalue: function astDoWhileStatement(doWhileNode, retArr) {\n\t\t\tif (doWhileNode.type !== 'DoWhileStatement') {\n\t\t\t\tthrow this.astErrorOutput('Invalid while statement', doWhileNode);\n\t\t\t}\n\n\t\t\tretArr.push('for (let i = 0; i < LOOP_MAX; i++) {');\n\t\t\tthis.astGeneric(doWhileNode.body, retArr);\n\t\t\tretArr.push('if (!');\n\t\t\tthis.astGeneric(doWhileNode.test, retArr);\n\t\t\tretArr.push(') {\\n');\n\t\t\tretArr.push('break;\\n');\n\t\t\tretArr.push('}\\n');\n\t\t\tretArr.push('}\\n');\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astAssignmentExpression\n   *\n   * @desc Parses the abstract syntax tree for *Assignment* Expression\n   *\n   * @param {Object} assNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astAssignmentExpression',\n\t\tvalue: function astAssignmentExpression(assNode, retArr) {\n\t\t\tthis.astGeneric(assNode.left, retArr);\n\t\t\tretArr.push(assNode.operator);\n\t\t\tthis.astGeneric(assNode.right, retArr);\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astEmptyStatement\n   *\n   * @desc Parses the abstract syntax tree for an *Empty* Statement\n   *\n   * @param {Object} eNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astEmptyStatement',\n\t\tvalue: function astEmptyStatement(eNode, retArr) {\n\t\t\t//retArr.push(';\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBlockStatement\n   *\n   * @desc Parses the abstract syntax tree for *Block* statement\n   *\n   * @param {Object} bNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBlockStatement',\n\t\tvalue: function astBlockStatement(bNode, retArr) {\n\t\t\tretArr.push('{\\n');\n\t\t\tfor (var i = 0; i < bNode.body.length; i++) {\n\t\t\t\tthis.astGeneric(bNode.body[i], retArr);\n\t\t\t}\n\t\t\tretArr.push('}\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astExpressionStatement\n   *\n   * @desc Parses the abstract syntax tree for *generic expression* statement\n   *\n   * @param {Object} esNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astExpressionStatement',\n\t\tvalue: function astExpressionStatement(esNode, retArr) {\n\t\t\tthis.astGeneric(esNode.expression, retArr);\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclaration\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declaration*\n   *\n   * @param {Object} vardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclaration',\n\t\tvalue: function astVariableDeclaration(vardecNode, retArr) {\n\t\t\tretArr.push('var ');\n\t\t\tfor (var i = 0; i < vardecNode.declarations.length; i++) {\n\t\t\t\tthis.declarations[vardecNode.declarations[i].id.name] = 'var';\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(vardecNode.declarations[i], retArr);\n\t\t\t}\n\t\t\tretArr.push(';');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astVariableDeclarator\n   *\n   * @desc Parses the abstract syntax tree for *Variable Declarator*\n   *\n   * @param {Object} ivardecNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astVariableDeclarator',\n\t\tvalue: function astVariableDeclarator(ivardecNode, retArr) {\n\t\t\tthis.astGeneric(ivardecNode.id, retArr);\n\t\t\tif (ivardecNode.init !== null) {\n\t\t\t\tretArr.push('=');\n\t\t\t\tthis.astGeneric(ivardecNode.init, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astIfStatement\n   *\n   * @desc Parses the abstract syntax tree for *If* Statement\n   *\n   * @param {Object} ifNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIfStatement',\n\t\tvalue: function astIfStatement(ifNode, retArr) {\n\t\t\tretArr.push('if (');\n\t\t\tthis.astGeneric(ifNode.test, retArr);\n\t\t\tretArr.push(')');\n\t\t\tif (ifNode.consequent.type === 'BlockStatement') {\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t} else {\n\t\t\t\tretArr.push(' {\\n');\n\t\t\t\tthis.astGeneric(ifNode.consequent, retArr);\n\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t}\n\n\t\t\tif (ifNode.alternate) {\n\t\t\t\tretArr.push('else ');\n\t\t\t\tif (ifNode.alternate.type === 'BlockStatement') {\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t} else {\n\t\t\t\t\tretArr.push(' {\\n');\n\t\t\t\t\tthis.astGeneric(ifNode.alternate, retArr);\n\t\t\t\t\tretArr.push('\\n}\\n');\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astBreakStatement\n   *\n   * @desc Parses the abstract syntax tree for *Break* Statement\n   *\n   * @param {Object} brNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astBreakStatement',\n\t\tvalue: function astBreakStatement(brNode, retArr) {\n\t\t\tretArr.push('break;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astContinueStatement\n   *\n   * @desc Parses the abstract syntax tree for *Continue* Statement\n   *\n   * @param {Object} crNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astContinueStatement',\n\t\tvalue: function astContinueStatement(crNode, retArr) {\n\t\t\tretArr.push('continue;\\n');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astLogicalExpression\n   *\n   * @desc Parses the abstract syntax tree for *Logical* Expression\n   *\n   * @param {Object} logNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astLogicalExpression',\n\t\tvalue: function astLogicalExpression(logNode, retArr) {\n\t\t\tretArr.push('(');\n\t\t\tthis.astGeneric(logNode.left, retArr);\n\t\t\tretArr.push(logNode.operator);\n\t\t\tthis.astGeneric(logNode.right, retArr);\n\t\t\tretArr.push(')');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUpdateExpression\n   *\n   * @desc Parses the abstract syntax tree for *Update* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUpdateExpression',\n\t\tvalue: function astUpdateExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astUnaryExpression\n   *\n   * @desc Parses the abstract syntax tree for *Unary* Expression\n   *\n   * @param {Object} uNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astUnaryExpression',\n\t\tvalue: function astUnaryExpression(uNode, retArr) {\n\t\t\tif (uNode.prefix) {\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t} else {\n\t\t\t\tthis.astGeneric(uNode.argument, retArr);\n\t\t\t\tretArr.push(uNode.operator);\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astThisExpression\n   *\n   * @desc Parses the abstract syntax tree for *This* expression\n   *\n   * @param {Object} tNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astThisExpression',\n\t\tvalue: function astThisExpression(tNode, retArr) {\n\t\t\tretArr.push('_this');\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astMemberExpression\n   *\n   * @desc Parses the abstract syntax tree for *Member* Expression\n   *\n   * @param {Object} mNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astMemberExpression',\n\t\tvalue: function astMemberExpression(mNode, retArr) {\n\t\t\tif (mNode.computed) {\n\t\t\t\tif (mNode.object.type === 'Identifier' || mNode.object.type === 'MemberExpression' && mNode.object.object.object && mNode.object.object.object.type === 'ThisExpression' && mNode.object.object.property.name === 'constants') {\n\t\t\t\t\tthis.pushState('identifier');\n\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\tthis.popState('identifier');\n\t\t\t\t\tretArr.push('[');\n\t\t\t\t\tif (this.isInput(mNode.object.name)) {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t}\n\t\t\t\t\tretArr.push(']');\n\t\t\t\t} else {\n\t\t\t\t\tif (mNode.object.object) {\n\t\t\t\t\t\tif (mNode.object.object.object && this.isInput(mNode.object.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t\tthis.pushState('input-index-z');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tthis.popState('input-index-z');\n\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\tretArr.push(last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.object.name);\n\t\t\t\t\t\t} else if (this.isInput(mNode.object.object.name)) {\n\t\t\t\t\t\t\tthis.pushMemberState(mNode.object.object.name);\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last = retArr.pop();\n\t\t\t\t\t\t\tretArr.push(' + ');\n\t\t\t\t\t\t\tif (!this.isState('input-index-z')) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar isInputIndexZ = this.isState('input-index-z');\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.pushState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.pushState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tif (isInputIndexZ) {\n\t\t\t\t\t\t\t\tthis.popState('input-index-y');\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tthis.popState('input-index');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tretArr.push(_last);\n\t\t\t\t\t\t\tthis.popMemberState(mNode.object.object.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\t\tvar _last2 = retArr.pop();\n\t\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\t\tretArr.push(_last2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.astGeneric(mNode.object, retArr);\n\t\t\t\t\t\tvar _last3 = retArr.pop();\n\t\t\t\t\t\tretArr.push('][');\n\t\t\t\t\t\tthis.astGeneric(mNode.property, retArr);\n\t\t\t\t\t\tretArr.push(_last3);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tvar unrolled = this.astMemberExpressionUnroll(mNode);\n\t\t\t\tif (mNode.property.type === 'Identifier' && mNode.computed) {\n\t\t\t\t\tunrolled = 'user_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tif (unrolled.indexOf('this.constants') === 0) {\n\t\t\t\t\t// remove 'this.constants' from beginning\n\t\t\t\t\tunrolled = 'constants_' + unrolled.substring(15);\n\t\t\t\t} else if (unrolled.indexOf('this') === 0) {\n\t\t\t\t\t// Its a reference to `this`, add '_' before\n\t\t\t\t\tunrolled = '_' + unrolled;\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\tretArr.push('(');\n\t\t\t\t}\n\n\t\t\t\tswitch (unrolled) {\n\t\t\t\t\tcase '_this.output.x':\n\t\t\t\t\t\tretArr.push(this.output[0]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.y':\n\t\t\t\t\t\tretArr.push(this.output[1]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase '_this.output.z':\n\t\t\t\t\t\tretArr.push(this.output[2]);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (mNode.object && mNode.object.name && this.declarations[mNode.object.name]) {\n\t\t\t\t\t\t\tretArr.push('user_');\n\t\t\t\t\t\t}\n\t\t\t\t\t\tretArr.push(unrolled);\n\t\t\t\t}\n\n\t\t\t\tswitch (this.state) {\n\t\t\t\t\tcase 'input-index-y':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar size = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + size[0] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\tcase 'input-index-z':\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvar _size2 = this.paramSizes[this.paramNames.indexOf(this.memberState)];\n\t\t\t\t\t\t\tretArr.push(' * ' + _size2[0] * _size2[1] + ')');\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'astSequenceExpression',\n\t\tvalue: function astSequenceExpression(sNode, retArr) {\n\t\t\tfor (var i = 0; i < sNode.expressions.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(',');\n\t\t\t\t}\n\t\t\t\tthis.astGeneric(sNode.expressions, retArr);\n\t\t\t}\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astCallExpression\n   *\n   * @desc Parses the abstract syntax tree for *call* expression\n   *\n   * @param {Object} ast - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns  {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astCallExpression',\n\t\tvalue: function astCallExpression(ast, retArr) {\n\t\t\tif (ast.callee) {\n\t\t\t\t// Get the full function call, unrolled\n\t\t\t\tvar funcName = this.astMemberExpressionUnroll(ast.callee);\n\n\t\t\t\t// Register the function into the called registry\n\t\t\t\tif (this.calledFunctions.indexOf(funcName) < 0) {\n\t\t\t\t\tthis.calledFunctions.push(funcName);\n\t\t\t\t}\n\t\t\t\tif (!this.hasOwnProperty('funcName')) {\n\t\t\t\t\tthis.calledFunctionsArguments[funcName] = [];\n\t\t\t\t}\n\n\t\t\t\tvar functionArguments = [];\n\t\t\t\tthis.calledFunctionsArguments[funcName].push(functionArguments);\n\n\t\t\t\t// Call the function\n\t\t\t\tretArr.push(funcName);\n\n\t\t\t\t// Open arguments space\n\t\t\t\tretArr.push('(');\n\n\t\t\t\t// Add the vars\n\t\t\t\tfor (var i = 0; i < ast.arguments.length; ++i) {\n\t\t\t\t\tvar argument = ast.arguments[i];\n\t\t\t\t\tif (i > 0) {\n\t\t\t\t\t\tretArr.push(', ');\n\t\t\t\t\t}\n\t\t\t\t\tthis.astGeneric(argument, retArr);\n\t\t\t\t\tif (argument.type === 'Identifier') {\n\t\t\t\t\t\tvar paramIndex = this.paramNames.indexOf(argument.name);\n\t\t\t\t\t\tif (paramIndex === -1) {\n\t\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tfunctionArguments.push({\n\t\t\t\t\t\t\t\tname: argument.name,\n\t\t\t\t\t\t\t\ttype: this.paramTypes[paramIndex]\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunctionArguments.push(null);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Close arguments space\n\t\t\t\tretArr.push(')');\n\n\t\t\t\treturn retArr;\n\t\t\t}\n\n\t\t\t// Failure, unknown expression\n\t\t\tthrow this.astErrorOutput('Unknown CallExpression', ast);\n\n\t\t\treturn retArr;\n\t\t}\n\n\t\t/**\n   * @memberOf CPUFunctionNode#\n   * @function\n   * @name astArrayExpression\n   *\n   * @desc Parses the abstract syntax tree for *Array* Expression\n   *\n   * @param {Object} arrNode - the AST object to parse\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astArrayExpression',\n\t\tvalue: function astArrayExpression(arrNode, retArr) {\n\t\t\tvar arrLen = arrNode.elements.length;\n\n\t\t\tretArr.push('[');\n\t\t\tfor (var i = 0; i < arrLen; ++i) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tretArr.push(', ');\n\t\t\t\t}\n\t\t\t\tvar subNode = arrNode.elements[i];\n\t\t\t\tthis.astGeneric(subNode, retArr);\n\t\t\t}\n\t\t\tretArr.push(']');\n\n\t\t\treturn retArr;\n\n\t\t\t// // Failure, unknown expression\n\t\t\t// throw this.astErrorOutput(\n\t\t\t// \t'Unknown  ArrayExpression',\n\t\t\t// \tarrNode\n\t\t\t//);\n\t\t}\n\t}, {\n\t\tkey: 'astDebuggerStatement',\n\t\tvalue: function astDebuggerStatement(arrNode, retArr) {\n\t\t\tretArr.push('debugger;');\n\t\t\treturn retArr;\n\t\t}\n\t}, {\n\t\tkey: 'memberState',\n\t\tget: function get() {\n\t\t\treturn this.memberStates[this.memberStates.length - 1];\n\t\t}\n\t}]);\n\n\treturn CPUFunctionNode;\n}(BaseFunctionNode);","'use strict';\n\nvar utils = require('../../core/utils');\nvar kernelRunShortcut = require('../kernel-run-shortcut');\nvar Input = require('../../core/input');\nvar Texture = require('../../core/texture');\n\nfunction removeFnNoise(fn) {\n  if (/^function /.test(fn)) {\n    fn = fn.substring(9);\n  }\n  return fn.replace(/[_]typeof/g, 'typeof');\n}\n\nfunction removeNoise(str) {\n  return str.replace(/[_]typeof/g, 'typeof');\n}\n\nmodule.exports = function (gpuKernel, name) {\n  return '() => {\\n    ' + kernelRunShortcut.toString() + ';\\n    const utils = {\\n      allPropertiesOf: ' + removeNoise(utils.allPropertiesOf.toString()) + ',\\n      clone: ' + removeNoise(utils.clone.toString()) + ',\\n      splitArray: ' + removeNoise(utils.splitArray.toString()) + ',\\n      getArgumentType: ' + removeNoise(utils.getArgumentType.toString()) + ',\\n      getDimensions: ' + removeNoise(utils.getDimensions.toString()) + ',\\n      dimToTexSize: ' + removeNoise(utils.dimToTexSize.toString()) + ',\\n      flattenTo: ' + removeNoise(utils.flattenTo.toString()) + ',\\n      flatten2dArrayTo: ' + removeNoise(utils.flatten2dArrayTo.toString()) + ',\\n      flatten3dArrayTo: ' + removeNoise(utils.flatten3dArrayTo.toString()) + ',\\n      systemEndianness: \\'' + removeNoise(utils.systemEndianness()) + '\\',\\n      initWebGl: ' + removeNoise(utils.initWebGl.toString()) + ',\\n      isArray: ' + removeNoise(utils.isArray.toString()) + ',\\n      checkOutput: ' + removeNoise(utils.checkOutput.toString()) + '\\n    };\\n    const Utils = utils;\\n    const canvases = [];\\n    const maxTexSizes = {};\\n    let Texture = function() {};\\n    let Input = function() {}; \\n    class ' + (name || 'Kernel') + ' {\\n      constructor() {\\n        this.maxTexSize = null;\\n        this.argumentsLength = 0;\\n        this.constantsLength = 0;\\n        this._canvas = null;\\n        this._webGl = null;\\n        this.program = null;\\n        this.outputToTexture = ' + (gpuKernel.outputToTexture ? 'true' : 'false') + ';\\n        this.paramNames = ' + JSON.stringify(gpuKernel.paramNames) + ';\\n        this.paramTypes = ' + JSON.stringify(gpuKernel.paramTypes) + ';\\n        this.texSize = ' + JSON.stringify(gpuKernel.texSize) + ';\\n        this.output = ' + JSON.stringify(gpuKernel.output) + ';\\n        this.compiledFragShaderString = `' + gpuKernel.compiledFragShaderString + '`;\\n\\t\\t    this.compiledVertShaderString = `' + gpuKernel.compiledVertShaderString + '`;\\n\\t\\t    this.programUniformLocationCache = {};\\n\\t\\t    this.textureCache = {};\\n\\t\\t    this.subKernelOutputTextures = null;\\n\\t\\t    this.subKernelOutputVariableNames = null;\\n\\t\\t    this.uniform1fCache = {};\\n\\t\\t    this.uniform1iCache = {};\\n\\t\\t    this.uniform2fCache = {};\\n\\t\\t    this.uniform2fvCache = {};\\n\\t\\t    this.uniform2ivCache = {};\\n\\t\\t    this.uniform3fvCache = {};\\n\\t\\t    this.uniform3ivCache = {};\\n      }\\n      _getFragShaderString() { return this.compiledFragShaderString; }\\n      _getVertShaderString() { return this.compiledVertShaderString; }\\n      validateOptions() {}\\n      setupParams() {}\\n      setupConstants() {}\\n      setCanvas(canvas) { this._canvas = canvas; return this; }\\n      setWebGl(webGl) { this._webGl = webGl; return this; }\\n      setTexture(Type) { Texture = Type; }\\n      setInput(Type) { Input = Type; }\\n      ' + removeFnNoise(gpuKernel.getUniformLocation.toString()) + '\\n      ' + removeFnNoise(gpuKernel.build.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.run.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._addArgument.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._formatArrayTransfer.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getArgumentTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.getOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.renderOutput.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.updateMaxTexSize.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel._setupOutputTexture.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.detachTextureCache.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform1i.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2f.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform2iv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3fv.toString()) + '\\n\\t\\t  ' + removeFnNoise(gpuKernel.setUniform3iv.toString()) + '\\n    };\\n    return kernelRunShortcut(new Kernel());\\n  };';\n};","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = zeros;\nfunction zeros(size) {\n  return new Float32Array(size);\n}\n//# sourceMappingURL=zeros.js.map","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = max;\n\nvar _toArray = require('./to-array');\n\nvar _toArray2 = _interopRequireDefault(_toArray);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n *\n * @param values\n * @returns {number}\n */\nfunction max(values) {\n  return Math.max.apply(Math, (0, _toArray2.default)(values));\n}\n//# sourceMappingURL=max.js.map","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar R = typeof Reflect === 'object' ? Reflect : null\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  }\n\nvar ReflectOwnKeys\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n}\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction $getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return $getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = $getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  var args = [];\n  for (var i = 0; i < arguments.length; i++) args.push(arguments[i]);\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    ReflectApply(this.listener, this.target, args);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      if (typeof listener !== 'function') {\n        throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n      }\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar RunnerBase = require('../runner-base');\nvar WebGLKernel = require('./kernel');\nvar WebGLFunctionBuilder = require('./function-builder');\n\nmodule.exports = function (_RunnerBase) {\n\t_inherits(WebGLRunner, _RunnerBase);\n\n\t/**\n  * @constructor WebGLRunner\n  *\n \t * @extends RunnerBase\n  \t * @desc Instantiates a Runner instance for the kernel.\n  * \n  * @param {Object} settings - Settings to instantiate properties in RunnerBase, with given values\n  *\n  */\n\tfunction WebGLRunner(settings) {\n\t\t_classCallCheck(this, WebGLRunner);\n\n\t\tvar _this = _possibleConstructorReturn(this, (WebGLRunner.__proto__ || Object.getPrototypeOf(WebGLRunner)).call(this, new WebGLFunctionBuilder(), settings));\n\n\t\t_this.Kernel = WebGLKernel;\n\t\t_this.kernel = null;\n\t\treturn _this;\n\t}\n\n\t/**\n  * @memberOf WebGLRunner#\n  * @function\n  * @name getMode\n  *\n  * @desc Return the current mode in which gpu.js is executing.\n  * \n  * @returns {String} The current mode; \"cpu\".\n  *\n  */\n\n\n\t_createClass(WebGLRunner, [{\n\t\tkey: 'getMode',\n\t\tvalue: function getMode() {\n\t\t\treturn 'gpu';\n\t\t}\n\t}]);\n\n\treturn WebGLRunner;\n}(RunnerBase);"],"sourceRoot":""}